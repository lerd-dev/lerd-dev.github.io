{"version":3,"sources":["core/observer.js","core/pipe-input.js","core/vm.js","core/pipe-requires.js","components/textIde.js","components/decorator.js","components/pipe-name.js","components/htmlInspector.js","core/registry.js","core/lib/localStorage.js","core/value.js","core/patch.js","core/ptr.js","core/vcs.js","core/active-pipe.js","components/layers.js","components/navigation.js","core/helpers/pipe-to-seq.js","core/helpers/convertor.js","core/helpers/rangeHelper.js","vendor/convertFromRawToDraftState.js","core/helpers/from-draft.js","core/helpers/pipeHelper.js","components/versionControl.js","components/pane.js","core/vcs/pipe-search.js","components/root-container.js","aux/pipes.js","App.js","registerServiceWorker.js","index.js","core/null-pipe-value.js","core/pipe-push-value.js","core/rootVm.js","core/lib/input.js","core/pipe.js","core/pipe-value.js","core/lib/lerd-map.js","core/lib/location-query.js","core/override.js","core/external-dep.js","core/block.js","core/lib/post-data.js","core/reduce.js","core/base.js","components/depControl.js","components/pipe-suggest.js"],"names":["handlers","Observer","event","fn","push","callback","filter","item","data","forEach","Value","VM","pipe","parent","origin","this","rootVM","a","inputValue","undefined","requires","pipeRequires","NOTHING","dep","getDep","treeId","PIPE","toValue","value","input","_push","result","pull","_toValue","fire","vm","depPipe","originPipe","block","i","getPatches","patches","p","from","valid","patch","_pushToChunk","head","content","length","chunkResult","Patch","to","float_i","float_j","fromI","toI","Math","floor","j","k","_pushToIndex","atom","type","Pipe","childVM","List","toString","concat","Object","Array","requestedPipe","requesterId","vmForDep","callerVM","PipeValue","val","internals","set","get","VALUE","styleMap","textDecoration","dataByNode","node","contentState","dataNode","hasChildNodes","parentNode","closest","entityKey","dataset","offsetData","getEntity","getData","ii","condition","TextIde","props","model","textide","state","inspector","URL","window","location","searchParams","ifElse","activeSuggest","handlePastedText","text","html","editorState","console","log","newContent","Modifier","replaceText","getCurrentContent","getSelection","newState","EditorState","setState","handleBeforeInput","chars","setRangeHints","startOffset","endOffset","focusOffset","getFocusOffset","start","pipeHelper","getInitialOffset","getStartOffset","end","getEndOffset","isBackward","anchorOffset","key","getFirstBlock","getEntityAt","layer","cursorPosition","cursorOffset","actualPosition","ranges1","ranges","count","range","selection","oldselection","rerenderEntities","blockKey","getKey","targetRange","SelectionState","anchorKey","focusKey","newContentState","applyEntity","onChange","getBlockMap","toJSON","changeType","getLastChangeType","fromDraft","currentLayer","updateDraft","getAnchorOffset","hasFocus","currentContent","updateTree","tree","refresh","posToRangesMap","getText","map","slice","getRangeByPtr","focusTextOffset","focusNode","focusLayer","startTextOffset","endTextOffset","startLayer","startRange","endRange","anchorTextOffset","anchorNode","anchorLayer","onCopy","onFocus","e","onBlur","logState","convertToRaw","JSON","stringify","onKeyDown","keyCode","preventDefault","stopPropagation","forceSelection","setActiveSuggest","metaKey","ReactGA","category","action","alert","pipesToCommit","pipeSearch","changedPipes","commitMsg","prompt","desc","join","vcs","commit","controller","setActiveVM","ctrlKey","lastSelection","str","eval","contentStateWithEntity","createEntity","inserted","currentVM","newEntityKey","getLastCreatedEntityKey","insertText","bypass","storeRangeControlRef","bind","setDomEditorRef","ref","domEditor","changePipe","new","Entity","create","zaza","ptr","handleKeyCommand","command","updateState","prevProps","prevState","decorator","getDecorator","toDraft","offset","stateWithFocus","rangeControlRef","treePath","getIn","skipPipes","v","size","pushed","currentPipeResult","outGoingDepsNode","inComingDepsNodes","keySeq","toArray","sidelinks","Map","values","pipeList","pipeLink","first","treePath2","args","resolvedNode","Error","resolvedPipe","treeIds","localResolve","Registry","getId","getOrigin","toSeq","onClick","tpath","className","reload","customStyleMap","readOnly","style","float","body","reload2","states","runAllStates","React","Component","backgroundColor","IfElseView","Fragment","contentEditable","items","formattedCondition","level","identClass","TokenSpan","style2","style3","color","stc","attrs","prefix","data-offset-key","offsetkey","data-entity-key","children","suffix","NestedPipe","depsNode","data1","tmpPipe","autoFocus","onFocusOut","suggestion","inlineCreated","changeActiveSuggest","newVM","expandLevel","ConstView","strategyChar","contentBlock","findEntityRanges","character","strategyNestedPipe","strategyConst","CompositeDecorator","strategy","component","PipeName","snapshot","target","changeCurrentPipeDesc","HtmlInspector","createRef","useEffect","current","addEventListener","fromEntries","FormData","srcElement","postData","localStorageData","entries","localStorage","setItem","dangerouslySetInnerHTML","__html","code","navigator","userAgent","document","cookie","flakeIdGen","FlakeId","id","s","hash","charCodeAt","hashCode","base62","baseX","ids","WeakMap","object","has","newId","encode","next","localStorageKey","Input","localStorageGetDependency","localStorageGet","notifyPull","externalDep","ExternalDep","getInstance","localStorageGetInternal","parse","getItem","localStorageSet","localStorageSetResult","Override","process","Block","Ptr","b","getBlockByIdFromPipe","VCS","revisionId","pipesCache","firebase","apiKey","authDomain","projectId","db","signInAnonymously","currentUser","uid","collection","pipes","commitMessage","commitId","commitsCollection","doc","authorId","_savePipeContent","_savePipeDesc","_savePipeRequires","_savePipeDeps","_savePipePatches","persistedPipe","deps","equals","_updatePipeDeps","match","libPipes","ActivePipe","pipeId","changesCollection","where","orderBy","change","_deSerializeContent","activePipe","getActivePipe","block_id","condition_id","addPatch","setDep","removeDep","_saveChange","_serializeContent","reqDep","createdAt","Date","now","serializeContent","revision_id","created_at","_isPipePersisted","commitPipe","fromPtr","toPtr","loaded","load","getPipe","exports","Layer","setLayers","layers","Set","setActiveLayer","layerValue","overrideValue","isOverriden","toggleLayer","checked","Navigation","topVMs","topVM","setTopVMs","sidelink","childrenPipes","childrenView","childNode","childPipe","buildView","childrenPipes2","childrenView2","_list","childNode2","valueSeq","currentPath","higlight","linkClass","label","itemClassName","nodeLabel","defaultCollapsed","PipeToSeq","index","seq","findIndex","prevIsChar","isChar","setFirstFlags","to_condition","find","mapBlock","ifSeq","endPtr","elseSeq","newLevel","Convertor","raw","kv","entityMap","initialRaw","p2s","mutability","getAttributes","subscribe","finalCallback","unsubscribe","blocks","entityRanges","fromIndex","toIndex","mkRandom","fromIwide","toIwide","max","delta","min","mkToI","random","MAXI","RangeHelper","path","left","right","section","startPtr","fromLeft","fromRight","toLeft","toRight","_default","_toKey","setIn","inserts","nextRange","prevRange","chunk","_middle","minI","maxI","layerIndex","pop","rangeHead","shift","rangeTail","leftFound","_isInChunk","handleSection","ContentBlock","require","ContentBlockNode","ContentState","DraftEntity","DraftTreeAdapter","createCharacterList","decodeEntityRanges","decodeInlineStyleRanges","generateRandomKey","gkx","Immutable","invariant","experimentalTreeDataSupport","OrderedMap","decodeBlockNodeConfig","depth","characterList","decodeCharacterList","rawEntityRanges","rawInlineStyleRanges","inlineStyleRanges","hasOwnProperty","addKeyIfMissing","updateNodeStack","stack","nodes","parentRef","nodesWithParentRef","reverse","decodeRawBlocks","rawState","isTreeRawBlock","isArray","rawBlocks","fromRawStateToRawTreeState","reduce","blockMap","contentBlockNode","prevSibling","nextSibling","child","siblings","getChildKeys","indexOf","isValidBlock","decodeContentBlockNodes","decodeContentBlocks","fromRawTreeStateToRawState","convertFromRawToDraftState","rawEntityMap","keys","rawEntityKey","__replaceData","__create","decodeRawEntityMap","selectionState","isEmpty","createEmpty","selectionBefore","selectionAfter","Breakpoint","Item","Change","rangeHelper","middle","isPtrInRange","isNew","Range","range2","initialLength","items1","rawToItems","changeContent","items2","addChange","sharedEdges","sharedStartBlock","sharedEndBlock","toPatches","cleanTmpPatches","split","_char","addBreakpoints","flatMap","beforeRange","afterRange","firstRangeP","prefixRange","eq","lastRangeP","sufixRange","draftBlock","fromRangeIndex","includes","toRangeIndex","newBeforeRange","newAfterRange","persistedBreakpoints","changeIndex","beforeItemIndex","constructor","name","lastIndexOf","afterItemIndex","patchesFrom","patchesTo","r","newRange","newDeps","sharedBlocks","joinRanges","linkBlocks","merge","isPtrTouchRange","PipeHelper","pull2","initRanges","performPull","spaces","self","vmCallback","patchesBackup","breakpoints","allPatches","sort","spaces2","spaces1","breakpoint","spaceToBreakIndex","r1","r2","spaces3","ptr1","ptr2","range1","ranges2","x","range3","pipeInput","pipeTree","pullMap","parentDep","parentDepResult","pulledDeps","pulledBy","treeCallback","add","resultCallback","context","hasIn","pullCallback","key2","value2","pushResultCallback","parentGetDepCallback","pullDepCallback","pushIndexCallback","_assuredPull","pipePulled","getPtr","leftOffset","_getOffset","rightOffset","Number","isInteger","getFromPtr","getToPtr","getFrom","getTo","createWithContent","perform","getSelectionBefore","getSelectionAfter","toDraftRaw","VersionControl","localDb","getIndexes","indexes","getLocalCommits","commits","getLocalPipes","Pane","navigationRef","minSize","maxSize","defaultSize","href","createLayer","format","PipeSearch","addedPipes","vcsPipes","row","toLowerCase","pipeName","searchAdded","isChanged","RootContainer","aboutKey","rootKey","pathKey","langKey","isAbout","locationHash","fetchA","equialsA","fetchB","equialsB","lang","currentLang","urlHelper","concatA","concatB","perc20","perc5","pdv","mulA","mulB","discount","patch1","patch2","colors","pipeDep","removeDepPipe","createPipe","createStringPipe","getPipehelper","layerColors","actualValue","defaultPipe","resetCache","init","promises","cache","Promise","all","httpPipe","httpGet","hiPipe","urlPipe","httpFetch","stringPipe","localStoragePipe","rawLocalStorage","layerEmptyLocalStorage","logicalNot","defaultStoragePatch","routerPipe","locationQuery","dtestPipe","NONE","byePipe","emptyPipe","firstName","lastName","fullName","fullNameDemo","layersPipe","layer1","pipeWithConditionPatch","layersPipeNew","pipeWithConditionPatchNew","localStorageTest","mapTest","lerdMap","mapper","mapName","localStorageKeyValue","storageTodoItems","todoItems","isTodoItemsBlank","isPresent","emptyStorage","todoItemViewContent","todoItemView","todoListView","t1","todoView","addedItem","todoAdd","App","REACT_APP_ENV","enablePersistence","synchronizeTabs","auth","lerdMapTest","nestedSimplePipe","simplePipe","Switch","Route","render","params","initialize","pageview","pathname","search","Boolean","hostname","ReactDOM","getElementById","nullValue","PipePushValue","resolved","runStates","locationHashResult","locationQueryDep","locationQueryResult","postDataResult","payload","prototype","apply","deleteIn","resolvedInput","currentVm","itemVM","pushResult","NaN","query","overrides","delete","klass","reduceBody","reduceCondition","bodyPipe","conditionValue","incB","incA","dec","sumArgument","sum","conditionLteArgument","conditionLte","localVM","repipeB","repipeA","whileCond","methodName","Function","substr","decodeURI","prev","curr","assign","url","xhttp","XMLHttpRequest","resolve","reject","onreadystatechange","readyState","open","send","response","httpFetchResult","stringStatus","httpFetchStatus","stringResponse","upcase","toUpperCase","downcase","emptyString","DepControl","activeInput","helper","node1","nodePath","isSet","resolvedPipeVM","whiteSpace","editForm","display","PipeSuggest","suggestions","onSubmit","storeInputReference","getSuggestions","trim","autosuggest","inputProps","placeholder","newValue","method","onSuggestionsFetchRequested","onSuggestionSelected","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion"],"mappings":"+IAAIA,EAAW,GAEFC,EAAb,8FACE,SAAiBC,EAAOC,GAKtB,OAJAH,EAASI,KAAK,CACZF,MAAOA,EACPG,SAAUF,IAELA,IANX,yBASE,SAAmBA,GACjBH,EAAWA,EAASM,QAChB,SAASC,GACP,OAAIA,EAAKF,WAAaF,GACbI,OAbnB,kBAoBE,SAAYL,EAAOM,GACjBR,EAASS,SAAQ,SAASF,GACpBA,EAAKL,QAAUA,GACjBK,EAAKF,SAASG,UAvBtB,M,gKCG+BE,K,mMCOlBC,G,KAAb,WACE,WAAYC,EAAMC,EAAQC,GAAQ,oBAIhCC,KAAKH,KAAOA,EACZG,KAAKF,OAASA,GAAUG,IACxBD,KAAKD,OAASA,GAAU,CAACF,GAP7B,+EAUE,8BAAAK,EAAA,yDACMC,OAAaC,EACbJ,KAAKH,KAAKQ,WAAaC,IAAaC,QAF1C,sBAGUC,EAAMR,KAAKS,OAAO,CAACT,KAAKH,MAAOG,KAAKH,KAAMG,KAAKU,SAAUV,KAAKH,KAAKQ,WAAaC,IAAaK,MAAOX,KAAcA,iBAErGL,KALvB,gCAMyBa,EAAII,UAN7B,OAMMT,EANN,uCAgBSH,KAAKX,KAAKc,IAhBnB,gDAVF,+GA6BE,WAAWU,GAAX,eAAAX,EAAA,6DACEF,KAAKc,MAAQD,EADf,SAMuBb,KAAKe,MAAMf,KAAKH,KAAM,EAAGG,KAAKH,MANrD,cAMQmB,EANR,yBAoBSA,GApBT,gDA7BF,mHAoDE,sBAAAd,EAAA,kEACSF,KADT,SAC6BA,KAAKiB,OADlC,iDACcC,SADd,iEApDF,8EAwDE,SAAWrB,EAAME,GACfb,IAASiC,KAAK,UAAW,CAACC,GAAIpB,KAAMqB,QAASxB,EAAMyB,WAAYvB,MAzDnE,0DA6DE,WAAYwB,EAAOC,EAAG3B,EAAMiB,GAA5B,6BAAAZ,EAAA,6DACEhB,IAASiC,KAAK,UAAW,CAACC,GAAIpB,KAAMH,KAAMA,EAAM0B,MAAOA,EAAOC,EAAGA,EAAGV,MAAOA,IAD7E,SAKwBjB,EAAK4B,aAL7B,OAKQC,EALR,qBAMgBA,GANhB,4DAMWC,EANX,aAOQA,EAAEC,KAAKL,QAAUA,IAAU,IAAMC,EAAIA,GAAKG,EAAEC,KAAKJ,EAAIA,EAAIG,EAAEC,KAAKJ,IAPxE,uCAOoFG,EAAEE,MAAM7B,KAAMH,GAPlG,6DAQMiC,EAAQH,EARd,wKAeMG,EAfN,kCAgBqB9B,KAAK+B,aAAaR,EAAOC,EAAGM,EAAMF,KAAKJ,EAAGV,EAAOjB,GAhBtE,eAgBQmC,EAhBR,iBAiBmBhC,KAAKe,MAAMe,EAAO,EAAGjC,EAAMmC,GAjB9C,QAiBIhB,EAjBJ,gDAmB4BhB,KAAK+B,aAAaR,EAAOC,EAAGD,EAAMU,QAAQC,OAAQpB,EAAOjB,GAnBrF,WAmBQsC,EAnBR,SAoBQZ,aAAiBa,KApBzB,kCAqBqBpC,KAAKe,MAAMQ,EAAMc,GAAGd,MAAOA,EAAMc,GAAGb,EAAG3B,EAAMsC,GArBlE,QAqBMnB,EArBN,+BAwBMA,EAASmB,EAxBf,eA2BEjD,IAASiC,KAAK,iBAAkB,CAACC,GAAIpB,KAAMH,KAAMA,EAAM0B,MAAOA,EAAOC,EAAGA,EAAGV,MAAOA,EAAOE,OAAQA,IAC7FO,IAAU1B,GACZX,IAASiC,KAAK,YAAa,CAACC,GAAIpB,KAAMH,KAAMG,KAAKH,KAAMmB,OAAQA,IA7BnE,kBA+BSA,GA/BT,gEA7DF,8HA2GE,WAAmBO,EAAOe,EAASC,EAASzB,EAAOjB,GAAnD,yBAAAK,EAAA,sDACMT,EAAO,CAAC2B,GAAIpB,KAAMH,KAAMA,EAAM0B,MAAOA,EAAOiB,MAAOF,EAASG,IAAKF,EAASzB,MAAOA,GACrF5B,IAASiC,KAAK,gBAAiB1B,GAE3B+B,EAAIkB,KAAKC,MAAML,GACfM,EAAIF,KAAKC,MAAMJ,GAEfvB,EAASF,EACL+B,EAAIrB,EARd,YAQiBqB,EAAID,GAAKC,EAAItB,EAAMU,QAAQC,QAR5C,iCASmBlC,KAAK8C,aAAavB,EAAOsB,EAAG7B,GAT/C,OASIA,EATJ,OAWQvB,EAAO,CAAC2B,GAAIpB,KAAMH,KAAMA,EAAM0B,MAAOA,EAAOC,EAAGqB,EAAG7B,OAAQA,EAAQwB,MAAOF,EAASG,IAAKF,GAC3FrD,IAASiC,KAAK,KAAM1B,GAZxB,QAQoDoD,IARpD,gDAcS7B,GAdT,iDA3GF,gIA4HE,WAAmBO,EAAOC,EAAGV,GAA7B,uBAAAZ,EAAA,yDACM6C,EAAOxB,EAAMU,QAAQT,GACrBwB,SAAcD,IAEdA,aAAgBE,KAJtB,wBAKQC,EAAU,IAAItD,EAAGmD,EAAM/C,KAAMmD,eAAK,CAAC3B,EAAGD,KAEtC9B,EAAO,CAAC2B,GAAI8B,EAAS3B,MAAOwB,EAAMjC,MAAOA,GAC7C5B,IAASiC,KAAK,gBAAiB1B,GARnC,SAUiByD,EAAQ7D,KAAKyB,GAV9B,mDAWa,WAAakC,EAX1B,kCAY2BhD,KAAKkB,SAASJ,GAZzC,WAaQ,qBADAX,EAZR,kDAca4C,GAdb,iCAgBa5C,EAAWiD,WAAWC,OAAON,IAhB1C,qCAiBaA,aAAgBO,QAAUP,EAAK1D,MAjB5C,sBAkBO0D,aAAgBQ,OAlBvB,0CAkBqCR,GAlBrC,iCAoBWA,EAAK1D,KAAKW,KAAKc,MAAOd,KAAM,CAACwB,EAAGD,KApB3C,iCAuBWwB,GAvBX,iDA5HF,+EAuJE,SAAOhD,EAAQyD,EAAeC,EAAaC,EAAUC,GAQnD,IAAInD,EAAMR,KAAKH,KAAKY,OAAOV,EAAQyD,GAanC,OALEhD,EAPGA,EAOG,IAAIoD,IAAUF,GAAYC,EAAUnD,GANtCT,EAAOmC,OAAS,EACZlC,KAAKS,OAAO,GAAI+C,EAAeC,EAAaC,EAAU1D,MAEtDA,KAAKF,OAAOW,OAAOT,KAAKD,OAAQyD,EAAeC,EAAaC,EAAU1D,MAMhFd,IAASiC,KAAK,YAAa,CAACsC,YAAaA,EAAarC,GAAIpB,KAAMD,OAAQA,EAAQyD,cAAeA,EAAehD,IAAKA,IAE5GA,IA5KX,6DA6LE,WAAeM,GAAf,eAAAZ,EAAA,6DAIIc,EADEF,aAAiBnB,IACVmB,EAAMF,UAYNE,EAhBb,kBAmBSE,GAnBT,2CA7LF,6EAmNE,SAAS6C,GACP,MAAG,qBAAuBA,EACjB,GAEAA,IAvNb,oBA2NE,WACE,OAAI7D,KAAKD,kBAAkBoD,OAClBnD,KAAKF,OAAOY,SAAS2C,OAAOrD,KAAKD,QAAQsD,OAAOrD,KAAKH,MAErDG,KAAKF,OAAOY,SAAS2C,OAAOrD,KAAKH,QA/N9C,kCAkOE,SAAqBA,EAAMgB,GACzBb,KAAK8D,UAAY9D,KAAK8D,UAAUC,IAAIlE,EAAMgB,KAnO9C,kCAsOE,SAAqBhB,GACnB,OAAOG,KAAK8D,UAAUE,IAAInE,OAvO9B,O,gCCZA,IAGMS,EAAe,CAACC,QAHN,EAGe0D,MAFjB,EAEwBtD,KADzB,GAGEL,O,uxFCWT4D,SAAW,CACf,cAAiB,CACfC,eAAgB,iBAIdC,WAAY,SAACC,EAAMC,GACvB,IAAMC,GAAYF,EAAKG,gBAAkBH,EAAOA,EAAKI,YAAYC,QAAQ,qBACzE,IAAIH,EACF,MAAO,EAAC,OAAOnE,GAEjB,IAAMuE,EAAYJ,EAASK,QAAQD,UAC7BE,EAAaP,EAAaQ,UAAUH,GAAWI,UACrD,MAAO,CAACF,EAAWG,GAAIH,EAAWtD,MAAM0D,YAIrBC,Q,8SACnB,iBAAYC,OAAQ,IAAD,kJACjB,uBAAMA,OACNA,MAAMC,MAAMC,QAAZ,qIAYA,MAAKC,MAAQ,CACXC,UAAqE,SAAzD,IAAIC,IAAIC,OAAOC,UAAWC,aAAa3B,IAAI,UACvD4B,QAAQ,EACRC,cAAe,MAGjB,MAAKC,iBAAmB,SAACC,EAAMC,EAAMC,GACnCC,QAAQC,IAAI,SACZD,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GAEZ,IAAII,EAAaC,+CAASC,YAAYL,EAAYM,oBAAqBN,EAAYO,eAAgBT,GAC/FU,EAAWC,kDAAYrH,KAAK4G,EAAaG,EAAY,qBAEzD,OADA,MAAKO,SAAS,CAACV,YAAaQ,KACrB,GAGT,MAAKG,kBAAoB,SAACC,EAAOZ,GAI/B,OAHAC,QAAQC,IAAI,+CAEZD,QAAQC,IAAIU,IACL,GAGT,MAAKC,cAAgB,SAACb,GAEpB,IAIIc,EAEAC,EANEC,EAAchB,EAAYO,eAAeU,iBACzC5C,EAAe2B,EAAYM,oBAE3BY,EAAQ,MAAKhC,MAAMiC,WAAWC,iBAAiBpB,EAAYO,eAAec,iBAAkBrB,EAAYM,qBAExGgB,EAAM,MAAKpC,MAAMiC,WAAWC,iBAAiBpB,EAAYO,eAAegB,eAAgBvB,EAAYM,qBAE1GL,QAAQC,IAAI,kBAAmBV,OAAOe,gBACtCN,QAAQC,IAAI,gBAAiBV,OAAOe,gBACpCN,QAAQC,IAAI,uBAAwBgB,GACpCjB,QAAQC,IAAI,qBAAsBoB,GAC9BtB,EAAYO,eAAeiB,YAC7BV,EAActB,OAAOe,eAAeS,YACpCD,EAAYvB,OAAOe,eAAekB,eAElCX,EAActB,OAAOe,eAAekB,aACpCV,EAAYvB,OAAOe,eAAeS,aAEpC,IAAMU,EAAMrD,EAAasD,gBAAgBC,YAAYZ,EAAcF,GAE7De,EADOxD,EAAaQ,UAAU6C,GAAK5C,UACtBxD,MAAM0D,UAEzBiB,QAAQC,IAAI,8BAA+BY,GAC3Cb,QAAQC,IAAI,4BAA6Ba,GAIzC,IAHA,IAAMe,EAAiBd,EACjBe,EAAe,EAAIjB,EACrBkB,EAAiB,EACbzG,EAAI,EAAGA,EAAIuG,EAAgBvG,IACjC0E,QAAQC,IAAI,cAAe7B,EAAaQ,UAAUR,EAAasD,gBAAgBC,YAAYrG,IAAIuD,gBACP3E,IAApFkE,EAAaQ,UAAUR,EAAasD,gBAAgBC,YAAYrG,IAAIuD,UAAUnC,GAAiBqF,IAGrG,IAAMC,EAAU,MAAK/C,MAAMiC,WAAWe,OAAOF,GACzCC,EAAQE,MAEZ,IAAMD,EAASD,EAAQF,GACvB9B,QAAQC,IAAI,oBAAqB8B,EAAgBD,EAAcG,EAAQ,MAAKhD,MAAMiC,WAAWe,QAC7FA,EAAOzI,SAAQ,SAAA2I,GACTA,EAAM9G,MAAM0D,aAElB,MAAKqD,UAAY,CAACnB,QAAOI,MAAKR,cAAaC,YAAWc,QAAOK,UAC7D1C,OAAO8C,aAAe9C,OAAOe,gBAG/B,MAAKgC,iBAAmB,SAACvC,GAEvB,IAAIgB,EAAchB,EAAYO,eAAeU,iBACzC5C,EAAe2B,EAAYM,oBAE3BkC,EAAWnE,EAAasD,gBAAgBc,SACxCf,EAAMrD,EAAasD,gBAAgBC,YAAYZ,GAC/C0B,EAAc,IAAIC,qDAAe,CACnCC,UAAWJ,EACXf,aAAcT,EACd6B,SAAUL,EACVxB,YAAaA,IAGX8B,EAAkB1C,+CAAS2C,YAAY1E,EAAcqE,EAAahB,GACtE,OAAOjB,kDAAYrH,KAAK4G,EAAa8C,EAAiB,iBAGxD,MAAKE,SAAL,wPAAgB,WAAOhD,GAAP,uHAAA/F,EAAA,yDAwBV+F,EAAYM,oBAAoB2C,gBAAkB,MAAK5D,MAAMW,YAAYM,oBAAoB2C,cAxBnF,wBAyBZhD,QAAQC,IAAI,WAAYF,EAAYM,oBAAoB4C,UACpDC,EAAanD,EAAYoD,oBAC7BnD,QAAQC,IAAI,gDAAiDiD,GAC7D,MAAKjE,MAAMiC,WAAWkC,UAAUrD,EAAYM,oBAAqB,MAAKpB,MAAMC,MAAMmE,mBAAgBnJ,EAAW,MAAKoG,aAAa,MAAKlB,MAAMW,YAAamD,IA5B3I,SA6BkB,MAAKjE,MAAMiC,WAAWoC,YAAYvD,EAAYM,qBA7BhE,OA6BNwC,EA7BM,OA8BK,IAAIH,qDAAe,CAClCC,UAAW5C,EAAYM,oBAAoBqB,gBAAgBc,SAC3DhB,aAAczB,EAAYO,eAAeiD,kBAAkB,EAC3DX,SAAU7C,EAAYM,oBAAoBqB,gBAAgBc,SAC1DzB,YAAahB,EAAYO,eAAeU,iBAAiB,EACzDO,YAAY,EACZiC,UAAU,IAEZjD,EAAWC,kDAAY3C,IAAIkC,EAAa,CAAC0D,eAAgBZ,IAKzD,MAAKpC,SAAS,CAAEV,YAAaQ,IAAW,eA3C5B,wBAoDZA,EAAWR,EACX,MAAKU,SAAS,CAAEV,YAAaQ,IArDjB,QAuDd,MAAKtB,MAAMyE,WAAW,MAAKzE,MAAMiC,WAAWyC,MAvD9B,4CAAhB,kCAAA7J,KAAA,eA0DA,MAAK8J,QAAL,uOAAe,kIAAA5J,EAAA,sEACiB,MAAKiF,MAAMiC,WAAWoC,YAAY,MAAKlE,MAAMW,YAAYM,qBAD1E,OACPwC,EADO,OAEPtC,EAAWC,kDAAY3C,IAAI,MAAKuB,MAAMW,YAAa,CAAC0D,eAAgBZ,IAC1E,MAAKpC,SAAS,CAAEV,YAAaQ,IAHhB,2CAMf,MAAKD,aAAe,SAACP,EAAamD,GAIhC,IAHA,IAAM9E,EAAe2B,EAAYM,oBAE7BwD,EAAiB,GACbvI,EAAI,EAAIA,EAAI8C,EAAasD,gBAAgBoC,UAAU9H,OAAQV,IAAK,CACtE,IAAMmD,EAAYL,EAAasD,gBAAgBC,YAAYrG,GACrD/B,EAAO,MAAK6F,MAAMW,YAAYM,oBAAoBzB,UAAUH,GAAWI,UACvEkF,EAAM,QACG7J,IAAXX,EAAKmD,GACPqH,EAAI,GAAK,MAAK9E,MAAMiC,WAAWe,OAAO1I,EAAKmD,GAAGsH,OAAO,GAAG,GAAGA,OAAO,GAAG,GACrED,EAAI,GAAK,MAAK9E,MAAMiC,WAAWe,OAAO1I,EAAKmD,EAAE,GAAG,GAAG,KAEnDqH,EAAI,GAAK,MAAK9E,MAAMiC,WAAW+C,cAAc1K,EAAK8B,MAAMK,MACxDqI,EAAI,GAAK,MAAK9E,MAAMiC,WAAW+C,cAAc1K,EAAK8B,MAAMc,KAE1D0H,EAAevI,GAAKyI,EAEtBF,EAAeA,EAAe7H,QAAU,CAAC,MAAKiD,MAAMiC,WAAWe,OAAO+B,OAAO,GAAG,GAAGA,OAAO,GAAG,GAAGA,OAAO,GAAG,IAC1GH,GAAgB,GAAK,CAAC,KAAM,MAAK5E,MAAMiC,WAAWe,OAAO,GAAG,GAAG,IAG/D,IAAMG,EAAY7C,OAAOe,eACrB4D,EAAkB3E,OAAOe,eAAeS,YAtBG,EAuBf7C,WAAWkE,EAAU+B,UAAW/F,GAvBjB,6HAuB1C2C,EAvB0C,KAuB7BqD,EAvB6B,MAwB3B,IAAhBrD,IACkD,IAAhDhB,EAAYO,eAAeU,kBAC7BD,GAAe,EACfmD,EAAkB,IAElBnD,EAAc3C,EAAasD,gBAAgBoC,UAAU9H,OACrDkI,EAAkB,IAItB,IAcIrD,EAAaC,EAAWuD,EAAiBC,EAAmFC,EAkB5HC,EAAYC,EAhCZC,EAAmBnF,OAAOe,eAAekB,aAlCE,EAmCbtD,WAAWkE,EAAUuC,WAAYvG,GAnCpB,6HAmC1CoD,EAnC0C,KAmC5BoD,EAnC4B,KA2F/C,OAvDqB,IAAjBpD,IACmD,IAAjDzB,EAAYO,eAAeiD,mBAC7B/B,GAAgB,EAChBkD,EAAmB,IAEnBlD,EAAepD,EAAasD,gBAAgBoC,UAAU9H,OACtD0I,EAAmB,IAIvB1E,QAAQC,IAAI,UAAWmC,EAAU+B,UAAWpD,EAAamD,EAAiB9B,EAAUuC,WAAYnD,EAAckD,GAG1G3D,EAAcS,GAAiBT,IAAgBS,GAAgB0C,EAAkBQ,GACnF1E,QAAQC,IAAI,eACZY,EAAcW,EACdV,EAAYC,EACZsD,EAAkBK,EAClBJ,EAAgBJ,EAChBK,EAAaK,EACFR,IAEXvD,EAAcE,EACdD,EAAYU,EACZ6C,EAAkBH,EAClBI,EAAgBI,EAChBH,EAAaH,EACFQ,GAKbJ,EAAaX,EAAehD,GAAawD,GACzCI,EAAWZ,EAAe/C,GAAWwD,GAEjCzD,IAAgBC,GAAauD,IAAoBC,IAChC,wBAAfpB,EACsB,IAApBmB,EACFG,EAAaX,EAAehD,GAAa,IAEzC2D,EAAaX,EAAehD,EAAc,GAAG,GAC7C4D,EAAWZ,EAAehD,EAAc,GAAG,IAGvB,qBAAfqC,IACiB,IAApBmB,GACFG,EAAaX,EAAehD,EAAc,GAAG,GAC7C4D,EAAWZ,EAAehD,EAAc,GAAG,IAE3C4D,EAAWZ,EAAehD,GAAa,KAI7Cb,QAAQC,IAAI,iBAAkBuE,EAAYC,EAAU5D,EAAaC,EAAWuD,EAAiBC,GAEtF,CAACE,aAAYC,WAAU5D,cAAaC,YACzCc,MAAO2C,IAyDX,MAAKM,OAAS,SAAC7K,KAIf,MAAK8K,QAAU,SAACC,GACd/E,QAAQC,IAAI,kBAGd,MAAK+E,OAAS,SAACD,GACb/E,QAAQC,IAAI,iBAGd,MAAKgF,SAAW,WACd,IAAMlJ,EAAU,MAAKqD,MAAMW,YAAYM,oBACvCL,QAAQC,IAAIiF,2DAAanJ,IACzBiE,QAAQC,IAAIkF,KAAKC,UAAUF,2DAAanJ,MAG1C,MAAKsJ,UAAL,4PAAiB,kBAAON,GAAP,0iBAAA/K,EAAA,2FACfgG,QAAQC,IAAR,eAAoB8E,EAAEtD,MAClB,KAAOsD,EAAEO,QAFE,yBAGbP,EAAEQ,iBACFR,EAAES,kBAEEzE,YAAc,MAAK3B,MAAMW,YAAYO,eAAeU,iBACpD5C,aAAe,MAAKgB,MAAMW,YAAYM,oBACtCkC,SAAWnE,aAAasD,gBAAgBc,SACxCf,IAAMrD,aAAasD,gBAAgBC,YAAYZ,aAI/C0B,YAAc,IAAIC,qDAAe,CACnCC,UAAWJ,SACXf,aAAcT,YACd6B,SAAUL,SACVxB,YAAaA,cAEXb,WAAaC,+CAAS2C,YAAY1E,aAAcqE,YAAahB,KAC7DlB,SAAWC,kDAAYrH,KAAK,MAAKiG,MAAMW,YAAaG,WAAY,gBACpE,MAAK6C,SAASvC,kDAAYiF,eAAelF,SAAUkC,cAEnD,MAAKiD,iBAAiB,MAvBT,mCAyBN,MAAQX,EAAEtD,MAAOsD,EAAEY,QAzBb,yBA0BbC,yCAAQ3M,MAAM,CACZ4M,SAAU,OACVC,OAAQ,cAEVf,EAAEQ,iBACFR,EAAES,kBACIzJ,QAAU,MAAKqD,MAAMW,YAAYM,oBACnCtE,QAAQiH,cAAcd,QAAU,EAClC6D,MAAM,0CAKAC,cAAgB,MAAK/G,MAAMC,MAAM+G,WAAWC,eAC9CF,cAAchK,OAAS,IACnBmK,UAAYC,OAAO,oBAAD,OAAqBJ,cAAcjC,KAAI,SAAApK,GAAI,oBAAWA,EAAK0M,SAAQC,KAAK,MAC5FH,YACF,MAAKlH,MAAMsH,IAAIC,OAAOR,cAAeG,WACrC,MAAKlH,MAAMwH,WAAWC,YAAY,MAAKzH,MAAMiC,WAAWhG,OA5CjD,mCAyDJ,MAAQ6J,EAAEtD,MAAOsD,EAAE4B,QAzDf,yBA0Db5B,EAAEQ,iBACFR,EAAES,kBACEzE,aAAc,MAAK3B,MAAMW,YAAYO,eAAeU,iBACpD5C,cAAe,MAAKgB,MAAMW,YAAYM,oBACtCkC,UAAWnE,cAAasD,gBAAgBc,SACxCf,KAAMrD,cAAasD,gBAAgBC,YAAYZ,cAI/C0B,aAAc,IAAIC,qDAAe,CACnCC,UAAWJ,UACXf,aAAcT,aACd6B,SAAUL,UACVxB,YAAaA,eAEXb,YAAaC,+CAAS2C,YAAY1E,cAAcqE,aAAahB,MAC7DlB,UAAWC,kDAAYrH,KAAK,MAAKiG,MAAMW,YAAaG,YAAY,gBAEpE,MAAK0G,cAAgB,MAAKtG,aAAa,MAAKlB,MAAMW,YAAa,oBAC/D,MAAKgD,SAASxC,WAEf,MAAKmF,iBAAiBjE,MA/ER,mCAgFJ,MAAQsD,EAAEtD,MAAOsD,EAAE4B,QAhFf,gCAiFbf,yCAAQ3M,MAAM,CACZ4M,SAAU,OACVC,OAAQ,sBAEVf,EAAEQ,iBACFR,EAAES,kBACIqB,IAAMT,OAAO,uBACbzL,MAAQmM,KAAKD,KAEf9K,SAAU,MAAKqD,MAAMW,YAAYM,oBACjC0G,uBAAyBhL,SAAQiL,aAAa,QAAS,YAAa,CAACnK,KAAM,CAAClC,OAAQsM,UAAU,EAAM/L,GAAI,IAAIxB,yCAAGiB,MAAO,MAAKsE,MAAMC,MAAMgI,UAAWjK,qDAAK,OACrJkK,aAAeJ,uBAAuBK,0BAExC7E,WAAWxG,SAAQ2F,gBAAgBc,SACnCzB,cAAc,MAAK3B,MAAMW,YAAYO,eAAeU,iBACpDyB,cAAc,IAAIC,qDAAe,CACnCC,UAAWJ,WACXf,aAAcT,cACd6B,SAAUL,WACVxB,YAAaA,gBAEXb,aAAaC,+CAASkH,WAAWN,uBAAwBtE,cAAa,SAAKvI,EAAWiN,cAC1F,MAAKlI,MAAMiC,WAAWkC,UAAUlD,aAAY,MAAKjB,MAAMC,MAAMmE,mBAAgBnJ,EAAW,MAAKoG,aAAa,MAAKlB,MAAMW,YAAa,sBAvGrH,kBAwGiB,MAAKd,MAAMiC,WAAWoC,YAAY,MAAKlE,MAAMW,YAAYM,qBAxG1E,QAwGPwC,gBAxGO,eAyGPtC,WAAWC,kDAAY3C,IAAI,MAAKuB,MAAMW,YAAa,CAAC0D,eAAgBZ,kBAC1E,MAAKpC,SAAS,CAAEV,YAAaQ,aA1GhB,mCA2GL,MAAQwE,EAAEtD,MAAOsD,EAAE4B,QA3Gd,gCA4Gbf,yCAAQ3M,MAAM,CACZ4M,SAAU,OACVC,OAAQ,gBAEVf,EAAEQ,iBACFR,EAAES,kBAEEzJ,UAAU,MAAKqD,MAAMW,YAAYM,oBACjC0G,wBAAyBhL,UAAQiL,aAAa,QAAS,YAAa,CAACnK,KAAMyK,2CAAQL,UAAU,EAAM/L,GAAI,IAAIxB,yCAAG4N,2CAAQ,MAAKrI,MAAMC,MAAMgI,UAAWjK,qDAAK,OACrJkK,cAAeJ,wBAAuBK,0BAExC7E,WAAWxG,UAAQ2F,gBAAgBc,SACnCzB,cAAc,MAAK3B,MAAMW,YAAYO,eAAeU,iBACpDyB,cAAc,IAAIC,qDAAe,CACnCC,UAAWJ,WACXf,aAAcT,cACd6B,SAAUL,WACVxB,YAAaA,gBAEXb,aAAaC,+CAASkH,WAAWN,wBAAwBtE,cAAa,SAAKvI,EAAWiN,eAC1F,MAAKlI,MAAMiC,WAAWkC,UAAUlD,aAAY,MAAKjB,MAAMC,MAAMmE,mBAAgBnJ,EAAW,MAAKoG,aAAa,MAAKlB,MAAMW,YAAa,sBAhIrH,kBAiIiB,MAAKd,MAAMiC,WAAWoC,YAAY,MAAKlE,MAAMW,YAAYM,qBAjI1E,QAiIPwC,iBAjIO,eAkIPtC,WAAWC,kDAAY3C,IAAI,MAAKuB,MAAMW,YAAa,CAAC0D,eAAgBZ,mBAC1E,MAAK6C,iBAAiByB,eACtB,MAAK1G,SAAS,CAAEV,YAAaQ,aApIhB,mFAAjB,sCAAAzG,KAAA,eA0IA,MAAKyN,qBAAuB,MAAKA,qBAAqBC,KAA1B,sIAC5B,MAAKC,gBAAkB,SAAAC,GACrB,MAAKC,UAAYD,GAMnB,MAAKE,WAAL,wPAAkB,WAAOjO,GAAP,mIAAAK,EAAA,6DACZ+B,EAAU,MAAKqD,MAAMW,YAAYM,oBACjCU,EAAc,MAAK3B,MAAMW,YAAYO,eAAeU,iBAClDvC,EAAY1C,EAAQ2F,gBAAgBC,YAAYZ,IAChDxH,EAAO,MAAK6F,MAAMW,YAAYM,oBAAoBzB,UAAUH,GAAWI,WACpExD,MAAMwM,IACbtO,EAAK8B,MAAMU,QAAQxC,EAAK+B,GAAK3B,GAEzBwN,EAAeW,6CAAOC,OAAO,QAAS,YAAa,CACrDlL,KAAMlD,EACNuB,GAAI,IAAIxB,yCAAGC,EAAM,MAAKsF,MAAMC,MAAMgI,UAAWjK,qDAAK,KAClD+K,KAAM,IAEJzF,EAAWxG,EAAQ2F,gBAAgBc,SACnCC,EAAc,IAAIC,qDAAe,CACnCC,UAAWJ,EACXf,aAAcT,EACd6B,SAAUL,EACVxB,YAAaA,EAAc,IAE7BhF,EAAUoE,+CAAS2C,YAAY/G,EAAS0G,EAAa0E,GACrD,MAAKlI,MAAMiC,WAAWkC,UAAUrH,EAAS,MAAKkD,MAAMC,MAAMmE,mBAAgBnJ,EAAW,MAAK0M,gBArB5E,SAuBc,MAAK3H,MAAMiC,WAAWoC,YAAYvH,GAvBhD,OAuBV8G,EAvBU,OAwBVtC,EAAWC,kDAAY3C,IAAI,MAAKuB,MAAMW,YAAa,CAAC0D,eAAgBZ,IAC1E,MAAKpC,SAAS,CAAEV,YAAaQ,IAzBb,4CAAlB,kCAAAzG,KAAA,eA4BA,MAAK4L,iBAAmB,SAACuC,GACvB,MAAKxH,SAAS,CAACd,cAAesI,KAEhC,MAAKC,iBAAmB,MAAKA,iBAAiBV,KAAtB,sIA9fP,M,kKAigBnB,SAAiBW,GAIf,GAHAnI,QAAQC,IAAI,WACZD,QAAQC,IAAIkI,GAEI,gBAAZA,EAA2B,CAG7B,IAAI5F,EAAWzI,KAAKsF,MAAMW,YAAYM,oBAAoBqB,gBAAgBc,SACtEzB,EAAcjH,KAAKsF,MAAMW,YAAYO,eAAeU,iBACpDyB,EAAc,IAAIC,qDAAe,CACnCC,UAAWJ,EACXf,aAAcT,EACd6B,SAAUL,EACVxB,YAAaA,IAEXb,EAAaC,+CAASkH,WAAWvN,KAAKsF,MAAMW,YAAYM,oBAAqBoC,EAAa,MAC1FlC,EAAWC,kDAAYrH,KAAKW,KAAKsF,MAAMW,YAAaG,EAAY,qBASpE,OAPApG,KAAKiJ,SAASvC,kDAAYiF,eAAelF,EAAU,IAAImC,qDAAe,CACpEC,UAAWJ,EACXf,aAAcT,EAAY,EAC1B6B,SAAUL,EACVxB,YAAaA,EAAY,MAGpB,UAET,MAAO,gB,+BAQT,WACEjH,KAAKsO,gB,gCAGP,SAAmBC,EAAWC,GACxBxO,KAAKmF,QAAUoJ,GACjBvO,KAAKsO,gB,iRAIT,0IAAApO,EAAA,6DACMkH,EAAapH,KAAKmF,MAAMiC,WAExBqH,EAAYC,mDAAa,CAACtJ,MAAOpF,KAAKmF,MAAMC,MAAOuH,WAAY3M,KAAKmF,MAAMwH,WAAYvF,WAAYA,IAHxG,SAIoBA,EAAWuH,QAAQF,GAJvC,OAIMnJ,EAJN,OAQIsJ,EADE5O,KAAKsF,MAAM8H,WAAapN,KAAKsF,MAAM8H,UAAU1M,WAAaV,KAAKmF,MAAMC,MAAMgI,UAAU1M,SAC9EV,KAAKsF,MAAMW,YAAYO,eAAeU,iBAEtC,EAGPuB,EAAWnD,EAAMiB,oBAAoBqB,gBAAgBc,SACrDmG,EAAiBnI,kDAAYiF,eAAerG,EAAO,IAAIsD,qDAAe,CACxEC,UAAWJ,EACXf,aAAckH,EACd9F,SAAUL,EACVxB,YAAa2H,KAGf5O,KAAK2G,SAAS,CAAEV,YAAa4I,IArB/B,gD,wFAwBA,SAAqBjB,GACnB5N,KAAK8O,gBAAkBlB,I,8BAGzB,WACE,IAAImB,EAAW/O,KAAKmF,MAAMC,MAAMgI,UAAUtN,OAAOY,SAAS2C,OAAO,WAAWA,OAAOF,qDAAKnD,KAAKmF,MAAMC,MAAMgI,UAAUrN,SAEnH,OADeC,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMD,K,+BAIlD,SAAkBE,GAChB,IAAIF,EAAW/O,KAAKmF,MAAMC,MAAMgI,UAAU1M,SAAS2C,OAAO,WACtDgB,EAAOrE,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMD,GAC5C,GAAK1K,EACL,OAAOA,EAAK9E,QAAO,SAAC2P,EAAGrM,GAAJ,OAAoB,IAAXA,EAAEsM,U,oBAGhC,WAAU,IAAD,SACP,IAAKnP,KAAKsF,MAAMW,YAAa,OAAO,iFAEpC,IAAIvF,EAASV,KAAKmF,MAAMC,MAAMgI,UAAU1M,SAEpC0O,EAASpP,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMtO,EAAO2C,OAAO,WAGtDgM,EAAoBrP,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMtO,EAAO2C,OAAO,WACnEiM,EAAmBtP,KAAKsP,mBACxBC,EAAoBvP,KAAKuP,kBAAL,OAAuBD,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAkBE,gBAAzC,aAAuB,EAA4BC,WACvEC,GAAaH,GAAqBI,uDAAO1F,KAAI,SAAC2F,EAAQC,GAC1D,IAAMC,EAAWD,EAASE,QACtBC,EAAY,EAAK7K,MAAMC,MAAMgI,UAAU1M,SAAS2C,OAAO,WAAWA,OAAOwM,GAGvEI,EAFS,EAAK9K,MAAMiC,WAAWyC,KAAKmF,MAAMgB,GAE1B/F,KAAI,SAACiG,EAAc1M,GACvC,GAAI0M,EAAaf,KAAO,EACtB,MAAM,IAAIgB,MAAM,0BAElB,IAAIC,EAAeF,EAAaV,SAASO,QACrCM,EAAUH,EAAalB,MAAM,CAACoB,IAE9BE,EAAe,EAAKnL,MAAMiC,WAAWvH,KAAKY,OAAO,GAAI+C,IAAkB,GAG3E,OAFK8M,IAAcA,EAAe,EAAKnL,MAAMiC,WAAWvH,KAAKY,OAAO,CAAC,EAAK0E,MAAMiC,WAAWvH,MAAO2D,IAAkB,CAAC,EAAK2B,MAAMiC,WAAWvH,OAEpI,2DAAC,4CAAD,CAAY8H,IAAK4I,+CAASC,MAAMhN,GACpB4D,WAAY,EAAKjC,MAAMiC,WACvB5D,cAAeA,EACf4M,aAAcA,EACdC,QAASA,EACTjL,MAAO,EAAKD,MAAMC,MAClBuH,WAAY,EAAKxH,MAAMwH,WACvB2D,aAAcA,EACdG,UAAY,WAAQ,MAAO,CAACX,SAE9CY,QAAQjB,UAEX,OAAO,sEAAK,gEAAGkB,QAAS,WACtB,IAAIC,EAAQlQ,EAAO2C,OAAOyM,GAAUzM,OAAO,MACvCjC,EAAK,EAAK+D,MAAMiC,WAAWyC,KAAKmF,MAAM4B,GAC1C,EAAKzL,MAAMwH,WAAWC,YAAYxL,KAChC0O,EAASvD,MAJN,IAIiB0D,EAJjB,QAKNS,QAAQjB,UAEX,OACI,kEAAKlE,UAAWvL,KAAKuL,WAGjB6D,GAAU,gFAEN,kEAAKyB,UAAU,YACb,2DAAC,gDAAD,CACIpR,KAAM2P,MAoBlB,2DAAC,2CAAD,CAAU7C,KAAMvM,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAK0M,KAAMI,WAAY3M,KAAKmF,MAAMwH,aAE3E3M,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAKQ,WAAaC,oDAAaC,SAAW,mEAAMsQ,UAAU,YAAYF,QAAS,SAAA1F,GAAK,EAAK9F,MAAMC,MAAMgI,UAAUvN,KAAKQ,SAASC,oDAAa2D,MAAM,EAAKkB,MAAMwH,WAAWmE,WAA5H,WAGrE9Q,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAKQ,WAAaC,oDAAa2D,OAAS,mEAAM4M,UAAU,YAAYF,QAAS,SAAA1F,GAAK,EAAK9F,MAAMC,MAAMgI,UAAUvN,KAAKQ,SAASC,oDAAaK,KAAK,EAAKwE,MAAMwH,WAAWmE,WAA3H,SAGnE9Q,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAKQ,WAAaC,oDAAaK,MAAQ,mEAAMkQ,UAAU,YAAYF,QAAS,SAAA1F,GAAK,EAAK9F,MAAMC,MAAMgI,UAAUvN,KAAKQ,SAASC,oDAAaC,QAAQ,EAAK4E,MAAMwH,WAAWmE,WAA9H,QAnCtE,IAuCIxB,GAAoB,uEAChBA,GAAkBK,uDAAO1F,KAAI,SAACiG,EAAc1M,GAC5C,GAAI0M,EAAaf,KAAO,EAEtB,MAAM,IAAIgB,MAAM,0BAElB,IAAIC,EAAeF,EAAaV,SAASO,QACrCM,EAAUH,EAAalB,MAAM,CAACoB,IAC9BE,EAAe,EAAKnL,MAAMiC,WAAWvH,KAAKY,OAAO,GAAI+C,IAAkB,GAG3E,OAFK8M,IAAcA,EAAe,EAAKnL,MAAMiC,WAAWvH,KAAKY,OAAO,CAAC,EAAK0E,MAAMiC,WAAWvH,MAAO2D,IAAkB,CAAC,EAAK2B,MAAMiC,WAAWvH,OAEpI,2DAAC,4CAAD,CAAYuH,WAAY,EAAKjC,MAAMiC,WAAY5D,cAAeA,EAAe4M,aAAcA,EAAcC,QAASA,EAASjL,MAAO,EAAKD,MAAMC,MAAOuH,WAAY,EAAKxH,MAAMwH,WAAY2D,aAAcA,EACzLG,UAAY,WAAQ,MAAO,IAC3B9I,IAAK4I,+CAASC,MAAMhN,QAEtCkN,QAAQjB,WAtDjB,IA4DIF,GAAqBA,EAAkBrN,OAAS,GAAK,mFAElDwN,GAKL,sEACA,2DAAC,6CAAD,CAAQzJ,YAAajG,KAAKsF,MAAMW,YACxB8K,eAAgB7M,SAChB+E,SAAUjJ,KAAKiJ,SACf8B,OAAQ/K,KAAK+K,OACbC,QAAShL,KAAKgL,QACdE,OAAQlL,KAAKkL,OACbpF,iBAAkB9F,KAAK8F,iBACvBc,kBAAmB5G,KAAK4G,kBACxBwH,iBAAkBpO,KAAKoO,iBACvBR,IAAK5N,KAAK2N,gBAEVqD,SAAuC,OAA7BhR,KAAKsF,MAAMO,eAA0B7F,KAAKsF,MAAM0L,WAElE,sEACChR,KAAKsF,MAAMC,UACR,sEACA,gEAAGoL,QAAS,kBAAI,EAAKhK,SAAS,CAACpB,WAAW,KAAS0L,MAAO,CAACC,MAAO,UAAlE,aACA,2DAAC,gDAAD,CAAWzR,KAAM4P,KAGjB,sEACE,gEAAGsB,QAAS,kBAAI,EAAKhK,SAAS,CAACpB,WAAW,KAAQ0L,MAAO,CAACC,MAAO,UAAjE,QACA,2DAAC,+CAAD,CAAeC,KAAM9B,EAAmBvF,QAAS9J,KAAKmF,MAAMwH,WAAWyE,WAI5EpR,KAAKsF,MAAMM,OACR,sEACA,gEAAG+K,QAAS,kBAAI,EAAKhK,SAAS,CAACf,QAAQ,IAAQ,kBAAK,EAAKT,MAAMwH,WAAWmE,cAA1E,YAGA,sEACE,gEAAGH,QAAS,kBAAI,EAAKhK,SAAS,CAACf,QAAQ,IAAO,kBAAK,EAAKT,MAAMwH,WAAWmE,cAAzE,UAIJ7Q,6CAAOoR,OAAOlC,KAAO,GAAK,sEACxB,qEAAQwB,QAAS,WACf1Q,6CAAOqR,eACP,EAAKxH,YAFP,gB,SA/uBuByH,6CAAMC,Y,mKCtBrCP,EAAQ,CACZQ,gBAAiB,QAGbC,EAAa,SAACvM,GAClB,OAAO,kBAAC,IAAMwM,SAAP,KACJxM,EAAMS,OAAS,yBAAKgM,iBAAiB,GACnCzM,EAAM0M,MAAM5H,KAAI,SAAAzK,GACf,GAAIA,EAAKwD,KAAM,CACb,IAAM8O,EAAmC,OAAdtS,EAAKwD,KAAL,YAA0BxD,EAAKyF,UAAUsH,KAAzC,KAAmD,GAC9E,OAAO,yBAAKsE,UAAS,+BAA0BrR,EAAKuS,QAAS,gCAASvS,EAAKwD,MAAe8O,GAE1F,IAAME,EAAaxS,EAAKuQ,MAAL,gBAAsBvQ,EAAKuS,OAAU,GACxD,OAAO,yBAAKlB,UAAS,6BAAwBmB,IAAexS,EAAK+B,MAAMU,QAAQzC,EAAKgC,QAGjF,0BAAMoQ,iBAAiB,EAAOf,UAAU,aAAxC,YAIPoB,EAAY,SAAC9M,GAKjB,IAAM1F,EAAO0F,EAAMb,aAAaQ,UAAUK,EAAMR,WAAWI,UACrDmN,EAASzS,EAAK8B,MAAMwM,IAAM,GAAKkD,EAC/BkB,EAAS1S,EAAK8B,MAAM0D,UAAY,CAACmN,MAAOC,IAAI5S,EAAK8B,MAAM0D,UAAUuL,UAAY,GACnF,OACI,kBAAC,IAAMmB,SAAP,KACGlS,EAAK6S,MAAMC,QAAUb,EAAW,CAACG,MAAOpS,EAAK6S,MAAMC,OAAQ3M,OAAQT,EAAMC,MAAMC,QAAQC,MAAMM,SAC9F,0BAAMiL,UAAS,mCAA8BN,IAASC,MAAM/Q,EAAK8B,MAAM0D,WAAxD,qBAA+EsL,IAASC,MAAM/Q,EAAK8B,OAAnG,wBAAyH9B,EAAK+B,EAA9H,kBAAyI2D,EAAMC,MAAMC,QAAQC,MAAMM,QAAUnG,EAAK6S,MAAMP,OAASS,kBAAiBrN,EAAMsN,UAAWC,kBAAiBvN,EAAMR,UACnQsM,MAAK,2BAAMiB,GAAWC,IACrBhN,EAAMwN,UAEZlT,EAAK6S,MAAMM,QAAUlB,EAAW,CAACG,MAAOpS,EAAK6S,MAAMM,OAAQhN,OAAQT,EAAMC,MAAMC,QAAQC,MAAMM,WAKhGiN,EAAa,SAAC1N,GAClB,IAAM1F,EAAO0F,EAAMb,aAAaQ,UAAUK,EAAMR,WAAWI,UAC3DmB,QAAQC,IAAR,8DAAmEhB,EAAMR,YACzEuB,QAAQC,IAAI,sBAAuB1G,EAAK8B,OACxC,IAAIwN,EAAWtP,EAAK2B,GAAGV,SAAS2C,OAAO,WAAWA,OAAOF,eAAK,CAAC1D,EAAK+B,EAAG/B,EAAK8B,SACxEuR,EAAW3N,EAAMiC,WAAWyC,KAAKmF,MAAMD,GACvCjO,EAAQ,yBAAKmQ,MAAO,CAACmB,MAAO,UAC5BU,GAAUnD,iBAAO1F,KAAI,SAACiG,EAAc1M,GACpC,GAAI0M,EAAaf,KAAO,EACtB,MAAM,IAAIgB,MAAM,0BAElB,IAAIC,EAAeF,EAAaV,SAASO,QACrCM,EAAUH,EAAalB,MAAM,CAACoB,IAE9BE,EAAenL,EAAMiC,WAAWvH,KAAKY,OAAO,CAAChB,EAAK+B,EAAG/B,EAAK8B,OAAQiC,IAAkB,CAAC/D,EAAK+B,EAAG/B,EAAK8B,OAEtG,OAAO,kBAAC,IAAD,CAAYoG,IAAK4I,IAASC,MAAMhN,GACpB4D,WAAYjC,EAAMiC,WAClB5D,cAAeA,EACf4M,aAAcA,EACdC,QAASA,EACTjL,MAAOD,EAAMC,MACbuH,WAAYxH,EAAMwH,WAClB2D,aAAcA,EACdG,UAAW,WACT,IAAIsC,EAAQ5N,EAAMb,aAAaQ,UAAUK,EAAMR,WAAWI,UAC1D,MAAO,CAACgO,EAAMvR,EAAGuR,EAAMxR,aAI3CmP,QAAQjB,WAGb,GAAItK,EAAMC,MAAMC,QAAQC,MAAMO,gBAAkBV,EAAMR,UACpD,OACI,6BACG7D,EACD,0BAAM+P,UAAS,sBAAiBN,IAASC,MAAM/Q,EAAK8B,MAAM0D,WAA3C,qBAAkEsL,IAASC,MAAM/Q,EAAK8B,OAAtF,wBAA4G9B,EAAK+B,GAAKyP,MAAOxR,EAAKI,KAAKkO,KAAOtO,EAAK8B,MAAM0D,YAAc+N,IAAU,GAAK/B,GAClM9L,EAAMwN,UAET,kBAAC,IAAD,CAAaxG,WAAYhH,EAAMC,MAAM+G,WACxB8G,WAAW,EACXtG,WAAYxH,EAAMwH,WAClBvH,MAAOD,EAAMC,MACb8N,WAAY,WAAO/N,EAAMwH,WAAWf,iBAAiB,OACrD3C,SAAQ,uCAAE,WAAO9J,EAAP,sBAAAe,EAAA,6DAAeiT,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,cACnCjU,EAAMsM,iBACNtM,EAAMuM,kBAFE,SAGDvG,EAAMwH,WAAW0G,oBAAoBF,GAHpC,OAIJC,GACIE,EAAQnO,EAAMiC,WAAWyC,KAAKmF,MAAM7J,EAAMC,MAAMgI,UAAU1M,SAAS2C,OAAOF,eAAK,CAAC1D,EAAK+B,EAAG/B,EAAK8B,SAAS8B,OAAO8P,GAAY9P,OAAO,OACtI8B,EAAMwH,WAAWC,YAAY0G,IAE7BnO,EAAMwH,WAAWmE,SARX,2CAAF,2DAc3B,IAAIF,EAAQnR,EAAK2B,GAAGV,SAAS2C,OAAO,CAACF,eAAK,CAAC1D,EAAK+B,EAAG/B,EAAK8B,QAAS9B,EAAKsD,OAClE/B,EAASmE,EAAMiC,WAAWyC,KAAKmF,MAAM4B,EAAMvN,OAAO,WACtD,OACI,6BACE,yBAAKwN,UAAU,gBACb,0BACIA,UAAS,sBAAiBN,IAASC,MAAM/Q,EAAK8B,MAAM0D,WAA3C,qBAAkEsL,IAASC,MAAM/Q,EAAK8B,OAAtF,wBAA4G9B,EAAK+B,GAC1HkR,kBAAiBvN,EAAMR,UACvBsM,MAAOxR,EAAKI,KAAKkO,KAAOtO,EAAK8B,MAAM0D,YAAc+N,IAAU,GAAK/B,GAAQ9L,EAAMwN,UAClF,yBAAK9B,UAAU,YAAYe,iBAAiB,EAAOX,MAAO,CAACmB,MAAO,UAChE,yBAAKvB,UAAU,mBACb,uBAAGF,QAAS,WACV,IAAMoC,EAAQ5N,EAAMb,aAAaQ,UAAUK,EAAMR,WAAWI,UACxD6L,EAAQmC,EAAM3R,GAAGV,SAAS2C,OAAO,CAACF,eAAK,CAAC4P,EAAMvR,EAAGuR,EAAMxR,QAASwR,EAAMhQ,OAAOM,OAAO,MACpFjC,EAAK+D,EAAMiC,WAAWyC,KAAKmF,MAAM4B,GACrCzL,EAAMwH,WAAWC,YAAYxL,KAC3B3B,EAAKsD,KAAKwJ,MANhB,IAOGzL,EAPH,OAQO,kBAAC,IAAD,CAAWrB,KAAMuB,EAAQuS,YAAa,SAWrDC,EAAY,SAACrO,GACjB,IAAM1F,EAAO0F,EAAMb,aAAaQ,UAAUK,EAAMR,WAAWI,UACrDmN,EAASzS,EAAK8B,MAAMwM,IAAM,GAAKkD,EAC/BkB,EAAS1S,EAAK8B,MAAM0D,UAAY,CAACmN,MAAOC,IAAI5S,EAAK8B,MAAM0D,UAAUuL,UAAY,GACnF,OACI,kBAAC,IAAMmB,SAAP,KACGlS,EAAK6S,MAAMC,QAAUb,EAAW,CAACG,MAAOpS,EAAK6S,MAAMC,OAAQ3M,OAAQT,EAAMC,MAAMC,QAAQC,MAAMM,SAC9F,0BAAMiL,UAAS,mCAA8BN,IAASC,MAAM/Q,EAAK8B,MAAM0D,WAAxD,qBAA+EsL,IAASC,MAAM/Q,EAAK8B,OAAnG,wBAAyH9B,EAAK+B,EAA9H,kBAAyI2D,EAAMC,MAAMC,QAAQC,MAAMM,QAAUnG,EAAK6S,MAAMP,OAASS,kBAAiBrN,EAAMsN,UAAWC,kBAAiBvN,EAAMR,UACnQsM,MAAK,2BAAMiB,GAAWC,IACrBhN,EAAMwN,SACX,0BAAM9B,UAAU,MAAMe,iBAAiB,EAAOX,MAAO,CAACmB,MAAO,UAC3D,kBAAC,IAAD,CAAW3S,KAAMA,EAAKsD,KAAMwQ,YAAa,QAO/CE,EAAe,SAASC,EAAcpU,EAAUgF,GAKpDoP,EAAaC,kBACT,SAACC,GACC,IAAMjP,EAAYiP,EAAU9O,YAC5B,OAAkB,OAAdH,GAOG,kBAJIL,EAAaQ,UAAUH,GAAWI,UAIbhC,QAGlC,SAACoE,EAAOI,GAINjI,EAAS6H,EAAOI,OAKlBsM,EAAqB,SAASH,EAAcpU,EAAUgF,GAC1DoP,EAAaC,kBACT,SAACC,GACC,IAAMjP,EAAYiP,EAAU9O,YAC5B,GAAkB,OAAdH,EACF,OAAO,EAET,IAAIlF,EAAO6E,EAAaQ,UAAUH,GAAWI,UAI7C,MAAQ,kBAAoBtF,EAAKsD,QAAWtD,EAAKsD,gBAAgBQ,UAGnE,SAAC4D,EAAOI,GACNjI,EAAS6H,EAAOI,OAKlBuM,EAAgB,SAASJ,EAAcpU,EAAUgF,GACrDoP,EAAaC,kBACT,SAACC,GACC,IAAMjP,EAAYiP,EAAU9O,YAC5B,OAAkB,OAAdH,GAGOL,EAAaQ,UAAUH,GAAWI,UAEjChC,gBAAgBQ,SAG9B,SAAC4D,EAAOI,GAINjI,EAAS6H,EAAOI,OAyBTmH,IApBM,SAACvJ,GACpB,OAAO,IAAI4O,qBAAmB,CAC5B,CACEC,SAAUP,EACVQ,UAAWhC,EACX9M,MAAOA,GAET,CACE6O,SAAUH,EACVI,UAAWpB,EACX1N,MAAOA,GAET,CACE6O,SAAUF,EACVG,UAAWT,EACXrO,MAAOA,O,qHC9OQ+O,E,kDACnB,WAAY/O,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXiH,KAAMpH,EAAMoH,MAHG,E,sDAOnB,SAAmBgC,EAAWC,EAAW2F,GACnCnU,KAAKmF,QAAUoJ,GACjBvO,KAAK2G,SAAS,CAAC4F,KAAMvM,KAAKmF,MAAMoH,S,oBAIpC,WAAU,IAAD,OACP,OAAO,2BAAO1L,MAAOb,KAAKsF,MAAMiH,KAClBtD,SAAW,SAAAgC,GAAK,EAAKtE,SAAS,CAAC4F,KAAMtB,EAAEmJ,OAAOvT,SAC9CqK,OAAS,SAAAD,GAAK,EAAK9F,MAAMwH,WAAW0H,sBAAsBpJ,EAAEmJ,OAAOvT,c,GAjB/C0Q,IAAMC,Y,+FCA7B,SAAS8C,EAAT,GAA2C,IAAlBnD,EAAiB,EAAjBA,KAAMrH,EAAW,EAAXA,QACtC8D,EAAM2D,IAAMgD,YAoBlB,OAlBAC,qBAAU,WACRtO,QAAQC,IAAI,MACZyH,EAAI6G,QAAQC,iBAAiB,UAAU,SAACzJ,GACtCA,EAAEQ,iBACFR,EAAES,kBACF,IAAMjM,EAAO6D,OAAOqR,YAAY,IAAIC,SAAS3J,EAAE4J,aAE/C,GADApP,OAAOqP,SAAWrV,EACdgG,OAAOsP,iBACT,cAA2BzR,OAAO0R,QAAQvP,OAAOsP,kBAAjD,eAAoE,CAAC,IAAD,sBAAxDpN,EAAwD,KAAnD9G,EAAmD,KAClE4E,OAAOwP,aAAaC,QAAQvN,EAAK0D,KAAKC,UAAUzK,IAGpD4E,OAAOsP,iBAAmB,KAC1BjL,SAGD,IAGC,yBAAK8D,IAAKA,EAAKuH,wBAAyB,CAACC,OAAQjE,O,wLCZnDkE,EAAO,GACP,qBAAuBC,YAAWD,EAAOC,UAAUC,UAAYC,SAASC,QAC5E,IAAMC,EAAa,IAAIC,IAAQ,CAACC,GAZf,SAASC,GACxB,IAAcrU,EAAVsU,EAAO,EACX,GAAiB,IAAbD,EAAE3T,OAAc,OAAO4T,EAC3B,IAAKtU,EAAI,EAAGA,EAAIqU,EAAE3T,OAAQV,IAExBsU,GAAUA,GAAQ,GAAKA,EADfD,EAAEE,WAAWvU,GAErBsU,GAAQ,EAEV,OAAOA,EAI2BE,CAASX,KACvCY,EAASC,IAAM,kEAEjBC,EAAM,IAAIC,QAEO7F,E,0FACnB,SAAa8F,GACX,OAAKA,GAEAF,EAAIG,IAAID,IACXF,EAAIpS,IAAIsS,EAAQrW,KAAKuW,SAGhBJ,EAAInS,IAAIqS,IANK,O,mBAQtB,WACE,OAAOJ,EAAOO,OAAOd,EAAWe,Y,4TCvB9BC,EAAkB,IAAIzT,IAAK,CAAC0T,KAAQ,CAACpK,KAAM,kBAAmBlM,SAAUC,IAAa2D,QACrF2S,EAA4B,IAAI3T,IAAK,GAAI,CAACsJ,KAAM,4BAA6BlM,SAAUC,IAAaK,OAEpGkW,EAAkB,IAAI5T,IAAK,CAAC,CAChC5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,mBAAAG,EAAA,6DACJkB,EAAG0V,WAAWJ,EAAiBG,GAD3B,SAEc,IAAIjX,IAAG8W,EAAiBtV,EAAIrB,GAAQa,UAFlD,cAEE+G,EAFF,OAIEoP,EAAcC,IAAYC,YAAYJ,EAAiB,CAAClP,IAAKA,IAC/DnH,EAAMY,EAAGX,OAAOV,EAAQgX,EAAa3V,EAAGV,SAAU,KAAMU,GALxD,SAMSZ,EAAII,UANb,mFAAF,uDAAC,KAQH,CAAC2L,KAAM,oBAEL2K,EAA0B,IAAIjU,IAAK,CAAC,CACxC5D,KAAK,WAAD,4BAAE,WAAeyB,EAAOM,EAAIrB,GAA1B,iBAAAG,EAAA,6DACEyH,EAAM7G,EAAM6G,IAElBzB,QAAQC,IAAI,eAAgBV,OAAOsP,kBAEjClU,EADE4E,OAAOsP,kBAAoBtP,OAAOsP,iBAAiBpN,GAC5ClC,OAAOsP,iBAAiBpN,GAEzB0D,KAAK8L,MAAM1R,OAAOwP,aAAamC,QAAQzP,IAEjDzB,QAAQC,IAAI,cAAetF,GATvB,kBAUGA,GAVH,2CAAF,uDAAC,KAYH,CAAC0L,KAAM,4BAIL8K,EAAkB,IAAIpU,IAAK,CAAC,CAChC5D,KAAK,WAAD,4BAAE,WAAOyB,EAAOM,EAAIrB,GAAlB,qBAAAG,EAAA,sEACgBkB,EAAGgC,SAAStC,GAD5B,cACED,EADF,gBAEc,IAAIjB,IAAG8W,EAAiBtV,EAAIrB,GAAQa,UAFlD,cAEE+G,EAFF,OAIEoP,EAAcC,IAAYC,YAAYI,EAAiB,CAAC1P,IAAKA,EAAK9G,MAAOA,IAC3EL,EAAMY,EAAGX,OAAOV,EAAQgX,EAAa3V,EAAGV,SAAU,KAAMU,GALxD,UAMSZ,EAAII,UANb,qFAAF,uDAAC,KAQH,CAAC2L,KAAM,oBACL+K,EAAwB,IAAIrU,IAAK,CAAC,CACtC5D,KAAK,WAAD,4BAAE,WAAeyB,EAAOM,EAAIrB,GAA1B,iBAAAG,EAAA,yDACEyH,EAAM7G,EAAM6G,IACZ9G,EAAQC,EAAMD,OAChB4E,OAAOsP,mBAAoBtP,OAAOsP,iBAAiBpN,GAHnD,wDAKJlC,OAAOsP,iBAAmB,GAC1BtP,OAAOsP,iBAAiBpN,GAAK9G,EANzB,mBAOG,GAPH,2CAAF,uDAAC,KASH,CAAC0L,KAAM,wBAAyBlM,SAAUC,IAAaK,Q,oFC1D9ChB,EAAb,WACE,WAAYkB,GAAQ,oBAClBb,KAAKa,MAAQA,EAFjB,2CAKE,WACE,OAAOb,KAAKa,SANhB,sBASE,SAAeC,GACb,OAAOA,aAAiBnB,EAAQmB,EAAMF,UAAYE,MAVtD,M,mJCIasB,EAAb,kDACE,WAAYH,EAASL,EAAMS,EAAI4C,GAAW,IAAD,8BACvC,cAAMhD,IACDL,KAAOA,EACZ,EAAKS,GAAKA,EACV,EAAK4C,UAAYA,EAJsB,EAD3C,gFAQE,WAAYnF,EAAQC,GAApB,iBAAAG,EAAA,0DACMF,KAAKiF,UADX,uBAEQ7D,EAAK,IAAIxB,IAAGI,KAAKiF,UAAWnF,EAAQ,CAACE,KAAKiF,aAC3C6R,WAAW9W,KAAKiF,UAAWlF,GAHlC,SAIuBqB,EAAGR,UAJ1B,cAIQI,EAJR,yBAKWuW,IAASC,QAAQxX,KAAKiF,UAAWjE,IAL5C,iCAOW,GAPX,iDARF,8DAA2ByW,M,sXCJdC,G,OAAb,WACE,WAAYnW,EAAOC,GAAG,oBACpBxB,KAAKuB,MAAQA,EACbvB,KAAKwB,EAAIA,EAHb,+CAME,SAActB,EAAGyX,GACf,SAAIzX,IAAKyX,KACAzX,EAAEqB,QAAUoW,EAAEpW,OAASrB,EAAEsB,IAAMmW,EAAEnW,OAR9C,M,gBCWMoW,EAAuB,SAAC/X,EAAM6B,EAASkU,GAC3C,OAAI/V,EAAK+V,KAAOA,EAAW/V,GACtB6B,EAAQkU,KACXlU,EAAQkU,GAAM,IAAIxT,IAClBV,EAAQkU,GAAIA,GAAKA,GAGZlU,EAAQkU,KAGXiC,E,WA4CJ,WAAYC,GAAY,oBACtB9X,KAAK8X,WAAaA,EAClB9X,KAAK+X,WAAa,GACbC,OAAc9V,QACjB8V,gBAAuB,CACrBC,OAAQT,0CACRU,WAAYV,6BACZW,UAAWX,eAGfxX,KAAKoY,GAAKJ,c,+EAIZ,sBAAA9X,EAAA,sEACQ8X,SAAgBK,oBADxB,2C,uEAIA,WAAO,IAAD,EACJ,OAAO,UAAAL,SAAgBM,mBAAhB,eAA6BC,MAAO,S,+BAG7C,WACE,OAAOvY,KAAKoY,GAAGI,WAAWhB,a,+BAG5B,WACE,OAAOxX,KAAKoY,GAAGI,WAAWhB,a,2DAG5B,WAAaiB,EAAOC,GAApB,qBAAAxY,EAAA,6DACQyY,EAAWpI,IAASgG,QAD5B,SAEQvW,KAAK4Y,oBAAoBC,IAAIF,GAAU5U,IAAI,CAC/C6R,GAAI+C,EACJD,gBACAI,SAAU9Y,KAAKuY,QALnB,qBAOqBE,GAPrB,8DAOa5Y,EAPb,SAQakO,IARb,kCASY/N,KAAK+Y,iBAAiBlZ,EAAM8Y,GATxC,yBAUY3Y,KAAKgZ,cAAcnZ,EAAM8Y,GAVrC,yBAWY3Y,KAAKiZ,kBAAkBpZ,EAAM8Y,GAXzC,yBAYY3Y,KAAKkZ,cAAcrZ,OAAMO,EAAWuY,GAZhD,QAaM9Y,EAAKkO,KAAM,EAbjB,yBAeU/N,KAAKmZ,iBAAiBtZ,EAAM8Y,GAftC,YAgBQ9Y,EAAKuZ,cAhBb,oBAiBUvZ,EAAKuZ,cAAc7M,OAAS1M,EAAK0M,KAjB3C,kCAkBcvM,KAAKgZ,cAAcnZ,EAAM8Y,GAlBvC,QAmBQ9Y,EAAKuZ,cAAc7M,KAAO1M,EAAK0M,KAnBvC,WAqBU1M,EAAKuZ,cAAc/Y,WAAaR,EAAKQ,SArB/C,kCAsBcL,KAAKiZ,kBAAkBpZ,EAAM8Y,GAtB3C,QAuBQ9Y,EAAKuZ,cAAc/Y,SAAWR,EAAKQ,SAvB3C,WAyBWR,EAAKwZ,KAAKC,OAAOzZ,EAAKuZ,cAAcC,MAzB/C,kCA0BcrZ,KAAKuZ,gBAAgB1Z,EAAM8Y,GA1BzC,wKA8BSA,GA9BT,gE,oFAiCA,SAAc/C,GACZ,IAAM4D,EAAQ5D,EAAG4D,MAAM,YACvB,OAAIA,EACKC,IAASD,EAAM,KAEjBxZ,KAAK+X,WAAWnC,KACnB5V,KAAK+X,WAAWnC,GAAM,IAAI8D,EAAW1Z,KAAM4V,IAEtC5V,KAAK+X,WAAWnC,M,4DAI3B,WAAc+D,GAAd,wBAAAzZ,EAAA,6DAEMwB,EAAU,GAFhB,SAGwB1B,KAAK4Z,oBACtBC,MAAM,SAAU,KAAMF,GACtBE,MAAM,WAAY,KAAM,CAAC7Z,KAAKuY,MAAO,KACrCuB,QAAQ,MACR9V,MAPP,qBAQUtE,SAAQ,SAAAqa,GACd,IAAMta,EAAOsa,EAAOta,OACpB,GAAIA,EAAKwC,QAAS,CAEhB,IAAMA,EAAU,EAAK+X,oBAAoBva,EAAKwC,UAC9CpC,EAAO,IAAIoD,IAAKhB,IACX2T,GAAK+D,EAEZ,GAAIla,EAAKqC,MAAO,CACd,IAAMmY,EAAa,EAAKC,cAAcra,EAAK+V,IACvC9T,EAAQ8V,EAAqBqC,EAAYvY,EAASjC,EAAKqC,MAAM8T,IACjE9T,EAAMG,QAAU,EAAK+X,oBAAoBva,EAAKqC,MAAMG,SACpDH,EAAMF,KAAO,IAAI8V,EAAIE,EAAqBqC,EAAYvY,EAASjC,EAAKqC,MAAMF,KAAKuY,UAAW1a,EAAKqC,MAAMF,KAAKJ,GAC1GM,EAAMO,GAAK,IAAIqV,EAAIE,EAAqBqC,EAAYvY,EAASjC,EAAKqC,MAAMO,GAAG8X,UAAW1a,EAAKqC,MAAMO,GAAGb,GACpGM,EAAMmD,UAAYxF,EAAKqC,MAAMsY,aAAe,EAAKF,cAAcza,EAAKqC,MAAMsY,mBAAgBha,EAC1FP,EAAKwa,SAASvY,GAKhB,GAHIrC,EAAK8M,OACP1M,EAAK0M,KAAO9M,EAAK8M,MAEf9M,EAAKe,IAAK,CACZ,IAAMT,EAAS,EAAKia,oBAAoBva,EAAKe,IAAIT,QAC7CN,EAAKe,IAAIa,QACXxB,EAAKya,OAAOva,EAAQ,EAAKma,cAAcza,EAAKe,IAAIgD,eAAgB,EAAK0W,cAAcza,EAAKe,IAAIa,UAE5FxB,EAAK0a,UAAUxa,EAAQ,EAAKma,cAAcza,EAAKe,IAAIgD,gBAGnD/D,EAAKY,WACPR,EAAKQ,SAAWZ,EAAKY,aArC3B,kBAyCSR,GAzCT,gD,yHA4CA,WAAoBA,EAAM8Y,GAA1B,SAAAzY,EAAA,sEACeF,KAAKwa,YAAY,CAC5Bb,OAAQ9Z,EAAK2Q,QACbjE,KAAM1M,EAAK0M,KACXoM,SAAUA,IAJd,wF,+HAQA,WAAwB9Y,EAAM8Y,GAA9B,SAAAzY,EAAA,sEACeF,KAAKwa,YAAY,CAC5Bb,OAAQ9Z,EAAK2Q,QACbnQ,SAAUR,EAAKQ,UAAYC,IAAaC,QACxCoY,SAAUA,IAJd,wF,8HAQA,WAAuB9Y,EAAM8Y,GAA7B,eAAAzY,EAAA,6DACQT,EAAO,CACXka,OAAQ9Z,EAAK2Q,QACbvO,QAASjC,KAAKya,kBAAkB5a,EAAKoC,SACrC0W,SAAUA,GAJd,SAMe3Y,KAAKwa,YAAY/a,GANhC,wF,8HASA,WAAuBI,EAAM8Y,GAA7B,qBAAAzY,EAAA,oEACsBL,EAAK6B,SAD3B,6DACaI,EADb,SAEeiM,IAFf,6DAIUtO,EAJV,aAKMmW,GAAI9T,EAAM0O,QACVvO,QAASjC,KAAKya,kBAAkB3Y,EAAMG,SACtCL,KAAM,CACJuY,SAAUrY,EAAMF,KAAKL,MAAMiP,QAC3BhP,EAAGM,EAAMF,KAAKJ,GAEhBa,GAAI,CACF8X,SAAUrY,EAAMO,GAAGd,MAAMiP,QACzBhP,EAAGM,EAAMO,GAAGb,IAEXM,EAAMmD,WAAa,CAAEmV,aAActY,EAAMmD,UAAUuL,UAf5D,UAiBUxQ,KAAKwa,YAAY,CACrBb,OAAQ9Z,EAAK2Q,QACb1O,MAAOrC,EACPkZ,SAAUA,IApBhB,QAsBI7W,EAAMiM,KAAM,EAtBhB,uM,2HA0BA,WAAoBlO,EAAMuZ,EAAeT,GAAzC,oBAAAzY,EAAA,+EACSL,EAAKwZ,KAAKpP,IAAV,uCAAc,WAAOyQ,EAAQ3a,GAAf,mBAAAG,EAAA,yDACbsD,EAAgBkX,EAAOlL,SAASO,QAChC1O,EAAUqZ,EAAO1W,IAAIR,IACvB4V,GAAiBA,EAAc3Y,OAAOV,EAAQyD,KAAmBnC,EAHlD,wDAKb5B,EAAO,CACXka,OAAQ9Z,EAAK2Q,QACbhQ,IAAK,CACHT,OAAQ,EAAK0a,kBAAkB1a,GAAQoJ,SACvC3F,cAAeA,EAAcgN,QAC7BnP,QAASA,EAAQmP,SAEnBmI,SAAUA,GAZO,SAcN,EAAK6B,YAAY/a,GAdX,mFAAd,0DADT,2C,+HAmBA,WAAsBI,EAAM8Y,GAA5B,oBAAAzY,EAAA,sDAEEL,EAAKuZ,cAAcC,KAAKpP,IAAxB,uCAA4B,WAAOyQ,EAAQ3a,GAAf,iBAAAG,EAAA,yDACpBsD,EAAgBkX,EAAOlL,SAASO,QACjClQ,EAAKY,OAAOV,EAAQyD,GAFC,uBAGlB/D,EAAO,CACXka,OAAQ9Z,EAAK2Q,QACbhQ,IAAK,CACHT,OAAQ,EAAK0a,kBAAkB1a,GAAQoJ,SACvC3F,cAAeA,EAAcgN,SAE/BmI,SAAUA,GATY,SAWX,EAAK6B,YAAY/a,GAXN,mFAA5B,yDAgBAO,KAAKkZ,cAAcrZ,EAAMA,EAAKuZ,cAAeT,GAlB/C,gD,wFAqBA,SAAkB9Y,EAAMiY,GAAa,IAAD,OAClC,OAAOjY,EAAK6B,QAAQuI,KAAI,SAAAnI,GACjBA,EAAM6Y,YAAW7Y,EAAM6Y,UAAYC,KAAKC,OACxC/Y,EAAMgW,aAAYhW,EAAMgW,WAAaA,GAAc,EAAKA,YAC7D,IAAMrY,EAAO,CACXmW,GAAI9T,EAAM0O,QACVvO,QAAS,EAAK6Y,iBAAiBhZ,EAAMG,SACrCL,KAAM,CACJuY,SAAUrY,EAAMF,KAAKL,MAAMiP,QAC3BhP,EAAGM,EAAMF,KAAKJ,GAEhBa,GAAI,CACF8X,SAAUrY,EAAMO,GAAGd,MAAMiP,QACzBhP,EAAGM,EAAMO,GAAGb,GAEduZ,YAAajZ,EAAMgW,WACnBkD,WAAYlZ,EAAM6Y,WAEpB,OAAI7Y,EAAMmD,WACH,EAAKgW,iBAAiBnZ,EAAMmD,YAC/B,EAAKiW,WAAWpZ,EAAMmD,WAEjB,2BAAIxF,GAAX,IAAiB2a,aAActY,EAAMmD,UAAUuL,WAE1C/Q,O,+BAIX,SAAkBwC,GAChB,OAAOA,EAAQgI,KAAI,SAAAzK,GACjB,OAAIA,aAAgByD,IACXzD,EAAKgR,QACAhR,O,iCAIlB,SAAoByC,GAAU,IAAD,OAC3B,OAAOA,EAAQgI,KAAI,SAAAzK,GACjB,GAAoB,kBAATA,EACT,OAAKA,EAAK0C,OAAS,EACV,EAAKgY,cAAc1a,GAEnBA,EAEJ,GAAoB,kBAATA,EAChB,OAAOA,EAEP,KAAM,uB,gEAKZ,WAAkBC,GAAlB,eAAAS,EAAA,6DACQ0V,EAAKrF,IAASgG,QADtB,SAEQvW,KAAK4Z,oBAAoBf,IAAIjD,GAAI7R,IAAjC,aAAsC6R,GAAIA,EAAIkD,SAAU9Y,KAAKuY,OAAU9Y,IAF/E,gD,iFAhTA,SAAkBI,EAAMsb,EAASC,EAAOnZ,EAASgD,GAC/C,GAAKkW,GAAYC,KAIbD,EAAQ5Z,QAAU6Z,EAAM7Z,OAAS4Z,EAAQ3Z,EAAI4Z,EAAM5Z,GAAvD,CAIA,IAAIM,EAAQ,IAAIM,IAAMH,EAASkZ,EAASC,EAAOnW,GAG/C,OAFAnD,EAAMiM,KAAM,EACZlO,EAAKwa,SAASvY,GACPA,K,6BAGT,SAAuBjC,GACrBA,EAAK6B,QAAU7B,EAAK6B,QAAQnC,QAAO,SAACuC,GAClC,OAAKA,EAAMiM,KACFjM,O,0BAMb,SAAoBjC,GAClBA,EAAKwZ,KAAOxZ,EAAKwZ,KAAK9Z,QAAO,SAACsB,EAAO8G,GACnC,QAASA,EAAI8H,UAAU,IAAI,IAAI1B,S,qBAInC,SAAelO,EAAM0B,EAAO4L,GAC1B,IAAI3L,EAAI,EACR2L,EAASzN,SAAQ,SAAAF,GACXA,EAAK+B,OACH/B,EAAK6Z,OACPxZ,EAAKwZ,KAAOxZ,EAAKwZ,KAAKtV,IAAIZ,eAAK,CAAC3B,EAAGD,IAAS/B,EAAK6Z,OAGrD7X,W,KCzDOkY,EAAb,kDACE,WAAYjN,EAAKmJ,GAAK,IAAD,8BACnB,cAAM,OACDnJ,IAAMA,EACX,EAAKmJ,GAAKA,EACV,EAAKyF,QAAS,EAJK,EADvB,qFASE,sBAAAnb,EAAA,sEACQF,KAAKsb,OADb,oJATF,+GAcE,4BAAApb,EAAA,0DACMF,KAAKqb,OADX,iEAGqBrb,KAAKyM,IAAI8O,QAAQvb,KAAK4V,IAH3C,cAGQ/V,EAHR,OAIEG,KAAKoZ,cAAgBvZ,EACrBG,KAAKiC,QAAUpC,EAAKoC,QACpBjC,KAAK0B,QAAU7B,EAAK6B,QACpB1B,KAAKqZ,KAAOxZ,EAAKwZ,KACjBrZ,KAAKuM,KAAO1M,EAAK0M,KACjBvM,KAAKK,SAAWR,EAAKQ,SACrBL,KAAKqb,QAAS,EAVhB,kBAYSrb,MAZT,iDAdF,6EA6BE,WACE,IAAKA,KAAKqb,OAAQ,OAAO,EACzB,GAAIrb,KAAKiC,UAAYjC,KAAKoZ,cAAcnX,QAAS,OAAO,EACxD,GAAIjC,KAAKuM,OAASvM,KAAKoZ,cAAc7M,KAAM,OAAO,EAClD,GAAGvM,KAAK0B,QAAQQ,SAAWlC,KAAKoZ,cAAc1X,QAAQQ,OAAQ,OAAO,EACrE,IAAK,IAAIV,EAAI,EAAGA,EAAIxB,KAAK0B,QAAQQ,OAAQV,IACvC,GAAIkW,EAAI4B,OAAOtZ,KAAK0B,QAAQF,GAAIxB,KAAKoZ,cAAc1X,QAAQF,IAAK,OAAO,EAEzE,OAAKxB,KAAKqZ,KAAKC,OAAOtZ,KAAKoZ,cAAcC,QACpCrZ,KAAKwb,QAAQlC,OAAOtZ,KAAKoZ,cAAcoC,aAtChD,GAAgCvY,K,yBCKXwY,E,kDACnB,WAAYtW,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,GAFI,E,qDAKnB,WACEtF,KAAK0b,c,gCAGP,SAAmBnN,EAAWC,EAAW2F,GACnCnU,KAAKmF,QAAUoJ,GAAWvO,KAAK0b,c,8DAGrC,kCAAAxb,EAAA,sDACQyb,EADR,YACqB,IAAIC,KAAK5b,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAK8b,QAAU,IAAItY,OACtErD,KAAKmF,MAAMC,MAAMgI,UAAUvN,KAAK6B,QAAQuI,KAAI,SAAAtI,GAAC,OAAIA,EAAEsD,aAAW1F,QAAO,SAAAgC,GAAK,OAAIA,QAFpF,cAImBoa,GAJnB,+DAIU7T,EAJV,mBAKyB4R,GALzB,gCAK2C5R,EAAMwT,OALjD,8IAOEtb,KAAK2G,SAAS,CAACgV,WAPjB,gE,0EAUA,WAAU,IAAD,OACP,IAAK3b,KAAKsF,MAAMqW,OAAQ,OAAO,KAE/B,IAAIjb,EAASV,KAAKmF,MAAMC,MAAMgI,UAAU1M,SACpC2D,EAAOrE,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMtO,GAE5C,OACI,yBAAKkV,GAAG,SAAS/E,UAAU,OACzB,sCACA,wBAAIA,UAAU,UACZ,wBAAIA,UAA8C,OAAlC7Q,KAAKmF,MAAMC,MAAMmE,aAAyB,0BAA4B,mBAClFoH,QAAS,SAAC1F,GACR,EAAK9F,MAAMwH,WAAWkP,oBAAezb,KAF3C,iBAOEJ,KAAKsF,MAAMqW,OAAO1R,KAAI,SAACnC,GACrB,IAAI9G,EAASqD,EAAK2K,MAAM,CAAClH,EAAO,WAC5BgU,EAAa9a,aAAkBrB,IAAQqB,EAAOH,MAAQG,EACtD+a,EAAgBxE,IAASC,QAAQ1P,EAAOgU,GACxCE,GAAeF,KAAgBC,EAC/BlL,EAAa,EAAK1L,MAAMC,MAAMmE,eAAiBzB,EAAS,SAAW,GAGvE,OAFA+I,GAAS,uBAAoBN,IAASC,MAAM1I,IACxCkU,IAAanL,GAAa,aACtB,wBAAIlJ,IAAKG,EAAMyE,KACXsE,UAAWA,GAEjB,2BAAO+E,GAAE,yBAAoB9N,EAAMyE,MAAQvJ,KAAK,WAAWiG,SAAU,SAACgC,GACpE,EAAK9F,MAAMwH,WAAWsP,YAAYnU,EAAOmD,EAAEmJ,OAAO8H,QAASJ,IAC1DI,UAAWH,IACd,uBAAGpL,QAAS,SAAC1F,GACX,EAAK9F,MAAMwH,WAAWkP,eAAe/T,EAAOgU,IAC3C7K,MAAO,CAACmB,MAAOC,IAAIvK,EAAM0I,WACzB1I,EAAMyE,MATP,OAYF,uBAAGoE,QAAS,WACV,IAAIC,EAAQ,EAAKzL,MAAMC,MAAMgI,UAAU1M,SAAS2C,OAAO,CAACyE,IACpD1G,EAAK,EAAK+D,MAAMiC,WAAWyC,KAAKmF,MAAM4B,EAAMvN,OAAO,OAClDjC,IACHA,EAAK,IAAIxB,IAAGkI,IAEd,EAAK3C,MAAMwH,WAAWC,YAAYxL,KANpC,aAgBZ,+BACG,qCAECpB,KAAKsF,MAAMqW,OAAO1R,KAAI,SAACnC,GACrB,OAAIA,EAAMsK,MACF,gBAAN,OAAuB7B,IAASC,MAAM1I,GAAtC,qBAAyDA,EAAMsK,MAA/D,MAEK,QAITpS,KAAKmF,MAAMC,MAAMmE,cAAjB,qCAA+DvJ,KAAKmF,MAAMC,MAAMmE,aAAa6I,MAA7F,Y,GAxFqBb,IAAMC,W,kBCFpB2K,G,yDACnB,WAAYhX,GAAQ,IAAD,8BACjB,cAAMA,IAsBRwL,QAAU,SAACtM,GACT,IAAIjD,EAAKiD,EAAKL,IAAI,MAIlB,EAAKmB,MAAMwH,WAAWC,YAAYxL,IA1BlC,EAAKkE,MAAQ,CACX8W,OAAQ,GACRvS,KAAM1E,EAAM0E,MAJG,E,6CAQnB,WAEE,IADA,IAAIwS,EAAQrc,KAAKmF,MAAMC,MAAMgI,UACtBiP,EAAMvc,kBAAkBF,KAAMyc,EAAQA,EAAMvc,OACnD,IAAMsc,EAAM,YAAO,IAAIR,MAAI5b,KAAKsF,MAAM8W,OAAO/Y,OAAOgZ,KACpDrc,KAAK2G,SAAS,CAACyV,a,+BAGjB,WACEpc,KAAKsc,c,gCAGP,SAAmB/N,EAAWC,EAAW2F,GACnCnU,KAAKmF,QAAUoJ,GAAWvO,KAAKsc,c,uBAWrC,SAAUzc,EAAMwE,GAAuB,IAAD,OAAhBkY,EAAgB,wDAE9BC,EAAgBnY,EAAK9E,QAAO,SAAC2P,EAAErM,GACnC,OAAOA,aAAaI,OAEhBwZ,EAAeD,EAAcvS,KAAI,SAACyS,EAAWC,GAC7C,OAAQ,EAAKC,UAAUD,EAAWD,GAAW,MAEjDjN,UAEIoN,EAAiBxY,EAAK9E,QAAO,SAAC2P,EAAErM,GACpC,OAAOA,aAAaM,UAEhB2Z,EAAgBD,EAAe5S,KAAI,SAACyS,EAAWK,GAC/C,IAAMJ,EAAYD,EAAUlN,SAASO,QAC/BiN,EAAaN,EAAUO,WAAWlN,QACxC,OAAO,EAAK6M,UAAUD,EAAWK,MAErCvN,UACIyN,EAAcld,KAAKmF,MAAMC,MAAMgI,UAAU1M,SAWzCA,GAVgBmc,EAAe5S,KAAI,SAACyS,EAAWK,GAC/C,IAAMJ,EAAYD,EAAUlN,SAASO,QAC/BiN,EAAaN,EAAUO,WAAWlN,QAClCrP,EAASsc,EAAWhZ,IAAI,MAAMtD,SAExC,GADiBA,EAAOwB,QAAUgb,EAAYhb,QAAUiB,eAAKzC,GAAQ4Y,OAAOnW,eAAK+Z,EAAYhT,MAAM,EAAGxJ,EAAOwB,UAE3G,OAAO,EAAK0a,UAAUD,EAAWK,MAGnCvN,UACapL,EAAKL,IAAI,MAAMtD,UACxByc,EAAWzc,EAAOwB,QAAUgb,EAAYhb,QAAUiB,eAAKzC,GAAQ4Y,OAAOnW,eAAK+Z,EAAYhT,MAAM,EAAGxJ,EAAOwB,UACvGkb,EAAYb,EAAW,IAAM,GAC7Bc,EAAQ,0BAAMxM,UAAWsM,EAAQ,YAAQC,GAAcA,EAAWzV,IAAK,EAAGgJ,QAAS,WACvF,EAAKA,QAAQtM,KACXxE,EAAK0M,MACT,OAA4B,IAAxBkQ,EAAava,QAAyC,IAAzB4a,EAAc5a,OACtCmb,GAETnX,QAAQC,IAAI,MAAOgX,EAAUtd,EAAK0M,MAC3B,kBAAC,IAAD,CAAU+Q,cAAeH,EAAQ,YAAQC,GAAcA,EAAWzV,IAAK,EAAG4V,UAAWF,EAAOG,kBAAkB,GAClHf,EACAK,M,oBAaL,WAAU,IAAD,OACP,OACI,6BACE,yCACE9c,KAAKsF,MAAM8W,OAAOnS,KAAI,SAAA7I,GACtB,IAAMvB,EAAOuB,EAAGvB,KACVwE,EAAO,EAAKiB,MAAMuE,KAAKmF,MAAM5N,EAAGV,UACtC,OAAO,EAAKkc,UAAU/c,EAAMwE,W,GA9FAkN,IAAMC,Y,QCJzBiM,E,WACnB,WAAY5d,GAAM,oBAChBG,KAAKH,KAAOA,E,iDAId,SAAc0B,EAAOC,GACnB,IAAMkc,EAAQ1d,KAAK2d,IAAIC,WAAU,SAAApe,GAC/B,OAAOA,EAAK+B,QAAUA,GAASC,IAAMhC,EAAKgC,KAKxC/B,EAAO,GACPie,EAAQ,IACVje,EAAK8S,OAASvS,KAAK2d,IAAIzT,MAAM,EAAGwT,GAChC1d,KAAK6d,YAAa,GAEpB,IAAMC,EAAS,kBAAoBvc,EAAMU,QAAQT,GAQjD,OAPMsc,GAAU9d,KAAK6d,aACnBpe,EAAKsS,MAAQ/R,KAAK2d,IAAID,GAAO3L,OAE/B/R,KAAK6d,WAAaC,EAElB9d,KAAK2d,IAAM3d,KAAK2d,IAAIzT,MAAMwT,EAAQ,GAE3Bje,I,2BAGT,WACE,IADa,EACTsQ,GAAQ,EADC,cAEK/P,KAAK2d,KAFV,IAEb,IAAI,EAAJ,qBAA4B,CAAC,IAAnBne,EAAkB,QACtBuQ,IACFvQ,EAAKuQ,OAAQ,EACbA,GAAQ,GAENvQ,EAAKwD,OAAM+M,GAAQ,IAPZ,iC,iBAWf,WAGE,OAFA/P,KAAK2d,IAAM3d,KAAK0Q,MAAM,IAAIgH,EAAI1X,KAAKH,KAAM,GAAI,IAAI6X,EAAI1X,KAAKH,KAAMG,KAAKH,KAAKoC,QAAQC,OAAO,IAAIlB,OAC7FhB,KAAK+d,gBACE/d,KAAK2d,M,mBAGd,SAAM/b,EAAMS,EAAI2b,GAAmC,IAO7Chd,EAPwBF,EAAoB,uDAAd,GAAIiR,EAAU,uDAAF,EACxCxQ,EAAQK,EAAKL,MACbC,EAAII,EAAKJ,EACXM,EAAQ9B,KAAKH,KAAK6B,QAAQuc,MAAM,SAAAtc,GAClC,OAAOA,EAAEC,KAAKL,QAAUK,EAAKL,QAAU,IAAMK,EAAKJ,EAAII,EAAKJ,GAAKG,EAAEC,KAAKJ,EAAII,EAAKJ,EAAIG,EAAEC,KAAKJ,MAAQa,GAAe,IAATA,EAAGb,GAAWD,IAAUc,EAAGd,OAASI,EAAEC,KAAKJ,GAAKa,EAAGb,MAI9J,GAAIM,EAAO,CACT,IAAIE,EAAOhC,KAAKke,SAAS3c,EAAOC,EAAGM,EAAMF,KAAKJ,EAAGuQ,GACjD,GAAIjQ,EAAMmD,YAAc1D,EAAM0D,UAC5BjE,EAAShB,KAAK0Q,MAAM,IAAIgH,EAAI5V,EAAO,GAAIO,EAAI2b,EAAcld,EAAMuC,OAAOrB,GAAO+P,OACxE,CACL,IAGInM,EAHEuY,EAAQne,KAAK0Q,MAAM,IAAIgH,EAAI5V,EAAO,QAAI1B,EAAWmB,EAAM0D,UAAW,GAAI8M,EAAM,GAC5EqM,EAAS,IAAI1G,EAAIyG,EAAM5c,MAAO4c,EAAM3c,GACpC6c,EAAUre,KAAK0Q,MAAM,IAAIgH,EAAInW,EAAOO,EAAMF,KAAKJ,GAAI4c,EAAQJ,EAAc,GAAIjM,EAAM,GAGvFnM,EADEyY,EAAQrd,OAAOkB,OAAS,EACjB,CAAC,CAACc,KAAM,KAAMiC,UAAWnD,EAAMmD,UAAW8M,MAAOA,IAAQ1O,OAAO8a,EAAMnd,QAAQqC,OAAO,CAAC,CAACL,KAAM,OAAQ+O,MAAOA,KAAS1O,OAAOgb,EAAQrd,QAAQqC,OAAO,CAAC,CAACL,KAAM,MAAO+O,MAAOA,KAEzK,CAAC,CAAC/O,KAAM,KAAMiC,UAAWnD,EAAMmD,UAAW8M,MAAOA,IAAQ1O,OAAO8a,EAAMnd,QAAQqC,OAAO,CAAC,CAACL,KAAM,MAAO+O,MAAOA,KAGtH/Q,EAAShB,KAAK0Q,MAAM0N,EAAQ/b,EAAI2b,EAAcld,EAAMuC,OAAOrB,GAAMqB,OAAOuC,GAASmM,SAGnF,GAAI1P,EACF,GAAIA,EAAGd,QAAUA,EAAO,CACtB,IAAIY,EAAcnC,KAAKke,SAAS3c,EAAOK,EAAKJ,EAAGa,EAAGb,EAAGuQ,GACrD/Q,EAAS,CACPA,OAAQF,EAAMuC,OAAOlB,GACrBZ,MAAOc,EAAGd,MACVC,EAAGa,EAAGb,OAEH,CACL,IAAIW,EAAcnC,KAAKke,SAAS3c,EAAOK,EAAKJ,EAAGD,EAAMU,QAAQC,OAAQ6P,GAEjExQ,EAAMc,GAAGd,MAAM0D,YAAc1D,EAAM0D,WAAWqZ,EAClDtd,EAAShB,KAAK0Q,MAAMnP,EAAMc,GAAIA,EAAI2b,EAAcld,EAAMuC,OAAOlB,GAAc4P,OAExE,CACL,IAAI5P,EAAcnC,KAAKke,SAAS3c,EAAOK,EAAKJ,EAAGD,EAAMU,QAAQC,OAAQ6P,GACrE,GAAIxQ,EAAMc,GAAGd,MAAM0D,YAAc+Y,EAC/Bhd,EAAS,CACPA,OAAQF,EAAMuC,OAAOlB,GACrBZ,MAAOA,EAAMc,GAAGd,MAChBC,EAAGD,EAAMc,GAAGb,OAET,CAEDD,EAAMc,GAAGd,MAAM0D,YAAc1D,EAAM0D,WAAWqZ,EAClDtd,EAAShB,KAAK0Q,MAAMnP,EAAMc,GAAIA,EAAI2b,EAAcld,EAAMuC,OAAOlB,GAAc4P,IAKjF,OAAO/Q,I,sBAGT,SAASO,EAAOe,EAASC,EAASwP,GAKhC,IAJA,IAAMvQ,EAAIkB,KAAKC,MAAML,GACfM,EAAIF,KAAKC,MAAMJ,GACjB9C,EAAO,GAEHoD,EAAIrB,EAAGqB,EAAID,GAAKC,EAAItB,EAAMU,QAAQC,OAAQW,IAChDpD,EAAKA,EAAK4D,OAAO,CACf9B,MAAOA,EACPC,EAAGqB,EACHkP,MAAOA,IAIX,OAAOtS,M,KCrDU8e,E,8FACnB,SAAiBC,EAAKjd,EAAOC,GAC3B,IAAIid,EAAKnb,OAAO0R,QAAQwJ,EAAIE,WAAWT,MAAK,SAACQ,GAC3C,OAAOA,EAAG,GAAGhf,KAAK8B,QAAUA,GAASkd,EAAG,GAAGhf,KAAK+B,IAAMA,KAExD,QAAOid,GAAKA,EAAG,K,4DAGjB,WAAqB5e,EAAMuB,EAAIH,EAAM0d,EAAYpV,GAAjD,wFACMxD,EAAO,GACPoC,EAAS,GACT8B,EAAM,GACNzI,EAAI,EACJoB,EAAI,IACJ/C,aAAgB6Z,GANtB,gCAMyC7Z,EAAKyb,OAN9C,cAOQsD,EAAM,IAAInB,EAAU5d,IACtBmE,MACA1E,EAAW,SAACG,GACd,IAAIsD,EAAOtD,EAAK8B,MAAMU,QAAQxC,EAAK+B,GAC/B/B,EAAKI,OAASA,IAEdkG,GADE,kBAAoBhD,EACfA,EACM,IAEfoF,EAAO9I,KAAK,CAACuP,OAAQpN,EAAGU,OAAQ,EAAGyF,IAAKnG,IACxCyI,EAAIzI,GAAK,CACPwB,KAAM,QACN6b,WAAY,YACZpf,KAAM,CACJsD,KAAMA,EACN3B,GAAI3B,EAAK2B,GACTG,MAAO9B,EAAK8B,MACZ1B,KAAMJ,EAAKI,KACX2B,EAAG/B,EAAK+B,EACRR,OAAQvB,EAAKuB,OACbsR,MAAOsM,EAAIE,cAAcrf,EAAK8B,MAAO9B,EAAK+B,GAC1CwD,GAAIxD,IAGRyI,EAAIzI,GAAG/B,KAAKmD,EAAIA,EAChBA,IACApB,MAIJtC,IAAS6f,UAAU,KAAMzf,GACrB0f,EAAgB9f,IAAS6f,UAAU,aAAa,SAACtf,GAC/CA,EAAKI,OAASA,GAChBX,IAAS+f,YAAY3f,MAxC3B,UA2CQ2B,IA3CR,eA6CM2d,EAAIjB,IAAIzb,OAAS,IAAK+H,EAAIzI,EAAE,GAAG/B,KAAK6S,MAAMM,OAASgM,EAAIjB,KAE3Dze,IAAS+f,YAAYD,GA/CvB,kBAiDS,CACLE,OAAQ,CACN,CACEnZ,KACIA,EAEJ/C,KAAM,WACNmc,aAAchX,IAIlBuW,UAAWzU,IA5Df,4C,mFAgEA,SAAcpK,EAAMuf,EAAWC,EAASpd,Q,KCjIpCqd,EAAW,SAACC,EAAWC,GAC3B,IATehe,EASXgB,GATWhB,EASK+d,EARb7c,KAAK+c,IAAIje,EAAGkB,KAAKC,MAAMnB,GAAG,MAW7Bke,EARQ,SAACle,GACb,OAAOkB,KAAKid,IAAIne,EAAGkB,KAAKC,MAAMnB,GAAG,KAKvBoe,CAAMJ,GAEEhd,EAClB,OAAOA,EAAQkd,EAAM,GAAKhd,KAAKmd,SAAS,IAAKH,EAAM,IAG/CI,EAAO,QACQC,E,WACnB,WAAYC,EAAMngB,GAAM,oBACtBG,KAAKggB,KAAOA,EACZhgB,KAAKH,KAAOA,EACZG,KAAKiK,IAAM0F,gB,6CAGb,SAAUsQ,EAAMC,GACVxI,EAAI4B,OAAOtZ,KAAKmgB,QAAQC,SAAUH,K,uBAKxC,SAAUI,EAAUC,EAAWC,EAAQC,GAIjC9I,EAAI4B,OAAO+G,EAAUE,IAAW7I,EAAI4B,OAAOgH,EAAWE,IAEtCxgB,KAAKygB,SAASJ,EAAUC,K,iBAO9C,SAAIL,EAAMC,GACOlgB,KAAKmI,OAAO8X,EAAMC,GACjC,GAAKD,GAASC,EAAd,CACA,IAAIlf,EAAShB,KAAKiK,IAAI+E,MAAMhP,KAAK0gB,OAAOT,EAAMC,IAK9C,OAJKlf,IACHA,EAAShB,KAAKygB,SAASR,EAAMC,GAC7BlgB,KAAK+D,IAAIkc,EAAMC,EAAOlf,IAEjBA,K,iBAGT,SAAIif,EAAMC,EAAOrf,GACfb,KAAKiK,IAAMjK,KAAKiK,IAAI0W,MAAM3gB,KAAK0gB,OAAOT,EAAMC,GAAQrf,K,qBAGtD,SAAQwH,GACN,OAAOrI,KAAKH,KAAK6B,QAAQnC,QAAO,SAAAuC,GAC9B,OAAOA,EAAMmD,WACNnD,EAAMF,KAAKL,QAAUO,EAAMO,GAAGd,OAC9BO,EAAMF,KAAKJ,IAAMM,EAAMO,GAAGb,GAC1B6G,EAAM7F,MAAQV,EAAMF,KAAKJ,GAAKM,EAAMF,KAAKJ,EAAI6G,EAAM5F,S,qBAI9D,SAAQwd,EAAMC,GACZ,IAAI/X,EAASnI,KAAKmI,OAAO8X,EAAMC,GAC3B/R,EAAMnO,KAAKgE,IAAIic,EAAMC,GACrB7X,EAAQF,EAAO8V,MAAK,SAAC5V,GAAY,OAAOA,EAAM9G,QAAU4M,EAAI5M,SAC5Dqf,EAAU5gB,KAAK4gB,QAAQvY,GACvBqV,EAAQkD,EAAQhD,WAAU,SAAA9b,GAAK,OAAIA,EAAMF,KAAKJ,GAAK2M,EAAI3M,KAGzD2M,GADG,IAAMuP,GAAS,IAAMkD,EAAQ1e,OAC1BlC,KAAK6gB,UAAUZ,EAAMC,EAAO/X,EAAQgG,GAExCyS,EAAQ1e,OAAS,IAAMwb,EACnB,IAAIhG,EAAIvJ,EAAI5M,MAAO+d,EAASsB,EAAQA,EAAQ1e,OAAO,GAAGN,KAAKJ,EAAG6G,EAAM5F,MAEpE,IAAIiV,EAAIvJ,EAAI5M,MAAO+d,EAASsB,EAAQlD,GAAO9b,KAAKJ,EAAGof,EAAQlD,EAAM,GAAG9b,KAAKJ,IAEjFxB,KAAK+D,IAAIkc,EAAMC,EAAO/R,K,oBAGxB,SAAO8R,EAAMC,GACX,IAAI/X,EAASnI,KAAKmI,OAAO8X,EAAMC,GAE3B/R,EAAMnO,KAAKgE,IAAIic,EAAMC,GACrB7X,EAAQF,EAAO8V,MAAK,SAAC5V,GAAY,OAAOA,EAAM9G,QAAU4M,EAAI5M,SAC5Dqf,EAAU5gB,KAAK4gB,QAAQvY,GACvBqV,EAAQkD,EAAQhD,WAAU,SAAA9b,GAAK,OAAIA,EAAMF,KAAKJ,GAAK2M,EAAI3M,MACtD,IAAMkc,GAASkD,EAAQ1e,OAAS,IAAGwb,EAAQkD,EAAQ1e,QAGtDiM,EADE,IAAMuP,GAAS,IAAMkD,EAAQ1e,OACzBlC,KAAK8gB,UAAUb,EAAMC,EAAO/X,EAAQgG,GAGpC,IAAIuJ,EAAIvJ,EAAI5M,MADN,IAAVmc,EACuB4B,EAASjX,EAAM7F,MAAOoe,EAAQ,GAAGhf,KAAKJ,GAEtC8d,EAASsB,EAAQlD,EAAM,GAAG9b,KAAKJ,EAAGof,EAAQlD,GAAO9b,KAAKJ,IAEjFxB,KAAK+D,IAAIkc,EAAMC,EAAO/R,K,uBAGxB,SAAU8R,EAAMC,EAAO/X,EAAQgG,GAC7B,IAAI3M,EAAI2G,EAAOyV,WAAU,SAACvV,GAAY,OAAOA,EAAM9G,QAAU4M,EAAI5M,SAAW,EACxE8G,EAAQF,EAAO3G,GACnB,GAAI6G,EAAO,CACT,IAAIuY,EAAU5gB,KAAK4gB,QAAQvY,GAC3B,OAAIuY,EAAQ1e,OAAS,EACZ,IAAIwV,EAAIrP,EAAM9G,MAAO+d,EAASjX,EAAM7F,MAAOoe,EAAQ,GAAGhf,KAAKJ,IAE3D,IAAIkW,EAAIrP,EAAM9G,MAAO+d,EAASjX,EAAM7F,MAAO6F,EAAM5F,MAGvD,OAAO0L,I,uBAGd,SAAU8R,EAAMC,EAAO/X,EAAQgG,GAC7B,IAAI3M,EAAI2G,EAAOyV,WAAU,SAACvV,GAAY,OAAOA,EAAM9G,QAAU4M,EAAI5M,SAAW,EACxE8G,EAAQF,EAAO3G,GACnB,GAAI6G,EAAO,CACT,IAAIuY,EAAU5gB,KAAK4gB,QAAQvY,GAC3B,OAAIuY,EAAQ1e,OAAS,EACZ,IAAIwV,EAAIrP,EAAM9G,MAAO+d,EAASsB,EAAQA,EAAQ1e,OAAO,GAAGN,KAAKJ,EAAG6G,EAAM5F,MAEtE,IAAIiV,EAAIrP,EAAM9G,MAAO+d,EAASjX,EAAM7F,MAAO6F,EAAM5F,MAGvD,OAAO0L,I,oBAGd,SAAO8R,EAAMC,GACX,MAAO,CAACD,GAAQA,EAAK1e,MAAO0e,GAAQA,EAAKze,EAAG0e,GAASA,EAAM3e,MAAO2e,GAASA,EAAM1e,K,wBAGnF,SAAW2M,EAAK4S,GACd,OAAO5S,EAAI5M,QAAUwf,EAAMxf,OAASwf,EAAMve,OAAU2L,EAAI3M,EAAI,GAAO2M,EAAI3M,EAAI,GAAMuf,EAAMte,M,sBAGzF,SAASwd,EAAMC,GACb,IAAI/X,EAASnI,KAAKmI,OAAO8X,EAAMC,GAC3B7X,EAAQF,EAAOzF,KAAKC,MAAMwF,EAAOjG,OAAS,IACzCmG,GAEHrI,KAAKmI,OAAO8X,EAAMC,GAEpB,IAAI1e,EAAIxB,KAAKghB,QAAQ3Y,GACrB,OAAO,IAAIqP,EAAIrP,EAAM9G,MAAOC,K,qBAG9B,SAAQ6G,GACN,OAAOiX,EAASjX,EAAM7F,MAAO6F,EAAM5F,O,oBAMrC,SAAO4F,EAAO4Y,EAAMC,GAClB,IAAM1e,EAAQye,GAAc5Y,EAAM7F,MAC5BC,EAAMye,GAAc7Y,EAAM5F,IAG5Bid,EAAQjd,EAAMD,EACZhB,EAAIgB,EAAQkd,EAAM,GAAKhd,KAAKmd,SAAS,IAAKH,EAAM,GACtD,OAAO,IAAIhI,EAAIrP,EAAM9G,MAAOC,K,oBAI9B,SAAOgB,EAAOC,GACZ,IAAIid,EAAQjd,EAAMD,EAClB,OAAOA,EAAQkd,EAAM,GAAKhd,KAAKmd,SAAS,IAAKH,EAAM,K,qBAGrD,SAAQO,EAAMC,EAAOiB,GACnB,GAAKlB,GAASC,EAAd,CACA,IACI7X,EADSrI,KAAKmI,OAAO8X,EAAMC,GACZkB,MACnB,OAAOphB,KAAKqhB,UAAUhZ,EAAO8Y,M,uBAG/B,SAAU9Y,EAAO8Y,GACf,IAAI3e,EAAQE,KAAK+c,IAAIpX,EAAM7F,MAAOE,KAAKC,MAAM0F,EAAM7F,OAAO,KACtDC,EAAM4F,EAAM5F,IAChB,GAAI0e,GAAc,EAAG,CACnB,IAAIhS,GAAQ1M,EAAMD,GAAO,GAEzBC,GADAD,GAAgB2e,EAAWhS,GACbA,EAEhB,OAAO,IAAIuI,EAAIrP,EAAM9G,MACjBvB,KAAK6f,OACDrd,EACAC,M,mBAKV,SAAMwd,EAAMC,EAAOiB,GACjB,GAAKlB,GAASC,EAAd,CACA,IACI7X,EADSrI,KAAKmI,OAAO8X,EAAMC,GACZoB,QACnB,OAAOthB,KAAKuhB,UAAUlZ,EAAO8Y,M,uBAG/B,SAAU9Y,EAAO8Y,GACf,IAAI3e,EAAQ6F,EAAM7F,MACdC,EAAMC,KAAKid,IAAItX,EAAM5F,IAAKC,KAAKC,MAAM0F,EAAM5F,KAAK,KACpD,GAAI0e,GAAc,EAAG,CACnB,IAAMhS,GAAQ1M,EAAMD,GAAO,GAC3BC,GAAY0e,EAAWhS,EACvB3M,GAAgB2M,EAElB,OAAO,IAAIuI,EACPrP,EAAM9G,MACNvB,KAAK6f,OACDrd,EACAC,M,oBAKV,SAAOwd,EAAMC,GACX,GAAKD,GAASC,EAAd,CAYA,IAXA,IAAIsB,EACAxgB,EAAS,GAUL6B,EAAI,EAAGA,EAAI7C,KAAKggB,KAAK9d,OAAQW,IAAK,CACxC,IAAI4R,EAAUzU,KAAKggB,KAAKnd,GACxB,GAAIod,IAASuB,GACX,GAAIxhB,KAAKyhB,WAAWxB,EAAMxL,KACxB+M,GAAY,EACZE,EAAcjN,IACTyL,GAASlgB,KAAKyhB,WAAWvB,EAAOzL,IAAU,WAIjD,GADAiN,EAAcjN,GACVzU,KAAKyhB,WAAWvB,EAAOzL,GACzB,MAKN,OAAOzT,EAxBP,SAAS0gB,EAAcX,GACrB/f,EAAO3B,KAAK,CACVkC,MAAOwf,EAAMxf,MACbiB,MAAOyd,GAAQA,EAAK1e,QAAUwf,EAAMxf,MAAQmB,KAAK+c,IAAIQ,EAAKze,EAAI,EAAGuf,EAAMve,OAASue,EAAMve,MACtFC,IAAKyd,GAASA,EAAM3e,QAAUwf,EAAMxf,MAAQmB,KAAKid,IAAIjd,KAAKC,MAAMud,EAAM1e,GAAKse,EAAMiB,EAAMte,IAAKqd,GAASiB,EAAMxf,MAAMU,QAAQC,SAAW6e,EAAMte,IAAMse,EAAMte,IAAMqd,EAAOiB,EAAMte,W,aCvN3Kkf,G,kCAAeC,EAAQ,KAEvBC,EAAmBD,EAAQ,IAE3BE,EAAeF,EAAQ,IAEvBG,EAAcH,EAAQ,IAEtBI,EAAmBJ,EAAQ,KAI3BhZ,IAFsBgZ,EAAQ,KAEbA,EAAQ,KAEzBK,GAAsBL,EAAQ,KAE9BM,GAAqBN,EAAQ,KAE7BO,GAA0BP,EAAQ,KAElCQ,GAAoBR,EAAQ,IAE5BS,GAAMT,EAAQ,IAEdU,GAAYV,EAAQ,GAEpBW,GAAYX,EAAQ,IAEpBY,GAA8BH,GAAI,2BAEtClf,GAGEmf,GAHFnf,KACAwM,GAEE2S,GAFF3S,IACA8S,GACEH,GADFG,WAGIC,GAAwB,SAACnhB,EAAOmd,GAAe,IAEjD/W,EAKEpG,EALFoG,IACA3E,EAIEzB,EAJFyB,KACAvD,EAGE8B,EAHF9B,KAYF,MARwB,CACtBsG,KAFExE,EAFFwE,KAKA4c,MAHEphB,EADFohB,OAIgB,EAChB3f,KAAMA,GAAQ,WACd2E,IAAKA,GAAOya,KACZ3iB,KAAMkQ,GAAIlQ,GACVmjB,cAAeC,GAAoBthB,EAAOmd,KAKxCmE,GAAsB,SAACthB,EAAOmd,GAAe,IAE/C3Y,EAGExE,EAHFwE,KACc+c,EAEZvhB,EAFF4d,aACmB4D,EACjBxhB,EADFyhB,kBAEI7D,EAAe2D,GAAmB,GAGxC,OAAOb,GAAoBE,GAAwBpc,EAFzBgd,GAAwB,IAE2Bb,GAAmBnc,EAAMoZ,EAAa5f,QAAO,SAAA8I,GAAK,OAAIqW,EAAUuE,eAAe5a,EAAMV,QAAMsC,KAAI,SAAA5B,GAAK,kCAAUA,GAAV,IAC/KV,IAAK+W,EAAUrW,EAAMV,aAInBub,GAAkB,SAAC3hB,GACvB,OAAO,2BAAKA,GAAZ,IACEoG,IAAKpG,EAAMoG,KAAOya,QAUhBe,GAAkB,SAACC,EAAOC,EAAOC,GACrC,IAAMC,EAAqBF,EAAMpZ,KAAI,SAAA1I,GACnC,OAAO,2BAAKA,GAAZ,IACE+hB,iBAIJ,OAAOF,EAAM/f,OAAOkgB,EAAmBC,YAmEnCC,GAAkB,SAACC,EAAUhF,GACjC,IAAMiF,EAAiBD,EAASxE,OAAOjB,MAAK,SAAA1c,GAAK,OAAIgC,MAAMqgB,QAAQriB,EAAMoR,WAAapR,EAAMoR,SAASzQ,OAAS,KACxG2hB,EAAYrB,KAAgCmB,EAAiB3B,EAAiB8B,2BAA2BJ,GAAUxE,OAASwE,EAASxE,OAE3I,OAAKsD,GA7DyB,SAACtD,EAAQR,GACvC,OAAOQ,EACNjV,IAAIiZ,IAAiBa,QAAO,SAACC,EAAUziB,EAAOmc,GAC7C6E,GAAUhf,MAAMqgB,QAAQriB,EAAMoR,UAAW,yEAEzC,IAAMA,EAAWpR,EAAMoR,SAAS1I,IAAIiZ,IAE9Be,EAAmB,IAAIpC,EAAJ,2BAA0Ba,GAAsBnhB,EAAOmd,IAAvD,IACvBwF,YAAuB,IAAVxG,EAAc,KAAOwB,EAAOxB,EAAQ,GAAG/V,IACpDwc,YAAazG,IAAUwB,EAAOhd,OAAS,EAAI,KAAOgd,EAAOxB,EAAQ,GAAG/V,IACpEgL,SAAUxP,GAAKwP,EAAS1I,KAAI,SAACma,GAAD,OAAWA,EAAMzc,WAG/Cqc,EAAWA,EAASjgB,IAAIkgB,EAAiBvb,SAAUub,GAInD,IAFA,IAAIb,EAAQD,GAAgB,GAAIxQ,EAAUsR,GAEnCb,EAAMlhB,OAAS,GAAG,CAEvB,IAAMmC,EAAO+e,EAAMhC,MAEbkC,EAAYjf,EAAKif,UACjBe,EAAWf,EAAUgB,eACrB5G,EAAQ2G,EAASE,QAAQlgB,EAAKsD,KAC9B6c,EAAejhB,MAAMqgB,QAAQvf,EAAKsO,UAExC,IAAK6R,EAAc,CACjBjC,GAAUiC,EAAc,yEACxB,MAIF,IAAM7R,EAAWtO,EAAKsO,SAAS1I,IAAIiZ,IAC7Be,EAAmB,IAAIpC,EAAJ,2BAA0Ba,GAAsBre,EAAMqa,IAAtD,IACvB5e,OAAQwjB,EAAU5a,SAClBiK,SAAUxP,GAAKwP,EAAS1I,KAAI,SAACma,GAAD,OAAWA,EAAMzc,QAC7Cuc,YAAuB,IAAVxG,EAAc,KAAO2G,EAASrgB,IAAI0Z,EAAQ,GACvDyG,YAAazG,IAAU2G,EAASlV,KAAO,EAAI,KAAOkV,EAASrgB,IAAI0Z,EAAQ,MAGzEsG,EAAWA,EAASjgB,IAAIkgB,EAAiBvb,SAAUub,GAEnDb,EAAQD,GAAgBC,EAAOzQ,EAAUsR,GAG3C,OAAOD,IACNvB,MAmBcgC,CAAwBZ,EAAWnF,GAhB1B,SAACQ,EAAQR,GACnC,OAAO+D,GAAWvD,EAAOjV,KAAI,SAAC1I,GAE5B,IAAMmS,EAAe,IAAIiO,EAAae,GAAsBnhB,EAAOmd,IACnE,MAAO,CAAChL,EAAahL,SAAUgL,OASxBgR,CAAoBf,EAAiB3B,EAAiB2C,2BAA2BjB,GAAUxE,OAAS2E,EAAWnF,IAiD3GkG,GAhBoB,SAAClB,GAClCnB,GAAUhf,MAAMqgB,QAAQF,EAASxE,QAAS,gCAE1C,IAAMR,EA5BmB,SAACgF,GAAc,IAE3BmB,EACTnB,EADFhF,UAEIA,EAAY,GAkBlB,OAhBApb,OAAOwhB,KAAKD,GAAcnlB,SAAQ,SAAAqlB,GAAiB,IAAD,EAK5CF,EAAaE,GAHf/hB,EAF8C,EAE9CA,KACA6b,EAH8C,EAG9CA,WACApf,EAJ8C,EAI9CA,KAGF,GAAIA,EAAKkF,UACP+Z,EAAUqG,GAAgBtlB,EAAKkF,UAC/Bod,EAAYiD,cAAcvlB,EAAKkF,UAAWlF,OACrC,CACL,IAAMkF,EAAYod,EAAYkD,SAASjiB,EAAM6b,EAAYpf,GAAQ,IACjEA,EAAKkF,UAAYA,EACjB+Z,EAAUqG,GAAgBpgB,MAGvB+Z,EAMWwG,CAAmBxB,GAE/BM,EAAWP,GAAgBC,EAAUhF,GAErCyG,EAAiBnB,EAASoB,UAAY,IAAIxc,GAAmBA,GAAeyc,YAAYrB,EAASjU,QAAQrH,UAC/G,OAAO,IAAIoZ,EAAa,CACtBkC,WACAtF,YACA4G,gBAAiBH,EACjBI,eAAgBJ,K,kBCzNdK,G,kCAEAC,G,WACJ,WAAY1iB,EAAMH,EAAGrB,EAAO8X,GAAO,oBACjCrZ,KAAK+C,KAAOA,EACZ/C,KAAKiC,QAAU,CAACc,GAChB/C,KAAK4C,EAAIA,EACT5C,KAAKuB,MAAQA,EACbvB,KAAKqZ,KAAOA,E,uCAGd,WACE,OAAOrZ,KAAKuB,MAAMwM,M,oBAEpB,WACE,YAAkB3N,IAAXJ,KAAKwB,M,KAIVkkB,G,kDACJ,WAAYpd,EAAWlB,GAAa,IAAD,uBACjC,gBACKkB,UAAYA,EACjB,EAAKlB,WAAaA,EAClB,EAAKxF,KAAO,EAAKwF,WAAWue,YAAYC,OAAOtd,EAAUoC,YACrD,EAAKtD,WAAWye,aAAa,EAAKjkB,KAAM0G,EAAUqC,UACpD,EAAKtI,GAAK,EAAKT,KAEf,EAAKS,GAAK,EAAK+E,WAAWue,YAAYC,OAAOtd,EAAUqC,UAEzD,IAAMmb,EAAQ,EAAKlkB,KAAKL,MAAMwM,KAAO3G,EAAWmC,eAAiB,EAAK3H,KAAKL,MAAM0D,UAVhD,OAWjC,EAAK1D,MAAQukB,EAAQ,EAAKlkB,KAAKL,MAAQ,IAAIa,IAAM,GAAI,EAAKR,KAAM,EAAKS,GAAI,EAAK+E,WAAWmC,cACzF,EAAKhI,MAAMwM,KAAM,EAZgB,E,UADhB0X,IAiBfM,G,WACJ,WAAYxkB,EAAOiB,EAAOC,GAAK,oBAC7BzC,KAAKuB,MAAQA,EACbvB,KAAKwC,MAAQA,EACbxC,KAAKyC,IAAMA,E,4CAGb,SAAS0L,GACP,OAAOnO,KAAKuB,QAAU4M,EAAI5M,OAASvB,KAAKwC,MAAQ2L,EAAI3M,GAAK2M,EAAI3M,EAAIxB,KAAKyC,M,gBAGxE,SAAGujB,GACD,QAAKA,IACCA,aAAkBD,IAEjB/lB,KAAKuB,QAAUykB,EAAOzkB,OAASvB,KAAKwC,QAAUwjB,EAAOxjB,OAASxC,KAAKyC,MAAQujB,EAAOvjB,U,KAIxE6G,G,WACnB,WAAYlC,GAAY,oBACtBpH,KAAKoH,WAAaA,E,2CAGpB,SAAQnF,EAASgkB,EAAene,EAAOQ,GAAW,IAAD,EACzC4d,EAASlmB,KAAKmmB,WAAWnmB,KAAKoH,WAAWuX,YACzC5E,EAAS,IAAI2L,GAAOpd,EAAWtI,KAAKoH,YAC1C2S,EAAO9X,QAAUjC,KAAKomB,cAAcnkB,GACpC,IAAMokB,EAASrmB,KAAKsmB,UAAUJ,EAAQnM,GAJS,EAKJ/Z,KAAKumB,YAAYF,GALb,oBAKxCG,EALwC,KAKtBC,EALsB,KAMzC/kB,EAAU1B,KAAK0mB,UAAUL,EAAQG,EAAkBC,EAAgB1M,GACzE7T,QAAQC,IAAI,4BAA6B4T,EAAQrY,GACjD1B,KAAK2mB,mBACL,EAAA3mB,KAAKoH,WAAWvH,MAAKwa,SAArB,oBAAiC3Y,M,wBAGnC,SAAW8c,GAAK,IAUVsC,EAVS,OACPjP,EAAQ2M,EAAIU,OAAO,GAAGnZ,KAAK6gB,MAAM,IAAI3c,KAAI,SAAC4c,EAAOrlB,GACrD,IAAM/B,EAAO+e,EAAIE,UAAUld,GAAG/B,KACxB4Z,EAAO,EAAKjS,WAAWvH,KAAKwZ,KAAKrK,MAAM,CAAC7L,eAAK,CAAC1D,EAAKmD,EAAGnD,EAAK8B,UAEjE,OADa,IAAIkkB,GAAKhmB,EAAKsD,KAAMtD,EAAKmD,EAAGnD,EAAK8B,MAAO8X,MAOnDgN,EAHWrmB,KAAK8mB,eAAejV,GAGfkV,SAAQ,SAAAvnB,GAC1B,GAAIA,aAAgBgmB,GAAY,OAAOhmB,EAEvC,IAAMwnB,EAAc,EAAK5f,WAAWe,OAAO3I,EAAKoD,GAAGsH,OAAO,GAAG,GAAGA,OAAO,GAAG,GACpE+c,EAAa,EAAK7f,WAAWe,OAAO3I,EAAKoD,EAAE,GAAG,GAAG,GAEvD,OAAIke,IAAckG,GAChBlG,EAAYmG,EACL,CAACznB,EAAM,IAAIumB,GAAMkB,EAAW1lB,MAAO0lB,EAAWzkB,MAAOykB,EAAWxkB,QAGzEqe,EAAYmG,EACL,CAAC,IAAIlB,GAAMiB,EAAYzlB,MAAOylB,EAAYxkB,MAAOwkB,EAAYvkB,KAAMjD,EAAM,IAAIumB,GAAMkB,EAAW1lB,MAAO0lB,EAAWzkB,MAAOykB,EAAWxkB,UAGrIykB,EAAclnB,KAAKoH,WAAWe,OAAO,GAAG,GAAG,GAC3Cgf,EAAc,IAAIpB,GAAMmB,EAAY3lB,MAAO2lB,EAAY1kB,MAAO0kB,EAAYzkB,KAC3E0kB,EAAYC,GAAGf,EAAO,MAAOA,EAAS,CAACc,GAAa9jB,OAAOgjB,IAEhE,IAAMgB,EAAarnB,KAAKoH,WAAWe,OAAO+B,OAAO,GAAG,GAAGA,OAAO,GAAG,GAAGA,OAAO,GAAG,GACxEod,EAAa,IAAIvB,GAAMsB,EAAW9lB,MAAO8lB,EAAW7kB,MAAO6kB,EAAW5kB,KAG5E,OAFK6kB,EAAWF,GAAGf,EAAOA,EAAOnkB,OAAO,MAAOmkB,EAASA,EAAOhjB,OAAOikB,IAE/DjB,I,2BAGT,SAAcpkB,GACZ,IAAIslB,EAAatlB,EAAQ2F,gBAGnBwe,EAFKmB,EAAWvd,UAEK4c,MAAM,IAAIG,SAAQ,SAAChkB,EAAMvB,GAClD,IAAImD,EAAY4iB,EAAW1f,YAAYrG,GACvC,OAAImD,EACE1C,EAAQ6C,UAAUH,GAAWI,UAAUoI,SAClClL,EAAQ6C,UAAUH,GAAWI,UAAUhC,KAClC,GAEPA,KAIX,OAAOqjB,I,uBAGT,SAAUvU,EAAOkI,GACf,IAAMyN,EAAiB3V,EAAM+L,WAAU,SAAApe,GAAI,OAAIA,aAAgBumB,IAAUvmB,EAAKioB,SAAS1N,EAAOnY,SACxF8lB,EAAe7V,EAAM+L,WAAU,SAAApe,GAAI,OAAIA,aAAgBumB,IAAUvmB,EAAKioB,SAAS1N,EAAO1X,OACtF2kB,EAAcnV,EAAM2V,GACpBG,EAAiB,IAAI5B,GAAMiB,EAAYzlB,MAAOylB,EAAYxkB,MAAOuX,EAAOnY,KAAKJ,GAC7EylB,EAAapV,EAAM6V,GACnBE,EAAgB,IAAI7B,GAAMkB,EAAW1lB,MAAOwY,EAAO1X,GAAGb,EAAGylB,EAAWxkB,KAG1E,OADeoP,EAAM3H,MAAM,EAAGsd,GAAgBnkB,OAAO,CAACskB,EAAgB5N,EAAQ6N,IAAgBvkB,OAAOwO,EAAM3H,MAAMwd,EAAa,EAAG7V,EAAM3P,W,4BAIzI,SAAe2P,GAAQ,IAAD,OACdwU,EAASxU,EAAMkV,SAAQ,SAACvnB,EAAMke,GAClC,OAAI,EAAKtW,WAAWygB,qBAAqBJ,SAAS/J,GACzC,CAAC,IAAI8H,GAAchmB,GAGrBA,KAET,OAAIQ,KAAKoH,WAAWygB,qBAAqBJ,SAAS5V,EAAM3P,QAC/CmkB,EAAOhjB,OAAO,IAAImiB,IAGpBa,I,yBAGT,SAAYxU,GAAQ,IAAD,OACXiW,EAAcjW,EAAM+L,WAAU,SAAApe,GAAI,OAAIA,aAAgBkmB,MACxDqC,EAAkBlW,EAAM5H,KAAI,SAAAzK,GAAI,MAA8B,SAA1BA,EAAKwoB,YAAYC,MAAmBzoB,EAAK+B,MAAMwM,KAAOvO,EAAK+B,MAAM0D,YAAc,EAAKmC,WAAWmC,gBAAc2e,aAAY,EAAMJ,GACnKC,GAAmB,GAAKlW,EAAM3H,MAAM6d,EAAkB,EAAGD,GAAalK,WAAU,SAAApe,GAAI,OAAIA,aAAgBimB,IAAQjmB,aAAgBgmB,OAAe,IACjJuC,GAAmB,GAGrB,IAAII,EAAiBtW,EAAM5H,KAAI,SAAAzK,GAAI,MAA8B,SAA1BA,EAAKwoB,YAAYC,MAAmBzoB,EAAK+B,MAAMwM,KAAOvO,EAAK+B,MAAM0D,YAAc,EAAKmC,WAAWmC,gBAAcgb,SAAQ,EAAMuD,GAKlK,OAJIK,GAAkB,GAAKtW,EAAM3H,MAAM4d,EAAc,EAAGK,GAAgBvK,WAAU,SAAApe,GAAI,OAAIA,aAAgBimB,IAAQjmB,aAAgBgmB,OAAe,IAC/I2C,GAAkB,GAGb,CAACJ,GAAmB,GAAKlW,EAAMkW,GAAiBxmB,MAAO4mB,GAAkB,GAAKtW,EAAMsW,GAAgB5mB,S,wBAG7G,SAAWsQ,GAAQ,IAAD,OACVnQ,EAAU1B,KAAKoH,WAAWvH,KAAK6B,QAAQnC,QAAO,SAAAuC,GAAK,OAAKA,EAAMiM,KAAOjM,EAAMmD,YAAc,EAAKmC,WAAWmC,gBAC/GsI,EAAMnS,SAAQ,SAAC2I,GACPA,aAAiB0d,KAEvB1d,EAAM+f,YAAc1mB,EAAQnC,QAAO,SAAAuC,GAAK,OAAIA,EAAMF,KAAKL,QAAU8G,EAAM9G,OAAS8G,EAAM7F,MAAQV,EAAMF,KAAKJ,GAAKM,EAAMF,KAAKJ,EAAI6G,EAAM5F,OACnI4F,EAAMggB,UAAY3mB,EAAQnC,QAAO,SAAAuC,GAAK,OAAIA,EAAMO,GAAGd,QAAU8G,EAAM9G,OAAS8G,EAAM7F,MAAQV,EAAMO,GAAGb,GAAKM,EAAMO,GAAGb,EAAI6G,EAAM5F,a,wBAI/H,SAAWoP,GACT,IAAIiP,EAAY,GAkBhB,OAjBejP,EAAMkV,SAAQ,SAAAvnB,GAC3B,KAAMA,aAAgBumB,IAAQ,CAC5B,IAAMuC,EAAIxH,EAAUzd,OAAO7D,GAE3B,OADAshB,EAAY,GACLwH,EAGT,GAAIxH,EAAU5e,OAAS,GAAK4e,EAAU,GAAGvf,QAAU/B,EAAK+B,OAASuf,EAAU,GAAGre,MAAQjD,EAAKgD,MAAO,CAChG,IAAM+lB,EAAW,IAAIxC,GAAMvmB,EAAK+B,MAAOuf,EAAU,GAAGte,MAAOhD,EAAKiD,KAEhE,OADAqe,EAAY,GACLyH,EAIT,OADAzH,EAAY,CAACthB,GACN,MACN6D,OAAOyd,K,uBAKZ,SAAUjP,EAAO2U,EAAkBC,EAAgB1M,GAAS,IAAD,OACrDyO,EAAU7Y,gBACV1N,EAAU,GACRwmB,EAAe,CAACjC,EAAkBC,GAElCJ,EAASrmB,KAAK0oB,WAAW7W,GAC/B7R,KAAK2oB,WAAWtC,GAEhBA,EAAO3mB,SAAQ,SAAAF,GACTA,aAAgBimB,KAASjmB,aAAgBkmB,IAAU+C,EAAahB,SAASjoB,EAAK+B,UAC5E/B,aAAgBimB,IAAQjmB,EAAK6Z,OAC/BmP,EAAUA,EAAQ7H,MAAM,CAACxd,eAAK,CAAClB,EAAQC,OAAQ6X,EAAOxY,SAAU/B,EAAK6Z,OAEvEpX,EAAUA,EAAQoB,OAAO7D,EAAKyC,UAE5BzC,aAAgBumB,IAAS0C,EAAahB,SAASjoB,EAAK+B,SACtD/B,EAAK4oB,YAAY1oB,SAAQ,SAAAoC,GACvBA,EAAMF,KAAO,IAAI8V,EAAIqC,EAAOxY,MAAOU,EAAQC,OAASJ,EAAMF,KAAKJ,EAAIkB,KAAKC,MAAMb,EAAMF,KAAKJ,OAE3FhC,EAAK6oB,UAAU3oB,SAAQ,SAAAoC,GACrBA,EAAMO,GAAK,IAAIqV,EAAIqC,EAAOxY,MAAOU,EAAQC,OAASJ,EAAMO,GAAGb,EAAIkB,KAAKC,MAAMb,EAAMO,GAAGb,WAKzFuY,EAAOxY,MAAMU,QAAUA,EACnBukB,IAAmBzM,EAAOxY,MAAMK,KAAO4kB,EAAiB5kB,MACxD6kB,IAAiB1M,EAAOxY,MAAMc,GAAKokB,EAAepkB,IACtD,IAAMX,EAAU1B,KAAKoH,WAAWvH,KAAK6B,QAChCnC,QAAO,SAACuC,GAAD,OAAYA,EAAMiM,KAAOjM,EAAMmD,YAAc,EAAKmC,WAAWmC,gBACpEhK,QAAO,SAAAuC,GAAK,OAAK2mB,EAAahB,SAAS3lB,MAU5C,OARA9B,KAAKoH,WAAWvH,KAAKwZ,KAAOrZ,KAAKoH,WAAWvH,KAAKwZ,KAAK9Z,QAAO,SAACsB,EAAO8G,GACnE,GAAIA,aAAexE,OAAM,CACvB,IAAM5B,EAAQoG,EAAI3D,IAAI,GACtB,OAAQykB,EAAahB,SAASlmB,GAEhC,OAAO,KACNqnB,MAAMJ,GAEFzO,EAAOxY,iBAAiB0B,IAAOvB,EAAUA,EAAQ2B,OAAO0W,EAAOxY,S,6BAGxE,WAAkB,IAAD,OACfvB,KAAKoH,WAAWvH,KAAK6B,QAAU1B,KAAKoH,WAAWvH,KAAK6B,QAAQnC,QAAO,SAACuC,GAAD,QAAaA,EAAMiM,KAAOjM,EAAMmD,YAAc,EAAKmC,WAAWmC,qB,KC9O/HuW,IAF4B8B,EAAQ,KAE7B,SAEPiE,GAAe,SAAC1X,EAAK9F,GACzB,OAAOA,EAAM9G,QAAU4M,EAAI5M,OAAS8G,EAAM7F,MAAQ2L,EAAI3M,GAAK2M,EAAI3M,EAAI6G,EAAM5F,KAGrEomB,GAAkB,SAAC1a,EAAK9F,GAC5B,OAAOA,EAAM9G,QAAU4M,EAAI5M,OAAS8G,EAAM7F,OAAS2L,EAAI3M,GAAK2M,EAAI3M,GAAK6G,EAAM5F,KAGxDqmB,G,WACnB,WAAYjpB,EAAMuB,EAAIH,EAAM8nB,GAAO,oBACjC/oB,KAAKH,KAAOA,EACZG,KAAKoB,GAAKA,EACVpB,KAAKiB,KAAOA,EACZjB,KAAK+oB,MAAQA,E,+EAGf,WAAWxf,GAAX,oBAAArJ,EAAA,yDACEF,KAAKuJ,aAAeA,IAChBvJ,KAAKH,gBAAgB6Z,GAF3B,gCAE8C1Z,KAAKH,KAAKyb,OAFxD,uBAI0Btb,KAAKgpB,YAAW,kBAAM,EAAKC,iBAJrD,OAIEjpB,KAAK2e,WAJP,uD,sHAOA,WAAiB1d,GAAjB,sDAAAf,EAAA,6DACM8f,EAAO,GACPkJ,EAAS,GAEPC,EAAOnpB,KACT4C,EAAI,EAERoQ,IAAQ/Q,QAAQ,GAAK,GACf3C,EAAWJ,IAAS6f,UAAU,iBAAiB,SAACtf,GAChDA,EAAKI,OAASspB,EAAKtpB,OAChBqpB,EAAOtmB,KAAIsmB,EAAOtmB,GAAG,IACtByF,GAAO6gB,EAAOtmB,GAAGvD,KAAKgJ,GAC1B2X,EAAK3gB,KAAKI,GACV4I,EAAQ,CACN9G,MAAO9B,EAAK8B,MACZiB,MAAO/C,EAAK+C,MACZC,IAAKhD,EAAK8B,MAAMU,QAAQC,SAAWzC,EAAKgD,IAAMhD,EAAKgD,IAAMqd,GAAOrgB,EAAKgD,SAIrE2mB,EAAalqB,IAAS6f,UAAU,MAAM,SAACtf,GAC3C,GAAIA,EAAKI,OAASspB,EAAKtpB,KAAM,CAC3B,IAAM2C,EAAQE,KAAK+c,IAAIhgB,EAAK+C,MAAO/C,EAAK+B,GAClCiB,EAAMC,KAAKid,IAAIlgB,EAAK+B,EAAEse,GAAMzX,EAAM5F,KAEnCymB,EAAOtmB,KAAIsmB,EAAOtmB,GAAG,IAC1BsmB,EAAOtmB,GAAGvD,KAAK,CACbkC,MAAO9B,EAAK8B,MACZiB,MAAOA,EACPC,IAAKA,IAGP4F,EAAM7F,MAAQ/C,EAAK+B,EAAI,EAEvBoB,QAIEymB,EAAgBrpB,KAAKH,KAAK6B,QAtClC,UAyC2BT,IAzC3B,eAyCQ0d,EAzCR,OA2CE3e,KAAKH,KAAK6B,QAAU2nB,EAEfH,EAAOtmB,KAAIsmB,EAAOtmB,GAAG,IACtByF,GAAO6gB,EAAOtmB,GAAGvD,KAAKgJ,GAC1BnJ,IAAS+f,YAAY3f,GACrBJ,IAAS+f,YAAYmK,GAEjBE,EAAc,GAlDpB,UAmD2BtpB,KAAKH,KAAK4B,aAnDrC,QAmDQ8nB,EAnDR,OAoDQ7nB,EAAW6nB,EAAWhqB,QAAO,SAAAuC,GAAK,OAAIA,EAAMmD,YAAc,EAAKsE,gBApDvE,cAqDoB7H,GArDpB,IAqDE,4BAASI,EAAkB,SACfmD,YAAcnD,EAAMF,KAAKL,MAAM0D,WAAWqkB,EAAYjqB,KAAKyC,EAAMF,MACrEE,EAAMF,KAAKL,QAAUO,EAAMO,GAAGd,OAASO,EAAMF,KAAKJ,IAAMM,EAAMO,GAAGb,GACjEM,EAAMmD,YAAcnD,EAAMO,GAAGd,MAAM0D,WAAWqkB,EAAYjqB,KAAKyC,EAAMO,IAxD/E,qCA2DEinB,EAAYE,MAAK,SAACtpB,EAAEyX,GAClB,OAAIzX,EAAEsB,EAAImW,EAAEnW,GACF,EAENtB,EAAEsB,EAAImW,EAAEnW,EACH,EAEF,KAGTxB,KAAK6nB,qBAAuB,GACtB4B,EAAUP,EAAOjf,KAAI,SAACyf,EAAShM,GACnC,OAAO4L,EAAYvF,QAAO,SAAC/iB,EAAQ2oB,GACjC,IAAMC,EAAoB5oB,EAAO4c,WAAU,SAAAvV,GAAK,OAAIwd,GAAa8D,EAAYthB,MAC7E,GAAIuhB,GAAqB,EAAE,CACzB,IAAMvhB,EAAQrH,EAAO4oB,GACfC,EAAK,CACTtoB,MAAO8G,EAAM9G,MACbiB,MAAO6F,EAAM7F,MACbC,IAAKknB,EAAWnoB,GAEZsoB,EAAK,CACTvoB,MAAO8G,EAAM9G,MACbiB,MAAOmnB,EAAWnoB,EAClBiB,IAAK4F,EAAM5F,KAIb,OADKknB,EAAWpoB,MAAMwM,KAAO,EAAK8Z,qBAAqBxoB,KAAKqe,GACrD1c,EAAOkJ,MAAM,EAAG0f,GAAmBvmB,OAAOwmB,GAAIxmB,OAAOymB,GAAIzmB,OAAOrC,EAAOkJ,MAAM0f,EAAkB,IAEtG,OAAO5oB,IAER0oB,MAGL1pB,KAAK6nB,qBAAL,YAAgC,IAAIjM,MAAI5b,KAAK6nB,uBAEvCkC,EAAUN,EAAQxf,KAAI,SAAAyf,GAC1B,IAAI5I,EACJ,OAAO4I,EAAQ3F,QAAO,SAAC/iB,EAAQqH,GAC7B,OAAsB,IAAlBrH,EAAOkB,QACT4e,EAAYzY,EACL,CAAC,CAACA,MAEKihB,EAAYrL,MAAK,SAAA0L,GAC/B,OAAOd,GAAgBc,EAAY7I,IAAc+H,GAAgBc,EAAYthB,OAElErH,EAAO3B,KAAK,IACzB2B,EAAOA,EAAOkB,OAAO,GAAG7C,KAAKgJ,GAC7ByY,EAAYzY,EACLrH,KACN,OAILkF,QAAQC,IAAI,qBAAsB+iB,EAAQO,EAASM,GACnD/pB,KAAKmI,OAAS4hB,EACd/pB,KAAK2lB,YAAc,IAAI5F,EAAYC,EAAMhgB,KAAKH,MApHhD,kBAsHS8e,GAtHT,iD,0FAyHA,SAAsBqL,EAAMC,GAC1B,IAAMC,EAASlqB,KAAKmK,cAAc6f,GAClC,OAAOhqB,KAAK6lB,aAAaoE,EAAMC,K,0BAIjC,SAAa/b,EAAK9F,GAChB,OAAOwd,GAAa1X,EAAK9F,K,2BAG3B,SAAc8F,GAMZ,OALenO,KAAKmI,OAAO4e,SAAQ,SAAA7e,GAAO,OAAIA,EAAQ6e,SAAQ,SAAAoD,GAAO,OAAIA,EAAQpD,SAAQ,SAAA1e,GACvF,GAAIwd,GAAa1X,EAAK9F,GAAQ,OAAOA,WAClC9I,QAAO,SAAA6qB,GAAC,OAAEA,KAEM,K,uBAIvB,SAAUjc,GAMR,OALUnO,KAAKmI,OAAOyV,WAAU,SAAA1V,GAC9B,OAAOA,EAAQ+V,MAAK,SAAAkM,GAAO,OAAIA,EAAQlM,MAAK,SAAA5V,GAC1C,GAAIwd,GAAa1X,EAAK9F,GAAQ,OAAO,a,yBAM3C,SAAYA,GAIV,OAHUrI,KAAKmI,OAAOyV,WAAU,SAAA1V,GAC9B,OAAOA,EAAQ+V,MAAK,SAAAkM,GAAO,OAAIA,EAAQlM,MAAK,SAAAoM,GAAM,OAAIA,IAAWhiB,a,+BAKrE,SAAkB2hB,EAAMC,GACtB,IAAM5hB,EAAQrI,KAAKmK,cAAc6f,GACjC,OAAOnE,GAAaoE,EAAM5hB,K,0BAG5B,SAAa8F,EAAK9F,M,wBAIlB,SAAWjH,GACT,OAAOpB,KAAK6J,KAAKmF,MAAM5N,EAAGV,SAAS2C,OAAO,a,gEAG5C,8CAAAnD,EAAA,6DACMipB,EAAO,IACNtf,KAAO8F,gBACZwZ,EAAKmB,UAAY3a,gBACjBwZ,EAAKoB,SAAW5a,gBAChBwZ,EAAKqB,QAAU7a,gBACfwZ,EAAKsB,UAAY9a,gBACjBwZ,EAAKuB,gBAAkB/a,gBACvBwZ,EAAKwB,WAAa/O,gBAClBuN,EAAK/Z,OAASO,gBACdwZ,EAAKyB,SAAWjb,gBAEZkb,EAAe3rB,IAAS6f,UAAU,aAAa,SAACtf,GAAU,IAAD,IAC3D,KAAI,UAACA,EAAKM,OAAO,UAAb,aAAC,EAAgBgO,QAAO,UAACtO,EAAK+D,qBAAN,aAAC,EAAoBuK,KAAK,CAAC,IAAD,MAChDgB,EAAWtP,EAAK2B,GAAGV,SAClB2C,OAAO,CAAC,YACRA,OAAOF,eAAK1D,EAAKM,SACjBsD,OAAO5D,EAAK+D,eACZH,OAJU,UAIH5D,EAAKe,WAJF,aAIH,EAAUa,SAClB8U,EAAMgT,EAAKtf,KAAKmF,MAAMD,EAAU6M,iBACpCuN,EAAKtf,KAAOsf,EAAKtf,KAAK8W,MAAM5R,EAAUoH,EAAI2U,IAAI3nB,gBAAS,OAAJ1D,QAAI,IAAJA,GAAA,UAAAA,EAAMe,WAAN,mBAAWY,UAAX,eAAeV,WAAYjB,EAAKgE,mBAInFsnB,EAAiB7rB,IAAS6f,UAAU,aAAa,SAACtf,GACpD,IAAIsP,EAAWtP,EAAK2B,GAAGV,SAGvByoB,EAAKtf,KAAOsf,EAAKtf,KAAK8W,MAAM5R,EAAS1L,OAAO,CAAC,WAAY5D,EAAKuB,QAC9DmoB,EAAKtf,KAAOsf,EAAKtf,KAAK8W,MAAM5R,EAAS1L,OAAO,CAAC,OAAQ5D,EAAK2B,OAGxD9B,EAAWJ,IAAS6f,UAAU,WAAW,SAACtf,GAC5C,GAAI,IAAMA,EAAK+B,GAAK/B,EAAKI,OAASJ,EAAK8B,MAAO,CAC5C,IAAIoG,EAAM,CAAClI,EAAK2B,GAAG4pB,SACd7B,EAAKoB,SAASU,MAAMtjB,KACvBwhB,EAAKoB,SAAWpB,EAAKoB,SAAS5J,MAAMhZ,EAAK,CAACvG,GAAI3B,EAAK2B,GAAIvB,KAAMJ,EAAKI,YAKpEqrB,EAAehsB,IAAS6f,UAAU,WAAW,SAACtf,GAChD,GAAIA,EAAK4B,UAAY2R,IAAS,CAC5B,IAAIrL,EAAM,CAAClI,EAAK2B,GAAG4pB,QAASvrB,EAAK6B,YAC7BT,EAAQsoB,EAAKqB,QAAQxb,MAAMrH,EAAKiU,iBACpCuN,EAAKqB,QAAUrB,EAAKqB,QAAQ7J,MAAMhZ,EAAK9G,EAAMiqB,IAAIrrB,EAAK4B,UAEtD,IAAI8pB,EAAO,CAAC1rB,EAAK2B,GAAG4pB,QAASvrB,EAAK4B,SAC9B+pB,EAASjC,EAAKqB,QAAQxb,MAAMmc,EAAMvP,iBACtCuN,EAAKyB,SAAWzB,EAAKyB,SAASjK,MAAMwK,EAAMC,EAAON,IAAIrrB,EAAK6B,iBAI1D+pB,EAAqBnsB,IAAS6f,UAAU,kBAAkB,SAACtf,GACzD,IAAMA,EAAK+B,GAAK/B,EAAKI,OAASJ,EAAK8B,QACrC4nB,EAAKmB,UAAYnB,EAAKmB,UAAU3J,MAAM,CAAClhB,EAAK2B,GAAG4pB,QAASvrB,EAAKI,MAAOJ,OAIpE6rB,EAAuBpsB,IAAS6f,UAAU,oBAAoB,SAACtf,GACjE,IAAIkI,EAAMlI,EAAKiB,OACXG,EAAQsoB,EAAKsB,UAAUzb,MAAMrH,EAAKiU,iBACtCuN,EAAKsB,UAAYtB,EAAKsB,UAAU9J,MAAMhZ,EAAK9G,EAAMiqB,IAAIrrB,EAAKI,OAE1DspB,EAAKuB,gBAAkBvB,EAAKuB,gBAAgB/J,MAAM,CAAClhB,EAAK2B,GAAG4pB,QAASvrB,EAAKI,MAAOJ,EAAKuB,WAGnFuqB,EAAkBrsB,IAAS6f,UAAU,eAAe,SAACtf,GACvD0pB,EAAKwB,WAAaxB,EAAKwB,WAAWG,IAAIrrB,EAAKe,QAGzCgrB,EAAoBtsB,IAAS6f,UAAU,iBAAiB,SAACtf,GAC3D0pB,EAAKtf,KAAOsf,EAAKtf,KAAK8W,MAAMlhB,EAAK2B,GAAGV,SAAS2C,OAAO,UAAW5D,EAAKqB,UAxExE,UA2EqBd,KAAKyrB,eA3E1B,eA2EMzqB,EA3EN,OA6EE9B,IAAS+f,YAAYiM,GACrBhsB,IAAS+f,YAAY3f,GACrBJ,IAAS+f,YAAYoM,GACrBnsB,IAAS+f,YAAYqM,GACrBpsB,IAAS+f,YAAYsM,GACrBrsB,IAAS+f,YAAYuM,GACrBtsB,IAAS+f,YAAY4L,GACrB3rB,IAAS+f,YAAY8L,GAGrB/qB,KAAK6J,KAAOsf,EAAKtf,KACjB7J,KAAKsqB,UAAYnB,EAAKmB,UACtBtqB,KAAKuqB,SAAWpB,EAAKoB,SACrBvqB,KAAKwqB,QAAUrB,EAAKqB,QACpBxqB,KAAKyqB,UAAYtB,EAAKsB,UACtBzqB,KAAK0qB,gBAAkBvB,EAAKuB,gBAC5B1qB,KAAK2qB,WAAaxB,EAAKwB,WACvB3qB,KAAKoP,OAAS+Z,EAAK/Z,OACnBpP,KAAK4qB,SAAWzB,EAAKyB,SA/FvB,kBAiGS5pB,GAjGT,iD,uHAoGA,kCAAAd,EAAA,6DACMipB,EAAOnpB,KACP0rB,GAAa,EAGbpsB,EAAWJ,IAAS6f,UAAU,WAAW,SAACtf,GACxC0pB,EAAKtpB,OAASJ,EAAKI,MAAQspB,EAAK/nB,GAAG4pB,UAAYvrB,EAAK2B,GAAG4pB,UACzDU,GAAa,MAPnB,SAWiBnN,EAAU5P,QAAQ3O,KAAKH,KAAMG,KAAKoB,GAAIpB,KAAKiB,KAAMjB,KAAK2e,WAAY3e,KAAKuJ,cAXxF,UAWEvI,EAXF,OAaO0qB,EAbP,iCAcmBnN,EAAU5P,QAAQ3O,KAAKH,KAAMG,KAAKoB,GAAIpB,KAAK+oB,MAAO/oB,KAAK2e,WAAY3e,KAAKuJ,cAd3F,OAcIvI,EAdJ,sBAiBE9B,IAAS+f,YAAY3f,GAjBvB,kBAmBS0B,GAnBT,iD,mFAsBA,SAAgBiG,EAAa3C,GAC3B,IAAIsK,EAAS5O,KAAKqH,iBAAiBJ,EAAa3C,GAChD,KAAKsK,GAAU,GAAI,OAAO,KAC1B,IAAIqR,EAAOjgB,KAAK2rB,OAAO/c,EAAS,GAC5BsR,EAAQlgB,KAAK2rB,OAAO/c,GACxB,OAAQ5O,KAAK2lB,YAAY3hB,IAAIic,EAAMC,IAAQ,IAAI3e,Q,8BAGjD,SAAiBC,EAAGS,GAClB,IAAI2pB,EAAa5rB,KAAK6rB,WAAWrqB,EAAI,EAAGS,GACpC6pB,EAAc9rB,KAAK6rB,WAAWrqB,EAAIS,GACtC,IAAK8pB,OAAOC,UAAUJ,IAAgBG,OAAOC,UAAUF,OACnDC,OAAOC,UAAUJ,KAAeG,OAAOC,UAAUF,IAAgBF,IAAeE,EAAa,GAEjG,OAAOC,OAAOC,UAAUJ,GAAcA,EAAY,EAAIE,I,wBAGxD,SAAWpO,EAAOzb,GAChB,GAAIyb,EAAQ,EAAI,OAAO,KACvB,IAAI/V,EAAM1F,EAAQ2F,gBAAgBC,YAAY6V,GAC9C,IAAK/V,EAAK,OAAO,KACjB,IAAIlI,EAAOwC,EAAQ6C,UAAU6C,GAAK5C,UAClC,OAAItF,EAAK8B,OAASyR,MAAYvT,EAAK8B,MAAM0D,UAAkB,KACpDxF,EAAKmD,I,oBAGd,SAAOpB,GACL,GAAIxB,KAAK2e,WAAWD,UAAUld,GAAG,CAC/B,IAAI/B,EAAOO,KAAK2e,WAAWD,UAAUld,GAAG/B,KACxC,OAAO,IAAIiY,EAAIjY,EAAK8B,MAAO9B,EAAK+B,M,mCAIpC,SAAsBA,GACpB,IAAIye,EAAOjgB,KAAK2rB,OAAOnqB,EAAI,GACvB0e,EAAQlgB,KAAK2rB,OAAOnqB,GACxB,OAAOxB,KAAK2lB,YAAY3hB,IAAIic,EAAMC,K,wBAGpC,SAAW1e,GACT,IAAM6G,EAAQrI,KAAKmI,OAAO3G,GAAG0I,OAAO,GAAG,GAAGA,OAAO,GAAG,GAC9ClF,EAAKhF,KAAK2lB,YAAY3E,QAAQ3Y,GACpC,OAAO,IAAIqP,EAAIrP,EAAM9G,MAAOyD,K,sBAG9B,SAASxD,GACP,IAAM6G,EAAQrI,KAAKmI,OAAO3G,GAAG,GAAG,GAC1BwD,EAAKhF,KAAK2lB,YAAY3E,QAAQ3Y,GACpC,OAAO,IAAIqP,EAAIrP,EAAM9G,MAAOyD,K,+BAG9B,SAAkBxD,EAAG8G,GACnB,OAAI,IAAMA,EAAUvB,YACX/G,KAAKisB,WAAWzqB,GAEfxB,KAAKksB,SAAS1qB,K,uCAG1B,SAA0BA,EAAG2f,GAC3B,IAAIlB,EAAOjgB,KAAK2rB,OAAOnqB,EAAI,GACvB0e,EAAQlgB,KAAK2rB,OAAOnqB,GACxB,OAAOxB,KAAK2lB,YAAYwG,QAAQlM,EAAMC,EAAOiB,K,qCAG/C,SAAwB3f,EAAG2f,GACzB,IAAIlB,EAAOjgB,KAAK2rB,OAAOnqB,EAAI,GACvB0e,EAAQlgB,KAAK2rB,OAAOnqB,GACxB,OAAOxB,KAAK2lB,YAAYyG,MAAMnM,EAAMC,EAAOiB,K,4DAG7C,WAAc1S,GAAd,mBAAAvO,EAAA,sEACoBF,KAAKipB,cADzB,cACQzK,EADR,OAEQvc,EAAU2iB,GAA2BpG,GACrCxd,EAAS0F,cAAY2lB,kBAAkBpqB,EAASwM,GAHxD,kBAISzN,GAJT,gD,8EAOA,SAAUiB,EAAS6F,EAAOQ,GAIxB,IAHA,IAAMif,EAAatlB,EAAQ2F,gBACrB7B,EAAOwhB,EAAWvd,UACpB0U,EAAY,GACPld,EAAI,EAAGA,EAAIuE,EAAK7D,OAAQV,IAAI,CACnC,IAAImD,EAAY4iB,EAAW1f,YAAYrG,GACvCkd,EAAUld,GAAKmD,EAKjB,OAHA3E,KAAKoB,GAAGsd,UAAYA,EAEP,IAAIpV,GAAUtJ,MACfssB,QAAQrqB,EAASjC,KAAK2e,WAAWO,OAAO,GAAGnZ,KAAK7D,OAAQ4F,EAAOQ,K,gEAG7E,WAAkBrG,EAASqG,GAA3B,8BAAApI,EAAA,6DACM6I,EAAkB9G,EACd,EAIFqjB,EAAkBrjB,EAAQsqB,qBAC1BhH,EAAiBtjB,EAAQuqB,oBACzB/jB,EAAWxG,EAAQ2F,gBAAgBc,SAR3C,SAU0B1I,KAAKgpB,WAAL,sBAAgB,sBAAA9oB,EAAA,+EAAY,EAAK+oB,eAAjB,4CAV1C,cAUEjpB,KAAK2e,WAVP,OAWM8N,EAAazsB,KAAK2e,WACtBzY,QAAQC,IAAI,eAAgBsmB,GAC5BA,EAAWvN,OAAO,GAAGvX,IAAMc,EACvBzI,KAAKoB,GAAGsd,WACV1e,KAAKoB,GAAGsd,UAAUhf,SAAQ,SAACiF,EAAWnD,GACpCirB,EAAW/N,UAAUld,GAAG/B,KAAKkF,UAAYA,KAG7CoE,EAAkB6b,GAA2B6H,GAC5B,IAAI7jB,iBAAe,CAClCC,UAAWJ,EACXf,aAAc6d,EAAe9b,kBAC7BX,SAAUL,EACVxB,YAAase,EAAere,iBAC5BO,YAAY,EACZiC,UAAU,IAGZX,EAAkBA,EAAgB6f,MAAM,CACtCtD,gBAAiBA,EACjBC,eAAgBA,IAIlBrf,QAAQC,IAAI,UAAWnG,KAAKH,MAnC9B,kBAoCSkJ,GApCT,iD,yEClamB2jB,G,kDACnB,WAAYvnB,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,GAFI,E,6FAKnB,gCAAApF,EAAA,sEACwBF,KAAKmF,MAAMC,MAAMunB,QAAQC,aADjD,cACQC,EADR,OAEE3mB,QAAQC,IAAI,UAAW0mB,GAFzB,SAGwB7sB,KAAKmF,MAAMC,MAAMqH,IAAIqgB,kBAH7C,cAGQC,EAHR,OAIE7mB,QAAQC,IAAI,UAAW4mB,GACvB/sB,KAAK2G,SAAS,CAAComB,YALjB,UAOsB/sB,KAAKmF,MAAMC,MAAMqH,IAAIugB,gBAP3C,QAOQvU,EAPR,OAQEvS,QAAQC,IAAI,QAASsS,GARvB,iD,0EAWA,WACE,MAAO,O,GAlBiClH,IAAMC,WCiEnCyb,GAxDF,SAAC9nB,GAeZ,IAAM+nB,EAAgB3b,IAAMgD,YAK1B,OACE,kBAAC,IAAD,CAAWqS,MAAM,WAAWuG,QAAS,GAAIC,QAAS,IAAKC,YAAa,IAAKxc,UAAU,WACjF,kBAAC,IAAD,CAAW+V,MAAM,aAAayG,YAAa,KACzC,6BACE,4BAAI,uBAAGC,KAAK,oBAAR,SACJ,kBAAC,EAAD,CAAYloB,MAAOD,EAAMC,MAAOuH,WAAYxH,EAAMwH,WAAYiB,IAAKsf,EAAerjB,KAAM1E,EAAMC,MAAMgC,WAAWyC,QAEjH,kBAAC,IAAD,CAAW+c,MAAM,aAAayG,YAAa,KACzC,6BACE,4BAAQ1c,QAASxL,EAAMwH,WAAW4gB,aAAlC,gBACA,kBAAC,EAAD,CAAQnoB,MAAOD,EAAMC,MAAOuH,WAAYxH,EAAMwH,WAAYvF,WAAYjC,EAAMC,MAAMgC,cAEpF,6BACE,kBAAC,GAAD,CAAgBhC,MAAOD,EAAMC,WAInC,6BACE,kBAAC,IAAD,CAASA,MAAOD,EAAMC,MAAOuH,WAAYxH,EAAMwH,WAAYvF,WAAYjC,EAAMC,MAAMgC,WAAYwC,WAtBpF,SAACC,GAClBqjB,EAAczY,QAAQ9N,SAAS,CAACkD,UAqB6F4C,IAAKtH,EAAMsH,IAAK+gB,OAAQroB,EAAMqoB,SACrJ,yBAAK3c,UAAU,SACb,mDACA,4BACE,wDACA,sDACA,sDACA,uEACA,yEACA,8E,iDCvDD4c,GAAb,WACE,WAAYhhB,GAAM,IAAD,2BACfzM,KAAKyM,IAAMA,EACXzM,KAAKyY,MAAQ,GACHgB,IACVnW,OAAOsM,OAAO6J,KAAU/Z,SAAQ,SAAAG,GAC9BqG,QAAQC,IAAI,OAAQtG,GACpB,EAAK4Y,MAAM5Y,EAAK+V,IAAM/V,EAAK0M,QAE7BvM,KAAK0tB,WAAa,GATtB,+EAaE,iCAAAxtB,EAAA,yDACOF,KAAKyM,IADZ,yCACwBzM,MADxB,uBAGwBA,KAAKyM,IAAI2L,GAAGI,WAAWhB,WACxCqC,MAAM,WAAY,KAAM,CAAC7Z,KAAKyM,IAAI8L,MAAO,KACzCuB,QAAQ,YACRA,QAAQ,QACR9V,MAPP,qBAQUtE,SAAQ,SAAAqa,GACd,IAAMta,EAAOsa,EAAOta,OAChBA,EAAK8M,OACP,EAAKkM,MAAMhZ,EAAKka,QAAUla,EAAK8M,KAC/BrG,QAAQC,IAAI,OAAQ1G,EAAK8M,KAAM9M,EAAKka,YAZ1C,kBAiBS3Z,MAjBT,gDAbF,0EAiCE,SAAOioB,GAAqB,IAMtB0F,EANqB,OACnB3Y,EAAU1R,OAAO0R,QAAQhV,KAAKyY,OAAOlZ,QAAQ,SAAAquB,GAAQ,IAAD,eACzBA,EADyB,QAEpD,OAFoD,KAEpCC,cAAcrU,MAAMyO,MAKxC0F,EADE3tB,KAAKyM,IACIuI,EAAQ/K,KAAI,SAAC2jB,GAAS,IAAD,eACHA,EADG,GACvBjU,EADuB,KACfmU,EADe,KAExBjuB,EAAO,EAAK4M,IAAIyN,cAAcP,GAEpC,OADK9Z,EAAK0M,OAAM1M,EAAK0M,KAAOuhB,GACrBjuB,KAGEmV,EAAQ+R,SAAQ,SAAC6G,GAAS,IAAD,eACPA,EADO,GAC3BjU,EAD2B,KAE5BH,GAF4B,KAEpBG,EAAOH,MAAM,aAC3B,OAAIA,EACKC,IAASD,EAAM,IACV,MAGlB,IAAMkU,EAAa1tB,KAAK+tB,YAAY9F,GACpC,MAAO,GAAG5kB,OAAOqqB,GAAYrqB,OAAOsqB,KAzDxC,yBA4DE,SAAY1F,GACV,OAAOjoB,KAAK0tB,WAAWnuB,QAAO,SAAAM,GAAI,OAAIA,EAAK0M,KAAKshB,cAAcrU,MAAMyO,QA7DxE,iBAgEE,SAAIpoB,GACFG,KAAK0tB,WAAWruB,KAAKQ,KAjEzB,0BAoEE,WACE,OAAOyD,OAAOsM,OAAO5P,KAAKyM,IAAIsL,YACzB1U,OAAOrD,KAAK0tB,YACZnuB,QAAO,SAAAM,GAAI,OAAIA,EAAKkO,KAAQlO,aAAgB6Z,GAAc7Z,EAAKmuB,mBAvExE,K,SCiCAvoB,OAAOwQ,OAASC,KAAM,kEAEtBzQ,OAAOuQ,SAAW,SAASH,GACzB,IAAcrU,EAAVsU,EAAO,EACX,GAAiB,IAAbD,EAAE3T,OAAc,OAAO4T,EAC3B,IAAKtU,EAAI,EAAGA,EAAIqU,EAAE3T,OAAQV,IAExBsU,GAAUA,GAAQ,GAAKA,EADfD,EAAEE,WAAWvU,GAErBsU,GAAQ,EAEV,OAAOA,GAGTrQ,OAAOiQ,WAAa,IAAIC,KAAQ,CAACC,GAAInQ,OAAOuQ,SAASV,UAAUC,UAAYC,SAASC,U,IAE/DwY,G,kDACnB,WAAa9oB,GAAQ,IAAD,sBAClB,cAAMA,GAEVe,QAAQC,IAAI,QAAShB,EAAMwU,QAMvB,IAAIuU,EAAW,IAAIjrB,IAAK,SACxBirB,EAAS3hB,KAAO,iBAEhB,IAAI4hB,EAAU,IAAIlrB,IAAK,CAAC,KACxBkrB,EAAQ5hB,KAAO,gBAEf,IAAI6hB,EAAU,IAAInrB,IAAK,QACvBmrB,EAAQ7hB,KAAO,iBAEf,IAAI8hB,EAAU,IAAIprB,IAAK,QACvBorB,EAAQ9hB,KAAO,gBAEF,IAAItJ,IAAK,OACfsJ,KAAO,MACd,IAAI+hB,EAAU,IAAIrrB,IAAK,CAACsrB,IAAcC,IAAQC,MAC9CH,EAAQ/hB,KAAO,gBACf+hB,EAAQlc,MAAQ,MAChBkc,EAAQhU,OAAO,GAAIoU,IAAQN,GAC3BE,EAAQhU,OAAO,GAAIqU,IAAUT,GAE7B,IAAIhR,EAAc,IAAIja,IAAK,CAACsrB,IAAcC,MAC1CtR,EAAY3Q,KAAK,eACjB2Q,EAAY5C,OAAO,GAAIoU,IAAQN,GAE/B,IAAIpO,EAAO,IAAI/c,IAAK,IACpB+c,EAAKzT,KAAO,aAEZ,IAAIqiB,EAAO,IAAI3rB,IAAK,IACpB2rB,EAAKriB,KAAO,aAEZ,IAAIsiB,EAAa,IAAI5rB,IAAK,CAACsrB,IAAcC,MACzCK,EAAYtiB,KAAO,eACnBsiB,EAAYvU,OAAO,GAAIoU,IAAQL,GAE/B,IAAIS,EAAY,IAAI7rB,IAAK,SAAS2jB,MAAM,IAAIvjB,OAAO0rB,KAAS1rB,OAAO,SAASujB,MAAM,KAAKvjB,OAAO0rB,MAC9FD,EAAUviB,KAAO,aACjBuiB,EAAUxU,OAAO,CAAC,EAAGwU,GAAYE,IAAShP,GAC1C8O,EAAUxU,OAAO,CAAC,GAAIwU,GAAYE,IAASJ,GAE3C,IAAI3pB,EAAY,IAAIhC,IAAK,IACzBgC,EAAUsH,KAAO,SACjBtH,EAAUqV,OAAO,GAAIrV,EAAWqpB,GAEnB,IAAIrrB,IAAK,CAAC,KAAvB,IACIgsB,EAAS,IAAIhsB,IAAK,CAAC,MACnBisB,EAAQ,IAAIjsB,IAAK,CAAC,MAClBksB,EAAM,IAAIlsB,IAAK,CAACmsB,MACpBD,EAAI7U,OAAO,GAAI+U,IAAMJ,GACrBE,EAAI5iB,KAAO,cACX,IAAI+iB,EAAW,IAAIrsB,IAAK,CAACmsB,MACzBE,EAAS/iB,KAAO,cAChB+iB,EAAShV,OAAO,GAAI+U,IAAMH,GAM1B,IAAIrvB,EAAO,IAAIoD,IAAK,MAAM2jB,MAAM,IAAIvjB,OAAOyrB,GAAWzrB,OAAOyrB,IAC7DjvB,EAAK0M,KAAO,YACZ1M,EAAKya,OAAO,CAAC,EAAGza,GAAOmgB,EAAMkO,GAC7BruB,EAAKya,OAAO,CAAC,EAAGza,GAAOmgB,EAAMmO,GAG7BtuB,EAAKya,OAAO,GAAI0F,EAAM9C,GACtBrd,EAAKya,OAAO,GAAIsU,EAAMC,GAEtB,IAAI/sB,EAAQ,IAAIM,IAAM,IAAK,IAAIsV,EAAI7X,EAAM,IAAM,IAAI6X,EAAI7X,EAAM,KAAMoF,GACnEpF,EAAKwa,SAASvY,GACd,IAAIytB,EAAS,IAAIntB,IAAM,IAAK,IAAIsV,EAAI7X,EAAM,KAAM,IAAI6X,EAAI7X,EAAM,KAAMoF,GACpEpF,EAAKwa,SAASkV,GACd,IAAIC,EAAS,IAAIptB,IAAM,IAAK,IAAIsV,EAAI7X,EAAM,KAAM,IAAI6X,EAAI7X,EAAM,KAAMoF,GACpEpF,EAAKwa,SAASmV,GAEd3vB,EAAK8b,OAAS,CAAC1W,GAYf,IAAI6S,EAAa7C,aAAamC,QAAQ,cACjCU,IACHA,EAAavH,IAASgG,QACtBtB,aAAaC,QAAQ,aAAc4C,IAGrC,IAAI2X,EAAS,CACT,OACA,OACA,OACA,OACA,OACA,QAGJ,EAAKnqB,MAAQ,CAIXiE,kBAAcnJ,EACdyF,cAAe,KAEfR,QAAS,MAEX,IAAI8jB,EAAI,eAtHU,OAwHlB,EAAKxc,WAAa,CAChB0H,sBAAuB,SAASxT,GAC9BsoB,EAAK7jB,MAAM8H,UAAUvN,KAAK0M,KAAO1L,EACjCsoB,EAAKxiB,SAAS,CAACyG,UAAW+b,EAAK7jB,MAAM8H,aAEvCkN,OAAQ,SAAU0Q,EAASnrB,EAAM6vB,GAC/B1E,EAAQ1Q,OAAOza,EAAM6vB,GACrBvG,EAAKxiB,SAAS,CAACyG,UAAW+b,EAAK7jB,MAAM8H,aAEvCuiB,cAAe,SAAU3E,EAASnrB,GAChCmrB,EAAQ2E,cAAc9vB,GACtBspB,EAAKxiB,SAAS,CAACyG,UAAW+b,EAAK7jB,MAAM8H,aAEvCwiB,WAAY,WACV9jB,KAAQ3M,MAAM,CACZ4M,SAAU,OACVC,OAAQ,gBAEV,IAAInM,EAAO,IAAIoD,IAAK,IAQpB,OAPApD,EAAK0M,KAAOD,OAAO,yBAA0B,aAAgB,WAC7DzM,EAAKkO,KAAM,EAEX,EAAKzI,MAAM6G,WAAW2e,IAAIjrB,GAInBA,GAETgwB,iBAAkB,WAChB,IAAMhvB,EAAQyL,OAAO,0BAA2B,mBAAsB,QAClEzM,EAAO,IAAIoD,IAAKpC,GAKpB,OAJAhB,EAAK0M,KAAL,WAAgB1L,EAAhB,KACAhB,EAAKkO,KAAM,EAEX,EAAKzI,MAAM6G,WAAW2e,IAAIjrB,GACnBA,GAET+M,YAAY,WAAD,4BAAE,WAAOxL,GAAP,eAAAlB,EAAA,sEAIc,EAAK4vB,cAAc1uB,OAAIhB,GAJrC,OAILgH,EAJK,OAKX+hB,EAAKxiB,SAAS,CACZyG,UAAWhM,EACXmI,kBAAcnJ,EACdgH,eARS,2CAAF,mDAAC,GAWZyU,eAAe,WAAD,4BAAE,WAAO/T,EAAOgU,GAAd,eAAA5b,EAAA,6DACV4H,GACFyP,IAASxT,IAAI+D,GAAO,IAAQgU,GAFhB,SAIW,EAAKgU,cAAc,EAAKxqB,MAAM8H,UAAWtF,GAJpD,OAIRV,EAJQ,OAKd+hB,EAAKxiB,SAAS,CAAC4C,aAAczB,EAAOV,eALtB,2CAAF,qDAAC,GAOfmmB,YAAY,WAAD,4BAAE,8BAAArtB,EAAA,6DACX4L,KAAQ3M,MAAM,CACZ4M,SAAU,OACVC,OAAQ,iBAEVmd,EAAK7jB,MAAM8H,UAAUvN,KAAKkwB,YAAc5G,EAAK7jB,MAAM8H,UAAUvN,KAAKkwB,aAAeN,GAE7E3nB,EAAQ,IAAI7E,IAAK,KACf8K,KAAM,EACZjG,EAAM4V,OAASyL,EAAK7jB,MAAM8H,UAAUvN,KAAK8b,QAAQ,IAAIzZ,OACrD4F,EAAMsK,MAAQ+W,EAAK7jB,MAAM8H,UAAUvN,KAAKkwB,YAAYzO,SAAW,QAC/DxZ,EAAMyE,KAAOD,OAAO,0BAA2B,cAAiB,YAChEiL,IAASxT,IAAI+D,GAAO,GAAM,GAE1BqhB,EAAK7jB,MAAM8H,UAAUvN,KAAK8b,QAAUwN,EAAK7jB,MAAM8H,UAAUvN,KAAK8b,QAAQ,IAAItY,OAAOyE,GACjF,EAAKxC,MAAM6G,WAAW2e,IAAIhjB,GAff,UAgBc,EAAKgoB,cAAc,EAAKxqB,MAAM8H,UAAWtF,GAhBvD,QAgBLV,EAhBK,OAiBX+hB,EAAKxiB,SAAS,CAACS,eAjBJ,4CAAF,kDAAC,GAmBZ6U,YAAY,WAAD,4BAAE,WAAOnU,EAAOjH,EAAOmvB,GAArB,eAAA9vB,EAAA,6DACXqX,IAASxT,IAAI+D,IAASjH,IAASmvB,GADpB,SAGc,EAAKF,cAAc,EAAKxqB,MAAM8H,UAAWtF,GAHvD,OAGLV,EAHK,OAIX+hB,EAAKxiB,SAAS,CAACS,eAJJ,2CAAF,uDAAC,GAMZwE,iBAhFgB,SAgFCuC,GACfgb,EAAK7jB,MAAMD,QAAQuG,iBAAiBuC,IAEhCkF,oBAnFU,SAmFUxT,GAAO,IAAD,kIACxBspB,EAAK7jB,MAAMD,QAAQyI,WAAWjO,GADN,OAE9B,EAAK+L,iBAAiB,MAFQ,8CAIhCkF,OAvFgB,SAuFTxR,GACL6pB,EAAKxiB,SAAS,CAACS,WAAY+hB,EAAK7jB,MAAM8B,aAAa,WAC7C9H,GACFA,EAAS6pB,EAAK7jB,MAAMD,QAAQF,MAAMiC,gBAIxCgK,QAAQ,WAAD,4BAAE,4BAAAlR,EAAA,sEACkB,EAAK4vB,cAAc,EAAKxqB,MAAM8H,UAAW,EAAK9H,MAAM8H,UAAUvN,MADhF,OACDuH,EADC,OAEP+hB,EAAKxiB,SAAS,CAACS,eAFR,2CAAF,kDAAC,IAMV3B,OAAOiP,iBAAiB,cAAc,WAAKyU,EAAKxiB,SAAS,CAACyG,UAAW+b,EAAK7jB,MAAM8H,eAAc,GA5N5E,E,sDA+NpB,WACElH,QAAQC,IAAI,4B,kCAMd,WACED,QAAQC,IAAI,+B,sEAGd,wCAAAjG,EAAA,6DACEgG,QAAQC,IAAI,yBAKNsG,EAAMzM,KAAKmF,MAAMsH,IACjBN,EAAa,IAAIshB,GAAWhhB,GAPpC,SAQQN,EAAWmP,OARnB,WAUMtb,KAAKmF,MAAMwU,OAVjB,wBAYU9Z,EAAO4M,EAAIyN,cAAcla,KAAKmF,MAAMwU,QACpCvY,EAAK,IAAIxB,IAAGC,GAbtB,UAc6BG,KAAK8vB,cAAc1uB,GAdhD,QAcUgG,EAdV,OAeIpH,KAAK2G,SAAS,CAACyG,UAAWhM,EAAInB,OAAQmB,EAAKqL,MAAKN,aAAY/E,eAfhE,+BAiBI+E,EAAW2e,IAAI9qB,KAAKmF,MAAM8qB,aACpB7uB,EAAK,IAAIxB,IAAGI,KAAKmF,MAAM8qB,aAlBjC,UAmB6BjwB,KAAK8vB,cAAc1uB,GAnBhD,QAmBUgG,EAnBV,OAoBIpH,KAAK2G,SAAS,CAACyG,UAAWhM,EAAInB,OAAQmB,EAAI+K,aAAY/E,eApB1D,iD,wHAwBA,WAAoBgG,EAAW7D,GAA/B,iBAAArJ,EAAA,6DACeF,KACbC,KAAOiwB,aACPhqB,QAAQC,IAAI,iBAAkBiH,EAAUvN,KAAK0M,MACvCnF,EAAa,IAAI0hB,GAAW1b,EAAUvN,KAAMuN,EAA/B,sBAA0C,4BAAAlN,EAAA,sDAG3D,IADImc,EAAQjP,EACLiP,EAAMvc,kBAAkBF,KAAMyc,EAAQA,EAAMvc,OAHQ,gBAIrDuc,EAAMzb,UAJ+C,2CAA1C,sBAKhB,sBAAAV,EAAA,kGATL,SAaQkH,EAAW+oB,KAAK5mB,GAbxB,cAeM6mB,EAAWnwB,KAAOowB,MAAMpT,WAAWxN,UAAUlQ,QAAO,SAACsB,GACvD,OAAOA,aAAiByvB,WAE1BpqB,QAAQC,IAAI,iBAAkBiqB,EAASluB,QAlBzC,UAmBQouB,QAAQC,IAAIH,GAnBpB,yBAoBQhpB,EAAW6hB,cApBnB,iCAqBS7hB,GArBT,iD,6EAwBA,WACE,OAAKpH,KAAKsF,MAAM8B,WAET,6BACL,kBAAC,GAAD,CAAMhC,MAAOpF,KAAKsF,MAAOqH,WAAY3M,KAAK2M,WAAYF,IAAKzM,KAAKmF,MAAMsH,IAAK+gB,OAAQxtB,KAAKmF,MAAMqoB,UAH7D,S,GA5RIjc,IAAMC,W,kECtB7Cgf,GAAW,IAAIvtB,IAAK,CAACwtB,IAAS1B,KAAU,CAACxiB,KAAM,eAClC,IAAItJ,IAAK,CAACutB,IAAW,CAACjkB,KAAM,aAK7CikB,GAASlW,OAAO,CAAC,EAAGkW,IAAWxB,IAAS0B,KAaxC,IAAMC,GAAU,IAAI1tB,IAAK,iBAAkB,CAACsJ,KAAM,QAElDikB,GAASlW,OAAO,GAAIsW,IAAWD,IAE/B,IAAME,GAAa,IAAI5tB,IAAK,OAAQ,CAACsJ,KAAM,eAErCukB,GAAmB,IAAI7tB,IAAK,CAAC4T,MAAkB,CAACtK,KAAM,qBACtDwkB,GAAkB,IAAI9tB,IAAK,GAAI,CAACsJ,KAAM,qBAC5CukB,GAAiBxW,OAAO,CAAC,EAAGwW,IAAmBpa,KAAiBma,IAEhE,IAAMG,GAAyB,IAAI/tB,IAAK,CAACguB,KAAa,CAAC1kB,KAAM,2BACvD2kB,GAAsB,IAAI9uB,IAAM,CAAC,IAAK,IAAIsV,EAAIoZ,GAAkB,KAAM,IAAIpZ,EAAIoZ,GAAkB,KAAME,IAC5GF,GAAiBzW,SAAS6W,IAC1BJ,GAAiBxW,OAAO,GAAI0W,GAAwBD,IAE/B,IAAI9tB,IAAK,iDAAiD2jB,MAAM,IAAK,CAACra,KAAM,iBAAjG,IACM4kB,GAAa,IAAIluB,IAAK,CAACmuB,KAAe5C,KAAS,CAACjiB,KAAM,eAC5D4kB,GAAW7W,OAAO,CAAC,EAAG6W,IAAazC,IAAQ,IAAIzrB,IAAK,SAEpD,IAAMouB,GAAY,IAAIpuB,IAAK,CAAC,IAAI8rB,IAASA,KAAU,CAACxiB,KAAM,YAAalM,SAAUC,IAAagxB,OAC9FD,GAAU/W,OAAO,CAAC,EAAG+W,IAAYrC,IAAS0B,KAC1CW,GAAU/W,OAAO,GAAI0U,IAASuC,KAEhB,IAAItuB,IAAK,GAAI,CAACsJ,KAAM,UAAlC,IAEMilB,GAAY,IAAIvuB,IAAK,GAAI,CAACsJ,KAAM,aAAclM,SAAUC,IAAa2D,QAC3EutB,GAAUzjB,KAAM,EAGG,IAAI9K,IAAK,CAACytB,KAAS,CAACnkB,KAAM,UAClCwB,KAAM,EAEjB,IAAM0jB,GAAY,IAAIxuB,IAAK,GAAI,CAACsJ,KAAM,YAAalM,SAAUC,IAAa2D,QACpEytB,GAAW,IAAIzuB,IAAK,GAAI,CAACsJ,KAAM,WAAYlM,SAAUC,IAAa2D,QAClE0tB,GAAW,IAAI1uB,IAAK,CAAC8rB,IAAS,IAAKA,KAAU,CAACxiB,KAAM,aAC1DolB,GAASrX,OAAO,CAAC,EAAGqX,IAAW3C,IAASyC,IACxCE,GAASrX,OAAO,CAAC,EAAGqX,IAAW3C,IAAS0C,IACxC,IAAME,GAAe,IAAI3uB,IAAK,CAAC0uB,IAAW,CAACplB,KAAM,iBACjDqlB,GAAatX,OAAO,GAAImX,GAAWf,KACnCkB,GAAatX,OAAO,GAAIoX,GAAUH,KAGlC,IAAMM,GAAY,IAAI5uB,IAAK,MAAO,CAACsJ,KAAM,sBACnCulB,GAAS,IAAI7uB,IAAK,GAAI,CAACsJ,KAAM,WAC7BwlB,GAAyB,IAAI3vB,IAAM,IAAK,IAAIsV,EAAIma,GAAY,KAAM,IAAIna,EAAIma,GAAY,KAAMC,IAClGD,GAAWxX,SAAS0X,IAEpB,IAAMC,GAAgB,IAAI/uB,IAAK,MAAO,CAACsJ,KAAM,yBAC7CylB,GAAcjkB,KAAM,EACpB,IAAMkkB,GAA4B,IAAI7vB,IAAM,IAAK,IAAIsV,EAAIsa,GAAe,KAAM,IAAIta,EAAIsa,GAAe,KAAMF,IAC3GG,GAA0BlkB,KAAM,EAChCikB,GAAc3X,SAAS4X,IAEvB,IAAMC,GAAmB,IAAIjvB,IAAK,CAAC,IAAIoU,MAAkB,CAAC9K,KAAM,qBAChE2lB,GAAiB5X,OAAO,CAAC,EAAG4X,IAAmBxb,KAAiBga,KAEhE,IAAMyB,GAAU,IAAIlvB,IAAK,CAAC,CAAC,IAAK,KAAMmvB,MAAU,CAAC7lB,KAAM,YACjD8lB,GAAS,IAAIpvB,IAAK,CAAC,IAAK0T,KAAO,KAAM,CAACpK,KAAM,WAClD4lB,GAAQ7X,OAAO,CAAC,EAAG6X,IAAUG,KAASD,IAEtC,IAAME,GAAuB,IAAItvB,IAAK,OAAQ,CAACsJ,KAAM,yBAC/CimB,GAAmB,IAAIvvB,IAAK,CAAC4T,MAAkB,CAACtK,KAAM,qBAC5DimB,GAAiBlY,OAAO,CAAC,EAAGkY,IAAmB9b,KAAiB6b,IAChE,IAAME,GAAY,IAAIxvB,IAAK,CAACuvB,IAAmB,CAACjmB,KAAM,cAChDmmB,GAAmB,IAAIzvB,IAAK,CAAC0T,KAAOgc,IAAW1B,KAAa,CAAC1kB,KAAM,mBAAoBlM,SAAUC,IAAa2D,QACpHyuB,GAAiBpY,OAAO,GAAIoY,GAAkBF,IAC9C,IAAMI,GAAe,IAAIxwB,IAAM,CAAC,IAAK,IAAIsV,EAAI+a,GAAW,KAAM,IAAI/a,EAAI+a,GAAW,KAAMC,IACvFD,GAAUpY,SAASuY,IAEnB,IAAMC,GAAsB,aAAajM,MAAM,IAAI3c,KAAI,SAAAzI,GAAC,MAAU,MAANA,EAAYmV,KAAQnV,KAE1EsxB,GAAa,IAAI7vB,IAAK4vB,GAAqB,CAACtmB,KAAM,iBAClDwmB,GAAe,IAAI9vB,IAAK,CAACwvB,GAAWL,MAAU,CAAC7lB,KAAM,iBAC3DwmB,GAAazY,OAAO,CAAC,EAAGyY,IAAeT,KAASQ,IAChD,IAAME,GAAK,oOAQLC,GAAW,IAAIhwB,IAAK+vB,GAAGpM,MAAM,IAAIvjB,OAAO0rB,KAAS1rB,OAF5C,qBAEsDujB,MAAM,KAAM,CAACra,KAAM,aACpF0mB,GAAS3Y,OAAO,CAAC0Y,GAAG9wB,OAAQ+wB,IAAWjE,IAAS+D,IAEhD,IAAMG,GAAY,IAAIjwB,IAAK,CAAC6R,KAAU0Z,KAAS,CAACjiB,KAAM,cACtD2mB,GAAU5Y,OAAO,CAAC,EAAG4Y,IAAYxE,IAAQ,IAAIzrB,IAAK,SAElD,IAAMkwB,GAAU,IAAI/wB,IAAM,CAAC,GAAI2sB,IAASA,IAAS1X,MAAkB,IAAIK,EAAIub,GAAU,IAAM,IAAIvb,EAAIub,GAAU,IAAMne,MACnHme,GAAS5Y,SAAS8Y,IAClBF,GAAS3Y,OAAO,CAAC,EAAG6Y,IAAUnE,IAASkE,IACvCD,GAAS3Y,OAAO,CAAC,EAAG6Y,IAAUnE,IAASyD,IACvCQ,GAAS3Y,OAAO,CAAC,EAAG6Y,IAAUzc,KAAiB6b,I,IChIzCa,G,8MAEJ,4BAAAlzB,EAAA,yDAEoC,SAA9BsX,2YAAY6b,cAFlB,gBAGI5mB,EAAM,KAHV,6BAKIA,EAAM,IAAIoL,EALd,SAMUpL,EAAI2L,GAAGkb,kBAAkB,CAACC,iBAAiB,IANrD,uBAOU9mB,EAAI+mB,OAPd,OAUExzB,KAAK2G,SAAS,CAAC8F,QAVjB,iD,0EAaE,WAAU,IAAD,OACT,IAAIzM,KAAKsF,MAAO,OAAO,KACrB,IAAMjE,EAAU,IAAI4B,IAAK,CAAC8rB,KAAU,CAACxiB,KAAM,YAC3ClL,EAAQiZ,OAAO,CAAC,EAAGjZ,GAAU2tB,IAAS0B,KACtCrvB,EAAQ0M,KAAM,EAEd,IAAM0lB,EAAc,IAAIxwB,IAAK,CAAC,CAAC,KAAK,OAAQmvB,MAAU,CAAC7lB,KAAM,gBAGvDmnB,EAAmB,IAAIzwB,IAAK,CAAC,IAAK8rB,KAAU,CAACxiB,KAAM,qBACnDonB,EAAa,IAAI1wB,IAAK,CAAC,IAAKywB,GAAmB,CAACnnB,KAAM,eAG5D,OAFAonB,EAAWrZ,OAAO,CAAC,EAAGqZ,GAAa3E,IAASyB,KAErC,yBAAK5f,UAAU,OACpB,kBAAC,KAAD,KACE,kBAAC+iB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAO7T,KAAK,UAAU8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAa4B,QAC1E,kBAACgC,GAAA,EAAD,CAAO7T,KAAK,cAAc8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAa+B,QAC9E,kBAAC6B,GAAA,EAAD,CAAO7T,KAAK,WAAW8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAakC,QAC3E,kBAAC0B,GAAA,EAAD,CAAO7T,KAAK,SAAS8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAawD,OACzE,kBAACI,GAAA,EAAD,CAAO7T,KAAK,UAAU8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAa0D,OAC1E,kBAACE,GAAA,EAAD,CAAO7T,KAAK,QAAQ8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAagD,QACxE,kBAACY,GAAA,EAAD,CAAO7T,KAAK,YAAY8T,OAAQ,cAAGta,MAAH,OAAgB,kBAAC,GAAD,CAAeyW,YAAakD,QAC5E,kBAACU,GAAA,EAAD,CAAO7T,KAAK,YACL8T,OAAQ,gBAAGta,EAAH,EAAGA,MAAH,OAAgB,kBAAC,GAAD,CAAeG,OAAQH,EAAMua,OAAOpa,OAAQlN,IAAK,EAAKnH,MAAMmH,IAAKwjB,YAAauB,e,GAvCvGjgB,IAAMC,WAqDxB1F,KAAQkoB,WAAW,kBACnBloB,KAAQmoB,SAASxuB,OAAOC,SAASwuB,SAAWzuB,OAAOC,SAASyuB,QAE7Cf,UC1DKgB,QACW,cAA7B3uB,OAAOC,SAAS2uB,UAEe,UAA7B5uB,OAAOC,SAAS2uB,UAEhB5uB,OAAOC,SAAS2uB,SAAS7a,MACvB,2DCVN8a,IAASR,OAAO,kBAAC,GAAD,MAASte,SAAS+e,eAAe,U,kICFlCC,EAFG,IAAI70B,IAAM,M,uDCCf80B,EAAb,kDACE,WAAYrzB,EAAIC,EAASP,GAAQ,IAAD,8BAC9B,gBACKM,GAAKA,EACV,EAAKC,QAAUA,EACf,EAAKP,MAAQA,EAJiB,EADlC,kFAQE,4BAAAZ,EAAA,0DACMF,KAAK00B,SADX,yCAC4B10B,KAAKa,OADjC,cAGQO,EAAK,IAAIxB,IAAGI,KAAKqB,QAASrB,KAAKoB,GAAI,CAACpB,KAAKqB,UAHjD,SAIqBD,EAAG/B,KAAKW,KAAKc,OAJlC,cAIEd,KAAKa,MAJP,OAKEb,KAAK00B,UAAW,EALlB,kBAMS10B,KAAKa,OANd,gDARF,2DAAmClB,K,QCiD7BM,EAAS,I,WAnCb,aAAc,oBACZD,KAAKkwB,aACLlwB,KAAKqR,OAAS1B,gBACd3P,KAAK20B,UAAYhlB,gB,8CAGnB,WACE3P,KAAKqwB,MAAQ1gB,kB,oBAGf,SAAO5P,EAAQyD,EAAeC,EAAaC,EAAUC,GACnD,IAAItC,EAAU,KACVmC,IAAkB+qB,MAAcltB,EAAUuzB,KAC1CpxB,IAAkBqxB,MAAkBxzB,EAAUyzB,KAC9CtxB,IAAkBoT,IAA2BvV,EAAU6V,IAClD1T,IAAkBitB,MAASpvB,EAAUuvB,KAE1CptB,aAAyBwT,MACvBxT,EAAc3D,OAASgX,MAAiBxV,EAAU6V,KAClD1T,EAAc3D,OAASwX,MAAiBhW,EAAUiW,KAClD9T,EAAc3D,OAASiV,MAAUzT,EAAU0zB,MAGjD,IAAMv0B,EAAMa,EAAU,IAAIozB,EAAc,IAAI70B,IAAG4D,GAAgBnC,EAASmC,EAAcwxB,SAAWR,EAIjG,OAFAt1B,IAASiC,KAAK,YAAa,CAACsC,YAAaA,EAAarC,GAAIpB,KAAMD,OAAQA,EAAQyD,cAAeA,EAAehD,IAAKA,IAE5GA,I,oBAGT,WACE,MAAO,O,oGC9CEmW,EAAQ,I,KAAI1T,GAAK,CAAC,CAC7B5D,KAAK,WAAD,4BAAE,WAAewB,EAAOO,EAAIrB,GAA1B,eAAAG,EAAA,yDAEiB,kBADfY,EAAQM,EAAGtB,OAAOgB,QAC0B,kBAAVD,EAFpC,yCAGKA,EAAMwC,OAAOvC,IAHlB,gCAKKA,GALL,2CAAF,uDAAC,KAQH,CAACyL,KAAM,W,0HCPEtJ,EAAb,kDACE,WAAYhB,GAAyC,IAAD,2DAAZ,CAACsK,KAAM,IAAzBA,EAA8B,EAA9BA,KAAMlM,EAAwB,EAAxBA,SAAwB,4BAClD,cAAM4B,IACDP,QAAU,GACf,EAAK2X,KAAO1J,gBACZ,EAAKpD,KAAOA,EACZ,EAAKlM,SAAWA,GAAYC,IAAaC,QALS,EADtD,4CASE,WAAqB,IAAD,uBAARmB,EAAQ,yBAARA,EAAQ,gBAClB6B,MAAM0xB,UAAU51B,KAAK61B,MAAMl1B,KAAK0B,QAASA,GACzC1B,KAAK0B,QAAQ8nB,MAAK,SAACtpB,EAAEyX,GACnB,OAAIzX,EAAE0B,KAAKJ,EAAImW,EAAE/V,KAAKJ,GACZ,EAENtB,EAAE0B,KAAKJ,EAAImW,EAAE/V,KAAKJ,EACb,EAEF,OAlBb,wBAsBE,WACE,OAAOxB,KAAK0B,UAvBhB,oBAoCE,SAAO3B,EAAQyD,EAAenC,GAC5BrB,KAAKqZ,KAAOrZ,KAAKqZ,KAAKsH,MAAM,CAACxd,eAAKpD,IAASsD,OAAOG,GAAgBnC,KArCtE,oBAwCE,SAAOtB,EAAQF,GACb,OAAOG,KAAKqZ,KAAKrK,MAAM,CAAC7L,eAAKpD,IAASsD,OAAOxD,MAzCjD,uBA4CE,SAAUE,EAAQF,GAChBG,KAAKqZ,KAAOrZ,KAAKqZ,KAAK8b,SAAS,CAAChyB,eAAKpD,IAASsD,OAAOxD,QA7CzD,GAA0B4X,M,mICDb7T,EAAb,kDACE,WAAYxC,EAAIC,GAAU,IAAD,8BACvB,gBACKD,GAAKA,EACV,EAAKC,QAAUA,EAHQ,EAD3B,kFAOE,sBAAAnB,EAAA,sEACqB,IAAIN,IAAGI,KAAKqB,QAASrB,KAAKoB,GAAI,CAACpB,KAAKqB,UAAUT,UADnE,cACEZ,KAAKa,MADP,OAEEb,KAAK00B,UAAW,EAFlB,kBAGS10B,KAAKa,OAHd,gDAPF,2D,MAA+BlB,I,sKCEzB2yB,EAAU,IAAIrvB,IAAK,GAAI,CAACsJ,KAAM,YAC9B6lB,EAAU,IAAInvB,IAAK,CAAC,CACxB5D,KAAK,WAAD,4BAAE,WAAeyB,EAAOM,EAAIrB,GAA1B,iCAAAG,EAAA,6DACEM,EAAMY,EAAGX,OAAO,GAAI6xB,EAASlxB,EAAGV,SAAUU,EAAIA,GADhD,SAEwBA,EAAGF,SAASJ,GAFpC,OAEEs0B,EAFF,OAGAC,EAAYj0B,EACZJ,EAAS,GAJT,uBAMgBo0B,GANhB,iEAMQ51B,EANR,kBAQQ81B,EAAS,IAAI11B,IAAGY,EAAIa,QAASg0B,EAAW,IAE1C51B,EAAO,CAAC2B,GAAIk0B,EAAQx0B,MAAOtB,GAC/BN,IAASiC,KAAK,gBAAiB1B,GAXjC,UAY2B61B,EAAOj2B,KAAKG,GAZvC,QAYQ+1B,EAZR,OAcEv0B,EAASA,EAAOqC,OAAOkyB,GACvBF,EAAYC,EAfd,mDAgBUt0B,EAASA,EAAOqC,OAAOmyB,KAhBjC,2NAkBgBA,KAlBhB,iCAmBGx0B,GAnBH,+EAAF,uDAAC,KA8BH,CAACuL,KAAM,a,+KClCLsoB,EAAmB,IAAI5xB,IAAK,GAAI,CAACsJ,KAAM,qBACvCuoB,EAAsB,IAAI7xB,IAAK,CAAC,CACpC5D,KAAM,SAACwB,EAAOO,EAAIrB,GAEhB,IAF2B,EAErBg0B,EAAU,IAAIvuB,IAAIC,OAAOC,UAAWC,aAAaqP,UACnDygB,EAAQ,GAHe,cAIA1B,GAJA,IAI3B,2BAAmC,CAAC,IAAD,yBAAvBpsB,EAAuB,KAAlB9G,EAAkB,KAAE40B,EAAM9tB,GAAO9G,GAJvB,8BAK3B,OAAO40B,KASP,CAAClpB,KAAM,wBAEL6kB,EAAgB,IAAInuB,IAAK,CAAC,CAC9B5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChBmG,QAAQC,IAAI,WAAY/E,EAAGV,UAC3B,IAAIW,EAAUD,EAAGX,OAAOV,EAAQ80B,EAAkBzzB,EAAGV,SAAU,KAAMU,GACrE,OAAO,IAAIxB,IAAGyB,EAASD,EAAI,IAAIR,aAE/B,CAAC2L,KAAM,kB,2FC1BPmpB,EAAY/lB,gBAEK4H,E,4FACnB,SAAevL,EAAQnL,GACrB,OAAI60B,EAAUpf,IAAItK,GACT0pB,EAAU1xB,IAAIgI,GAEdnL,I,iBAIX,SAAWmL,EAAQ+P,EAAeiU,GAC5BjU,IAAkBiU,EAChB0F,EAAUpf,IAAItK,KAChB0pB,EAAYA,EAAUC,OAAO3pB,IAG/B0pB,EAAYA,EAAU3xB,IAAIiI,EAAQ+P,K,0BAItC,SAAoB/P,GAClB,OAAO0pB,EAAUpf,IAAItK,K,yBAGvB,SAAmBA,GACjB,OAAO0pB,EAAU1xB,IAAIgI,O,kGCzBrBmK,EAAM,IAAIxG,IAEDqH,EAAb,WAeE,WAAYnX,EAAMm1B,GAAS,oBACzBh1B,KAAKH,KAAOA,EACZG,KAAKg1B,QAAUA,EAEf,IAAM/kB,EAAO3M,OAAO0R,QAAQggB,GAAS/qB,KAAI,SAACgB,GAAD,gBAAUA,EAAE,GAAZ,aAAmBA,EAAE,OAAMuB,KAAK,MACzExM,KAAKuM,KAAL,UAAe1M,EAAK0M,KAApB,YAA4B0D,EAA5B,KApBJ,0CAuBE,SAAOlQ,EAAQF,OAvBjB,0BACE,SAAmBA,EAAMm1B,GAA+B,IAAtBY,EAAqB,uDAAb5e,EAClCrP,EAAM0D,KAAKC,UAAU,CACzBsK,GAAIrF,IAASC,MAAM3Q,GACnBm1B,QAASA,IAGX,IAAK7e,EAAIG,IAAI3O,GAAM,CACjB,IAAM0O,EAAS,IAAIuf,EAAM/1B,EAAMm1B,GAC/B7e,EAAIpS,IAAI4D,EAAK0O,GAGf,OAAOF,EAAInS,IAAI2D,OAZnB,M,4FCFa8P,EAAb,WACE,WAAYxV,GAAS,oBACnBjC,KAAKiC,QAAUA,EAFnB,yCAKE,WAEE,OADKjC,KAAK4V,KAAI5V,KAAK4V,GAAKrF,IAASgG,SAC1BvW,KAAK4V,OAPhB,M,8ICCMd,EAAW,IAAI7R,IAAK,CAAC,CACzB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,iBAAAG,EAAA,6DACE6W,EAAcC,IAAYC,YAAYnC,EAAU,IAClDtU,EAAMY,EAAGX,OAAOV,EAAQgX,EAAa3V,EAAGV,SAAU,KAAMU,GAFxD,SAGSZ,EAAII,UAHb,mFAAF,uDAAC,KAKH,CAAC2L,KAAM,aAELwoB,EAAiB,IAAI9xB,IAAK,CAAC,CAC/B5D,KAAK,WAAD,4BAAE,WAAeyB,EAAOM,EAAIrB,GAA1B,SAAAG,EAAA,+EACGuF,OAAOqP,UADV,2CAAF,uDAAC,KAGH,CAACvI,KAAM,oB,izBCTLspB,EAAa,IAAI5yB,IAAK,GAAI,CAACsJ,KAAM,aAAclM,SAAUC,IAAaK,OACtEm1B,EAAkB,IAAI7yB,IAAK,GAAI,CAACsJ,KAAM,kBAAmBlM,SAAUC,IAAaK,OAChFojB,EAAS,IAAI9gB,IAAK,CAAC,CACvB5D,KAAK,WAAD,4BAAE,WAAeyB,EAAOM,EAAIrB,GAA1B,yBAAAG,EAAA,sDACJkB,EAAG0V,WAAW+e,EAAY9R,GAC1B3iB,EAAG0V,WAAWgf,EAAiB/R,GAEzBgS,EAJF,UAIa30B,EAAGX,OAAO,CAACV,GAAS81B,EAAYz0B,EAAGV,SAAU,KAAMU,UAJhE,aAIa,EAAwDC,QACrE+L,EAAY,IAAIxN,IAAGi2B,EAAYz0B,EAAI,CAACy0B,IAEpCr0B,EAAI,GAPJ,YAQGA,KAAM,GART,iCAS2B,IAAI5B,IAAGk2B,EAAiB1oB,EAAW,CAAC0oB,IAAkBl1B,UATjF,UASIo1B,EATJ,OAUF9vB,QAAQC,IAAI,YAAa6vB,GACpBA,EAXH,qDAYF5oB,EAAY,IAAIxN,IAAGm2B,EAAU3oB,EAAW,CAAC2oB,IAZvC,wCAeiB3oB,EAAUxM,UAf3B,eAeEI,EAfF,yBAuCGA,GAvCH,4CAAF,uDAAC,KAyCH,CAACuL,KAAM,W,GAGe5M,I,+BCvCpBqvB,EAAU,IAAI/rB,IAAK,CAAC0T,KAAQ,CAACtW,SAAUC,IAAa2D,QACpD8qB,EAAU,IAAI9rB,IAAK,CAAC,CACxB5D,KAAK,WAAD,4BAAE,WAAewB,EAAOO,EAAIrB,GAA1B,IAAAG,EAAA,WAAAA,EAAA,6DACJkB,EAAG0V,WAAWkY,EAASD,GADnB,SAEY3tB,EAAGgC,SAASvC,GAFxB,cAEEX,EAFF,gBAGY,IAAIN,IAAGovB,EAAS5tB,EAAIrB,GAAQa,UAHxC,UAGE+W,EAHF,OAIoB,oBAAbzX,EAAEmD,OAJT,yCAIuCmyB,KAJvC,gCAMGt1B,EAAEmD,OAAOsU,IANZ,4CAAF,uDAAC,MASPoX,EAAQxiB,KAAO,gBACfyiB,EAAQziB,KAAO,kBAEf,IAAM0pB,EAAO,IAAIhzB,IAAK,CAAC,IACjBizB,EAAO,IAAIjzB,IAAK,CAAC,CACrB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,SAAAG,EAAA,6DACJkB,EAAG0V,WAAWmf,EAAMC,GADhB,SAES90B,EAAGF,SAASL,GAFrB,mCAEoC,IAAIjB,IAAGq2B,EAAM70B,EAAIrB,GAAQa,UAF7D,kGAAF,uDAAC,MAKPs1B,EAAK3pB,KAAO,YAEZ,IAAM4pB,EAAM,IAAIlzB,IAAK,CAAC,CACpB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,IAAAG,EAAA,SAAAA,EAAA,sEACYkB,EAAGF,SAASL,GADxB,cACEX,EADF,yBAEGA,EAAI,GAFP,2CAAF,uDAAC,MAKPi2B,EAAI5pB,KAAO,YAEX,IAAM6pB,EAAc,IAAInzB,IAAK,CAAC0T,KAAQ,CAACpK,KAAM,cAAelM,SAAUC,IAAa2D,QAC7EoyB,EAAM,IAAIpzB,IAAK,CAAC,CACpB5D,KAAK,WAAD,4BAAE,WAAOyB,EAAOM,EAAIrB,GAAlB,IAAAG,EAAA,WAAAA,EAAA,6DACJkB,EAAG0V,WAAWsf,EAAaC,GADvB,SAEY12B,IAAMiB,QAAQE,GAF1B,cAEEZ,EAFF,gBAGY,IAAIN,IAAGw2B,EAAah1B,EAAIrB,GAAQa,UAH5C,cAGE+W,EAHF,yBAIGzX,EAAIyX,GAJP,2CAAF,uDAAC,KAMH,CAAEpL,KAAM,QAEN+pB,EAAuB,IAAIrzB,IAAK,CAAC0T,KAAQ,CAACtW,SAAUC,IAAa2D,QACjEsyB,EAAe,IAAItzB,IAAK,CAAC,CAC7B5D,KAAK,WAAD,4BAAE,WAAOyB,EAAOM,EAAIrB,GAAlB,QAAAG,EAAA,SAAAA,EAAA,6DACJkB,EAAG0V,WAAWwf,EAAsBC,GAC9BC,EAAU,IAAI52B,IAAG02B,EAAsBl1B,EAAIrB,GAF7C,SAGYy2B,EAAQ51B,UAHpB,cAGE+W,EAHF,gBAIYhY,IAAMiB,QAAQE,GAJ1B,cAIEZ,EAJF,yBAKGA,GAAKyX,GALR,2CAAF,uDAAC,KAOH,CAAEpL,KAAM,kBAEN8iB,EAAO,IAAIpsB,IAAK,IAChBmsB,EAAO,IAAInsB,IAAK,CAAC,CACrB5D,KAAM,SAASwB,EAAOO,EAAIrB,GACxB,OAAOqB,EAAGF,SAASL,GAAS,IAAIjB,IAAGyvB,EAAMjuB,EAAIrB,GAAQa,cAGzDwuB,EAAK7iB,KAAO,aACZ8iB,EAAK9iB,KAAO,aAEZ,IAAMkqB,EAAU,IAAIxzB,IAAK,CAAC0T,KAAQ,CAACtW,SAAUC,IAAa2D,QACpDyyB,EAAU,IAAIzzB,IAAK,CAAC,CACxB5D,KAAM,SAASwB,EAAOO,EAAIrB,GACxB,OAAO,IAAI6D,IAAU,IAAIhE,IAAG62B,EAASr1B,EAAIrB,GAAS02B,OAGtDC,EAAQnqB,KAAO,yBACfkqB,EAAQlqB,KAAO,UAEf,IAAMoqB,EAAY,IAAI1zB,IAAK,IAErBuK,EAAS,IAAIvK,IAAK,CAAC,CACvB5D,KAAM,SAACwB,EAAOO,GACZ,OAAOP,MAGX2M,EAAOjB,KAAO,SAEd,IAAMyG,EAAU,IAAI/P,IAAK,CAAC,MAC1B+P,EAAQzG,KAAO,WAEf,IAAMoiB,EAAW,IAAI1rB,IAAK,IAC1B0rB,EAASpiB,KAAO,aAChB,IAAMkiB,EAAW,IAAIxrB,IAAK,CAAC,CACzB5D,KADyB,SACpBwB,EAAOO,EAAIrB,GACd,OAAOqB,EAAGF,SAASL,KAAW,IAAIjB,IAAG+uB,EAAUvtB,EAAIrB,GAAQa,cAG/D6tB,EAASliB,KAAO,UAEhB,IAAM6Y,EAAU,IAAIniB,IAAK,CAAC,CACxB5D,KADwB,SACnBwB,EAAOO,EAAIrB,GACd,OAAQqB,EAAGF,SAASL,OAGxBukB,EAAQ7Y,KAAO,WAEf,IAAMmkB,EAAS,IAAIztB,IAAK,MACxBytB,EAAOnkB,KAAO,UACd,IAAMglB,EAAU,IAAItuB,IAAK,MAAO,CAACsJ,KAAM,aAEjCmiB,EAAS,IAAIzrB,IAAK,CAAC0T,KAAQ,CAACtW,SAAUC,IAAa2D,QACnDuqB,EAAS,IAAIvrB,IAAK,CAAC,CACvB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,iBAAAG,EAAA,6DACJkB,EAAG0V,WAAW4X,EAAQF,GAChBnY,EAASxV,EAFX,SAGqB,IAAIjB,IAAG8uB,EAAQttB,EAAIrB,GAAQa,UAHhD,UAGEg2B,EAHF,OAIkB,kBAAXvgB,GAAkC,OAAXA,EAJ9B,yCAIsDmf,KAJtD,YAKAnf,EAAOugB,aAAuBC,UAL9B,0CAMKxgB,EAAOugB,MANZ,iCAOUvgB,EAAOugB,IAPjB,4CAAF,uDAAC,MAUPpI,EAAOjiB,KAAO,eACdmiB,EAAOniB,KAAO,mBAEd,IAAMqoB,EAAqB,IAAI3xB,IAAK,CAAC,CACnC5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChB,OAAO0F,OAAOC,SAASoQ,KAAKghB,OAAO,GAAGlQ,MAAM,KACvCrnB,QAAO,SAAAwN,GAAG,OAAIA,EAAI7K,OAAS,KAC3B+H,KAAI,SAAA8C,GAAQ,IAAD,EACSA,EAAI6Z,MAAM,KADnB,mBACLjf,EADK,KACA9G,EADA,KAEV,OAAO,eAAE8G,EAAMovB,UAAUl2B,OAE1BkjB,QAAO,SAACiT,EAAMC,GAAP,OAAgB3zB,OAAO4zB,OAAOF,EAAMC,KAAO,QAG3DrC,EAAmBroB,KAAO,yBAE1B,IAAMgiB,EAAe,IAAItrB,IAAK,CAAC,CAC7B5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChBmG,QAAQC,IAAI,WAAY/E,EAAGV,UAC3B,IAAIW,EAAUD,EAAGX,OAAOV,EAAQwuB,EAAcntB,EAAGV,SAAU,KAAMU,GACjE,OAAO,IAAIxB,IAAGyB,EAASD,EAAI,IAAIR,cAGnC2tB,EAAahiB,KAAO,kBAEpB,IAAMqkB,EAAY,IAAI3tB,IAAK,CACzB,CACE5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,uBAAAG,EAAA,sEACYkB,EAAGF,SAASL,GADxB,cACAs2B,EADA,OAEAxvB,EAAMxE,eAAK/B,EAAGV,SAAS2C,OAAO8zB,IAEnB,QADXn2B,EAASf,IAAOowB,MAAMrsB,IAAI2D,EAAK,SAE7ByvB,EAAQ,IAAIC,eAChBr2B,EAAS,IAAIsvB,SAAQ,SAACgH,EAASC,GAC7BH,EAAMI,mBAAqB,WACD,IAApBx3B,KAAKy3B,YACPH,EAAQF,IAGZA,EAAMM,KAAK,MAAOP,GAAK,GACvBC,EAAMO,UAER13B,IAAOowB,MAAQpwB,IAAOowB,MAAMtsB,IAAI4D,EAAK3G,IAfnC,SAiBmBA,EAjBnB,cAiBE42B,EAjBF,yBAkBGA,GAlBH,4CAAF,uDAAC,KAqBN,CAACrrB,KAAM,iBACJsrB,EAAkB,IAAI50B,IAAK,GAAI,CAACsJ,KAAM,oBAGtCurB,EAAe,IAAI70B,IAAK,SAAU,CAACsJ,KAAM,iBAEzCwrB,GAAkB,IAAI90B,IAAK,CAACurB,GAAS,CAACjiB,KAAM,oBAClDwrB,GAAgBzd,OAAO,CAAC,EAAGyd,IAAkBrJ,EAAQoJ,GAErDlH,EAAUtW,OAAO,GAAIyd,GAAiBF,GAEtC,IAAMG,GAAiB,IAAI/0B,IAAK,WAAY,CAACsJ,KAAM,mBACnDqkB,EAAUtW,OAAO,CAAC,EAAGsW,GAAYlC,EAAQsJ,IAEzC,IAAMvH,GAAU,IAAIxtB,IAAK,CACvB,CACE5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChB,IAAIsB,EAAUD,EAAGX,OAAOV,EAAQ0wB,GAASrvB,EAAGV,SAAU,KAAMU,GAC5D,OAAO,IAAIxB,IAAGyB,EAASD,EAAI,IAAIR,aAGlC,CAAC2L,KAAM,aAEJ0rB,GAAS,IAAIh1B,IAAK,CAAC,CACvB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,eAAAG,EAAA,sEACUkB,EAAGF,SAASL,GADtB,cACAqO,EADA,8BAES9O,IAAN8O,EAAmBA,EAAIA,EAAEgpB,eAF5B,2CAAF,uDAAC,MAKPD,GAAO1rB,KAAO,SAEd,IAAM4rB,GAAW,IAAIl1B,IAAK,CAAC,CACzB5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,SAAAG,EAAA,sEACUkB,EAAGF,SAASL,GADtB,uCAC8BgtB,eAD9B,2CAAF,uDAAC,MAIPsK,GAAS5rB,KAAO,WAGhB,IAAMomB,GAAY,IAAI1vB,IAAK,CAAC,CAC1B5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChB,OAAIc,GAAiC,kBAAjBA,EAAMqB,OACjBrB,EAAMqB,OAAS,EAEfrB,aAAiByC,UAG3B,CAACiJ,KAAM,aAEJ0kB,GAAa,IAAIhuB,IAAK,CAAC,CAC3B5D,KAAK,WAAD,4BAAE,WAAOwB,EAAOO,EAAIrB,GAAlB,SAAAG,EAAA,sEACWkB,EAAGF,SAASL,GADvB,oFAAF,uDAAC,KAGH,CAAC0L,KAAM,gBAEL6rB,GAAc,IAAIn1B,IAAK,CAAC,CAC5B5D,KAAM,SAACwB,EAAOO,EAAIrB,GAChB,MAAO,OAGXq4B,GAAY7rB,KAAO,eAEnB,IAAMkN,GAAW,CACf9C,UACAoY,UACAC,UACAkH,OACAD,OACAE,MACAQ,YACAD,UACAD,UACAjpB,SACAwF,UACA2b,WACAF,WACAiC,SACAa,UACAhD,eACAC,SACAE,SACAuJ,UACAE,YACAvD,qBACAxP,UACAgT,eACA/I,OACAD,OACAqB,WACAsH,mBACAhU,SACA8R,aACAC,kBACAjf,oBACAH,oBACAW,oBACA4Z,cACAmB,YACAE,YACAlB,mBAGF,IAAK,IAAM5vB,MAAKiY,GACdA,GAASjY,IAAGoU,GAAZ,YAAsBpU,K,0KCjRH62B,E,kDACnB,WAAYlzB,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXgzB,aAAa,GAHE,E,4CAOnB,WAAW,IAAD,OACR,OAAO,kBAAC,IAAD,CAAansB,WAAYnM,KAAKmF,MAAMC,MAAM+G,WAC7B8G,WAAW,EACXtG,WAAY3M,KAAKmF,MAAMwH,WACvBvH,MAAOpF,KAAKmF,MAAMC,MAClB8N,WAAY,WACV,EAAKvM,SAAS,CAAC2xB,aAAa,IAC5B,EAAKnzB,MAAMC,MAAMC,QAAQsB,SAAS,CAACqK,UAAU,KAE/C/H,SAAQ,uCAAE,WAAO9J,EAAP,kCAAAe,EAAA,yDAAeiT,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,cACnCjU,EAAMsM,iBACNtM,EAAMuM,kBACF3L,EAAS,EAAKoF,MAAMsL,YACxB,EAAKtL,MAAMiC,WAAWvH,KAAKya,OAAOva,EAAQ,EAAKoF,MAAM3B,cAAe2P,GACpE,EAAKxM,SAAS,CAAC2xB,aAAa,IAC5B,EAAKnzB,MAAMC,MAAMC,QAAQsB,SAAS,CAACqK,UAAU,KAEzCoC,EARI,wBASAmlB,EAAS,EAAKpzB,MAAMiC,WATpB,UAUAmxB,EAAOtP,cAVP,QAWFrT,EAAK,EAAKzQ,MAAMC,MAAMgI,UAAU1M,SACpCX,EAAS,EAAKoF,MAAMsL,YAChB+nB,EAAQD,EAAO1uB,KAAKmF,MAAM4G,EAAGvS,OAAO,WAAWA,OAAOF,eAAKpD,KAC3DsE,EAAOm0B,EAAMxpB,MAAM,CAAC,EAAK7J,MAAM3B,eAAeH,OAAO8P,IACrDslB,EAAWp0B,EAAK0L,QAAQ1M,OAAO8P,IAC/B/R,EAAKm3B,EAAO1uB,KAAKmF,MAAMypB,EAASp1B,OAAO,SAEzC,EAAK8B,MAAMwH,WAAWC,YAAYxL,GAlB9B,wBAuBN,EAAK+D,MAAMwH,WAAWmE,SAvBhB,4CAAF,4D,oBA8B9B,WAAU,IAAD,SACF8K,MAAI8c,MAAM14B,KAAKmF,MAAMkL,SAG1B,IAAIooB,EAAWz4B,KAAKmF,MAAMkL,QAAQN,QAAQ1M,OAAOrD,KAAKmF,MAAMiL,cACxDuoB,EAAiB34B,KAAKmF,MAAMiC,WAAWyC,KAAKmF,MAAMypB,EAASp1B,OAAO,OACtE,OAAO,yBAAKuO,iBAAiB,EAAOf,UAAU,wBAC5C,8BACE,4BAAQI,MAAO,CAAC2nB,WAAY,WACzB54B,KAAKmF,MAAM3B,cAAc+I,MAF9B,aAMKvM,KAAKsF,MAAMgzB,aACZ,0BAAMznB,UAAU,cACV,uBAAGF,QAAS,SAAA1F,GACV,EAAK9F,MAAMwH,WAAWC,YAAY+rB,IACjC9nB,UAAW7Q,KAAKmF,MAAMmL,aAAe,IAAM,IAF9C,UAGGtQ,KAAKmF,MAAMiL,oBAHd,aAGG,EAAyB7D,MAJlC,OAOGvM,KAAKmF,MAAMmL,aACR,0BAAMO,UAAU,SACd,uBAAGF,QAAS,SAAA1F,GACV,EAAKtE,SAAS,CAAC2xB,aAAa,IAC5B,EAAKnzB,MAAMC,MAAMC,QAAQsB,SAAS,CAACqK,UAAU,MAF/C,QADF,OAQE,uBAAGL,QAAS,SAAA1F,GACV,EAAK9F,MAAMiC,WAAWvH,KAAK0a,UAAU,EAAKpV,MAAMmL,aAAc,EAAKnL,MAAM3B,eACzE,EAAK2B,MAAMwH,WAAWmE,WAFxB,MAQD,uBAAGH,QAAS,SAAA1F,GACX,EAAK9F,MAAMC,MAAMC,QAAQsB,SAAS,CAACqK,UAAU,IAC7C,EAAKrK,SAAS,CAAC2xB,aAAa,KAC3BznB,UAAU,SAHZ,WAUP7Q,KAAKsF,MAAMgzB,aACT,8BACIt4B,KAAK64B,aAKf,yBAAKhoB,UAAU,cACZ7Q,KAAKmF,MAAMiL,cAAgBpQ,KAAKmF,MAAMkL,QAAQpG,KAAI,SAAAvJ,GACjD,IAAI+3B,EAAW/3B,EAAO2C,OAAO,EAAK8B,MAAMiL,cACpCpP,EAAS,EAAKmE,MAAMiC,WAAWyC,KAAKmF,MAAMypB,EAASp1B,OAAO,WAC1DjC,EAAK,EAAK+D,MAAMiC,WAAWyC,KAAKmF,MAAMypB,EAASp1B,OAAO,OAE1D,OAAO,yBAAKwN,UAAU,YAAYlJ,IAAK8wB,GACrC,0BAAM5nB,UAAU,WAAU,kBAAC,IAAD,CAAWpR,KAAMuB,EAAQiQ,MAAO,CAAC6nB,QAAS,mBACpE,uBAAGnoB,QAAS,SAAAxR,GAAU,EAAKgG,MAAMwH,WAAWC,YAAYxL,gB,GA9G5BmQ,IAAMC,Y,+JCDzBunB,E,kDACnB,WAAY5zB,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAItE,EAAQsE,EAAM3E,IAHD,OAIZK,GAAWA,aAAiB4W,MAC/B5W,EAAQ,IAGV,EAAKyE,MAAQ,CACXzE,MAAOA,EACPm4B,YAAa,IAGf,EAAKC,SAAW,EAAKA,SAASvrB,KAAd,gBAChB,EAAK1C,QAAU,EAAKA,QAAQ0C,KAAb,gBACf,EAAKwF,WAAa,EAAKA,WAAWxF,KAAhB,gBAClB,EAAKwrB,oBAAsB,EAAKA,oBAAoBxrB,KAAzB,gBAC3B,EAAKyrB,eAAiB,EAAKA,eAAezrB,KAApB,gBAjBL,E,kDAoBnB,SAAe7M,GACb,IAAMV,EAAaU,EAAMu4B,OAAOvL,cAGhC,OAAuB,IAFH1tB,EAAW+B,OAEJ,GAAKlC,KAAKmF,MAAMgH,WAAWgoB,OAAOh0B,K,sBAI/D,WACE+F,QAAQC,IAAI,Y,iCAMd,SAAoBkzB,GACE,OAAhBA,IACFnzB,QAAQC,IAAI,OAEZnG,KAAKc,MAAQu4B,EAAYv4B,MACzBd,KAAKc,MAAM4T,iBAAiB,QAAS1U,KAAKgL,SAC1ChL,KAAKc,MAAM4T,iBAAiB,WAAY1U,KAAKkT,e,qBAIjD,WAEEhN,QAAQC,IAAI,a,wBAGd,WACED,QAAQC,IAAI,cACRnG,KAAKmF,MAAM+N,YACblT,KAAKmF,MAAM+N,e,oBAIf,WAAU,IAAD,OACC8lB,EAAgBh5B,KAAKsF,MAArB0zB,YAGJn4B,EAAQb,KAAKsF,MAAMzE,MACnB,kBAAoBA,IACtBA,EAAQA,EAAMoB,SAGhB,IAAMq3B,EAAa,CACjBrmB,UAAWjT,KAAKmF,MAAM8N,UACtBsmB,YAAa,OACb14B,MAAOA,EACPoI,SAAU,SAAC9J,EAAD,GAAkC,IAAxBq6B,EAAuB,EAAvBA,SAAuB,EAAbC,OAG5BvzB,QAAQC,IAAI,wBAMZD,QAAQC,IAAI,YACZD,QAAQC,IAAIqzB,GACZtzB,QAAQC,IAAIhH,GAEZ,EAAKwH,SAAS,CACZ9F,MAAO24B,KAGXjuB,UAAW,SAACN,GAIV,GADA/E,QAAQC,IAAI,yBACR,MAAQ8E,EAAEtD,KAAOsD,EAAE4B,QAAS,CAC9B,IAAIhN,EAAO,EAAKsF,MAAMwH,WAAWijB,aACjC,EAAKzqB,MAAM8D,SAASgC,EAAG,CAACkI,WAAYtT,EAAMuT,eAAe,IAE3D,GAAI,MAAQnI,EAAEtD,KAAOsD,EAAE4B,QAAS,CAC9B,IAAIhN,EAAO,EAAKsF,MAAMwH,WAAWkjB,mBACjC,EAAK1qB,MAAM8D,SAASgC,EAAG,CAACkI,WAAYtT,EAAMuT,eAAe,OAM/D,OACI,0BAAM6lB,SAAU,SAAAhuB,GAAMA,EAAEQ,iBAAkB,EAAKwtB,YAAahoB,MAAO,CAAC6nB,QAAS,SAAU1mB,MAAO,UAC5F,kBAAC,IAAD,CACI4mB,YAAaA,EACbU,4BAA6B,YAAgB,IAAb74B,EAAY,EAAZA,MAC9B,EAAK8F,SAAS,CACZqyB,YAAa,EAAKG,eAAet4B,MAGrC84B,qBAAsB35B,KAAKmF,MAAM8D,SACjC2wB,4BAA6B,WAC3B,EAAKjzB,SAAS,CACZqyB,YAAa,MAGjBa,mBAAoB,SAAAh6B,GAClB,OAAOA,EAAK0M,MAEdutB,iBAAkB,SAAA3mB,GAAU,OACxB,6BACGA,EAAW5G,OAGlB+sB,WAAYA,EACZ1rB,IAAK5N,KAAKk5B,2B,GAhIiB3nB,IAAMC,a","file":"static/js/main.d2d71cee.chunk.js","sourcesContent":["var handlers = []\n\nexport class Observer {\n  static subscribe(event, fn){\n    handlers.push({\n      event: event,\n      callback: fn\n    });\n    return fn\n  }\n\n  static unsubscribe(fn){\n    handlers = handlers.filter(\n        function(item) {\n          if (item.callback !== fn) {\n            return item;\n          }\n          return false\n        }\n    );\n  }\n\n  static fire(event, data){\n    handlers.forEach(function(item) {\n      if (item.event === event){\n        item.callback(data);\n      }\n    });\n  }\n}\n","import {Pipe} from \"./pipe\"\nimport {Value} from \"./value\"\nimport {PipeValue} from \"./pipe-value\"\nimport {Observer} from \"./observer\"\n\nexport class PipeInput extends Value{\n  constructor(vm) {\n    super()\n    this.vm = vm\n    this.inputResolved = false\n  }\n\n  getInput() {\n    if (this.inputResolved) return this.input\n\n    const input = this._dep()\n    if (input instanceof Pipe) {\n      this.input = new PipeValue(this.vm, input)\n    } else if (input instanceof Value) {\n      this.input = input\n    } else {\n      debugger\n    }\n\n    this.inputResolved = true\n    return this.input\n  }\n\n  toValue(){\n    const r = this.getInput().toValue()\n    return r\n  }\n\n  getExportedValueFor(pipe){\n    if (this.input instanceof PipeValue) {\n      return this.input.getExportedValueFor(pipe)\n    }\n  }\n\n  _dep(){\n    const depPipe = this.vm.getDep([this.vm.pipe], this.vm.pipe, this.vm.treeId(), null, this.vm)\n    Observer.fire('vm_pull_dep', {pipe: this.pipe, vm: this.vm, dep: this, depPipe: depPipe})\n    if (!depPipe) return new Value(undefined)\n\n    return depPipe\n  }\n}\n","import {Observer} from './observer'\nimport {Dep, ResolvedDep} from \"./dep\"\nimport { rootVM } from \"./rootVm\"\nimport {Pipe} from \"./pipe\"\nimport {Patch} from \"./patch\"\nimport {PipeInput} from \"./pipe-input\"\nimport {Value} from \"./value\"\nimport {Map, List} from \"immutable\"\nimport pipeRequires from \"./pipe-requires\"\nimport {PipeValue} from \"./pipe-value\"\nimport {Input} from \"./base\"\n\nexport class VM {\n  constructor(pipe, parent, origin){\n    if (!pipe){\n      debugger\n    }\n    this.pipe = pipe\n    this.parent = parent || rootVM\n    this.origin = origin || [pipe]\n  }\n\n  async pull(){\n    let inputValue = undefined\n    if (this.pipe.requires !== pipeRequires.NOTHING) {\n      const dep = this.getDep([this.pipe], this.pipe, this.treeId(), this.pipe.requires === pipeRequires.PIPE ? this : false, this)\n\n      if (dep instanceof Value) {\n        inputValue = await dep.toValue()\n        // return inputValue\n      }\n      // if (dep instanceof Pipe) {\n      //   const depVM = new VM(dep, this, [dep])\n      //   inputValue = await depVM.toValue()\n      //   // return this.push(inputValue, depVM)\n      // }\n    }\n\n    return this.push(inputValue)\n  }\n\n  async push(value){\n    this.input = value\n    // if (inputVM) {\n    //   this.internals = inputVM.exportedValues\n    // }\n\n    const result = await this._push(this.pipe, 0, this.pipe)\n\n    // const exports = this.pipe.exports.keySeq().toArray()\n    // for (let exportPipe of exports) {\n    //   const fromPipe = this.pipe.exports.get(exportPipe)\n    //   const exportedPipe = fromPipe ? fromPipe : exportPipe\n    //   const exportedValueVM = new VM(exportedPipe, this, [exportedPipe])\n    //   const value = await exportedValueVM.toValue()\n    //   this.exportedValues = this.exportedValues.set(exportPipe, value)\n    //\n    //   const data = {vm: this, exportPipe, fromPipe, value}\n    //   Observer.fire('vm_push_exports', data)\n    // }\n\n    return result\n  }\n\n  async toValue(){\n    return this._toValue(await this.pull())\n  }\n\n  notifyPull(pipe, origin){\n    Observer.fire('vm_pull', {vm: this, depPipe: pipe, originPipe: origin})\n  }\n\n\n  async _push(block, i, pipe, input){\n    Observer.fire('vm_push', {vm: this, pipe: pipe, block: block, i: i, input: input})\n    let result\n    // next outgoing patch in block\n    let patch;\n    const patches = await pipe.getPatches()\n    for (let p of patches) {\n      if (p.from.block === block && (0 === i ? i <= p.from.i : i < p.from.i) && await p.valid(this, pipe)) {\n        patch = p\n        break\n      }\n    }\n    // let patch = pipe.patches.find((patch) => {\n    //   return patch.from.block === block && (0 === i ? i <= patch.from.i : i < patch.from.i) && patch.valid(this, pipe)\n    // })\n    if (patch) {\n      let head = await this._pushToChunk(block, i, patch.from.i, input, pipe)\n      result = await this._push(patch, 0, pipe, head)\n    } else {\n      let chunkResult = await this._pushToChunk(block, i, block.content.length, input, pipe)\n      if (block instanceof Patch) {\n        result = await this._push(block.to.block, block.to.i, pipe, chunkResult)\n      } else {\n        // result = this._whileOrReturn(block, chunkResult)\n        result = chunkResult\n      }\n    }\n    Observer.fire('vm_push_result', {vm: this, pipe: pipe, block: block, i: i, input: input, result: result})\n    if (block === pipe) {\n      Observer.fire('vm_result', {vm: this, pipe: this.pipe, result: result})\n    }\n    return result\n  }\n\n  // _whileOrReturn(pipe, result){\n  //   if (!this.primaryPipe) this.primaryPipe = pipe\n  //   if (pipe === this.primaryPipe) {\n  //     let whileDep = pipe.getDep(whileCond, this)\n  //     if (whileDep && whileDep.pipe !== whileCond && this.pull(whileDep.pipe)) {\n  //       return new VM(pipe, this.parent, this)._push(pipe, 0, pipe, result)\n  //     } else {\n  //       return result\n  //     }\n  //   } else return result\n  // }\n\n  async _pushToChunk(block, float_i, float_j, input, pipe){\n    let data = {vm: this, pipe: pipe, block: block, fromI: float_i, toI: float_j, input: input}\n    Observer.fire('vm_push_chunk', data)\n\n    let i = Math.floor(float_i)\n    let j = Math.floor(float_j)\n\n    var result = input\n    for(var k = i; k < j && k < block.content.length; k++ ){\n      result = await this._pushToIndex(block, k, result)\n      // data for observer\n      let data = {vm: this, pipe: pipe, block: block, i: k, result: result, fromI: float_i, toI: float_j}\n      Observer.fire('vm', data)\n    }\n    return result\n  }\n\n  async _pushToIndex(block, i, input){\n    let atom = block.content[i]\n    let type = typeof atom\n\n    if (atom instanceof Pipe) {\n      let childVM = new VM(atom, this, List([i, block]))\n\n      let data = {vm: childVM, block: atom, input: input}\n      Observer.fire('vm_push_child', data)\n\n      return await childVM.push(input)\n    } else if ('string' === type) {\n      let inputValue = await this._toValue(input)\n      if ('undefined' === typeof inputValue)\n        return atom\n      else\n        return inputValue.toString().concat(atom)\n    } else if (atom instanceof Object && atom.push) {\n      if(atom instanceof Array) return atom\n\n      return atom.push(this.input, this, [i, block])\n    }\n    else {\n      return atom\n    }\n  }\n\n  getDep(origin, requestedPipe, requesterId, vmForDep, callerVM){\n    // if (origin.length === 0) {\n    //   if (this.internals.has(requestedPipe)) {\n    //     const value = this.internals.get(requestedPipe)\n    //     return new Value(value)\n    //   }\n    // }\n\n    let dep = this.pipe.getDep(origin, requestedPipe)\n    if (!dep) {\n      if (origin.length > 0) {\n        dep = this.getDep([], requestedPipe, requesterId, vmForDep, this)\n      } else {\n        dep = this.parent.getDep(this.origin, requestedPipe, requesterId, vmForDep, this)\n      }\n    } else {\n      dep = new PipeValue(vmForDep || callerVM, dep)\n    }\n\n    Observer.fire('vm_getdep', {requesterId: requesterId, vm: this, origin: origin, requestedPipe: requestedPipe, dep: dep})\n\n    return dep\n\n    // let argDepPipe = this.args.get(pipe)\n    // if (argDepPipe){\n    //   result = new Dep(argDepPipe, currentVM)\n    //   Observer.fire('vm_parent_getdep', {type: 'args', pipe: pipe, vm: this, result: result})\n    // } else {\n    //   if (this.parent) {\n    //     result = this.parent.getDep(pipe, currentVM)\n    //     Observer.fire('vm_parent_getdep', {type: 'parent', pipe: pipe, vm: this, result: result})\n    //   } else {\n    //     result = new undefinedDep(pipe, currentVM)\n    //   }\n    // }\n    // return result\n  }\n\n  async _toValue(input){\n    let result\n\n    if (input instanceof Value){\n      result = input.toValue()\n      // let depPipe = input.depPipe()\n      // if (depPipe) {\n      //   if (depPipe instanceof ResolvedDep){\n      //     result = depPipe.pull()\n      //   } else {\n      //     result = await new VM(depPipe, input.vm, [depPipe]).toValue()\n      //   }\n      // } else {\n      //   result = undefined\n      // }\n    } else {\n      result = input\n    }\n\n    return result\n  }\n\n  toString(val){\n    if('undefined' === typeof val) {\n      return ''\n    } else {\n      return val\n    }\n  }\n\n  treeId(){\n    if (this.origin instanceof List)\n      return this.parent.treeId().concat(this.origin).concat(this.pipe)\n    else\n      return this.parent.treeId().concat(this.pipe)\n  }\n\n  setInternalPipeValue(pipe, value){\n    this.internals = this.internals.set(pipe, value)\n  }\n\n  getInternalPipeValue(pipe){\n    return this.internals.get(pipe)\n  }\n}\n","const NOTHING = 0\nconst VALUE = 1\nconst PIPE = 2\nconst pipeRequires = {NOTHING, VALUE, PIPE}\n\nexport default pipeRequires\n","import React from 'react';\nimport {Editor, EditorState, convertToRaw, SelectionState, Modifier, Entity} from 'draft-js';\nimport { VM } from '../core/vm'\nimport './textIde.css'\nimport Inspector from 'react-inspector';\nimport getDecorator from './decorator'\nimport { bypass, tmpPipe } from '../core/base'\nimport {List, Map} from 'immutable'\nimport DepControl from \"./depControl\"\nimport Registry from \"../core/registry\"\nimport ReactGA from 'react-ga';\nimport pipeRequires from \"../core/pipe-requires\"\nimport PipeName from \"./pipe-name\"\nimport {rootVM} from \"../core/rootVm\"\nimport HtmlInspector from \"./htmlInspector\"\n\nconst styleMap = {\n  'STRIKETHROUGH': {\n    textDecoration: 'line-through',\n  },\n};\n\nconst dataByNode =(node, contentState) => {\n  const dataNode = (node.hasChildNodes() ? node : node.parentNode).closest('[data-entity-key]')\n  if(!dataNode) {\n    return [false, undefined]\n  }\n  const entityKey = dataNode.dataset.entityKey\n  const offsetData = contentState.getEntity(entityKey).getData()\n  return [offsetData.ii, offsetData.block.condition ]\n}\n\n\nexport default class TextIde extends React.Component {\n  constructor(props) {\n    super(props);\n    props.model.textide = this\n    // this.state = {editorState: EditorState.createEmpty()};\n\n\n    // let pipeHelper = new PipeHelper(this.props.model.currentPipe, this.props.model.currentVM)\n    // let state = pipeHelper.toDraft(decorator)\n    //\n    // this.state = {\n    //   pipeHelper: pipeHelper,\n    //   editorState: state, //this.pipeHelper.initialState\n    //   focusOffset: 0,\n    // };\n    this.state = {\n      inspector: (new URL(window.location)).searchParams.get('format') === 'html' ? false : true,\n      ifElse: false,\n      activeSuggest: null,\n    }\n\n    this.handlePastedText = (text, html, editorState) => {\n      console.log('paste')\n      console.log(text)\n      console.log(html)\n\n      let newContent = Modifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), text);\n      let newState = EditorState.push(editorState, newContent, 'insert-characters');\n      this.setState({editorState: newState})\n      return true;\n    }\n\n    this.handleBeforeInput = (chars, editorState) => {\n      console.log('before Input ------------------------------')\n      // this.setRangeHints(editorState)\n      console.log(chars)\n      return false\n    }\n\n    this.setRangeHints = (editorState) => {\n      //editorState.getSelection().getStartOffset(), editorState.getCurrentContent()\n      const focusOffset = editorState.getSelection().getFocusOffset()\n      const contentState = editorState.getCurrentContent()\n\n      const start = this.props.pipeHelper.getInitialOffset(editorState.getSelection().getStartOffset(), editorState.getCurrentContent())\n      let startOffset\n      const end = this.props.pipeHelper.getInitialOffset(editorState.getSelection().getEndOffset(), editorState.getCurrentContent())\n      let endOffset\n      console.log('onChange before', window.getSelection())\n      console.log('setRangeHints', window.getSelection())\n      console.log('setRangeHints start:', start)\n      console.log('setRangeHints end:', end)\n      if (editorState.getSelection().isBackward){\n        startOffset = window.getSelection().focusOffset\n        endOffset = window.getSelection().anchorOffset\n      } else {\n        startOffset = window.getSelection().anchorOffset\n        endOffset = window.getSelection().focusOffset\n      }\n      const key = contentState.getFirstBlock().getEntityAt(focusOffset - startOffset)\n      const data = contentState.getEntity(key).getData()\n      const layer = data.block.condition\n\n      console.log('setRangeHints start offset:', startOffset)\n      console.log('setRangeHints end offset:', endOffset)\n      const cursorPosition = focusOffset\n      const cursorOffset = 1 - startOffset\n      let actualPosition = 0\n      for(let i = 0; i < cursorPosition; i++) {\n        console.log('cursor data', contentState.getEntity(contentState.getFirstBlock().getEntityAt(i)).getData())\n        if (contentState.getEntity(contentState.getFirstBlock().getEntityAt(i)).getData().j !== undefined) actualPosition++\n      }\n\n      const ranges1 = this.props.pipeHelper.ranges[actualPosition]\n      if (ranges1.count > 2) { debugger }\n      // if (focusOffset === 2 ) { debugger }\n      const ranges = ranges1[cursorOffset]\n      console.log('cursor final data', actualPosition, cursorOffset, ranges, this.props.pipeHelper.ranges)\n      ranges.forEach(range => {\n        if (range.block.condition !== layer) { debugger }\n      })\n      this.selection = {start, end, startOffset, endOffset, layer, ranges}\n      window.oldselection = window.getSelection()\n    }\n\n    this.rerenderEntities = (editorState) => {\n      // let focusOffset = 0\n      let focusOffset = editorState.getSelection().getFocusOffset()\n      let contentState = editorState.getCurrentContent()\n\n      let blockKey = contentState.getFirstBlock().getKey()\n      let key = contentState.getFirstBlock().getEntityAt(focusOffset)\n      let targetRange = new SelectionState({\n        anchorKey: blockKey,\n        anchorOffset: focusOffset,\n        focusKey: blockKey,\n        focusOffset: focusOffset,\n      });\n\n      let newContentState = Modifier.applyEntity(contentState, targetRange, key);\n      return EditorState.push(editorState, newContentState, 'apply-entity');\n    }\n\n    this.onChange = async (editorState) => {\n      // this.setRangeHints(editorState)\n      // console.log(type)\n      // console.log(editorState.getSelection().getFocusKey())\n      // console.log(editorState.getSelection().getFocusOffset())\n      // console.log(editorState.getSelection().getStartOffset())\n      // console.log(editorState.getSelection().getEndOffset())\n      // console.log(editorState.getCurrentContent().getSelectionAfter())\n      // console.log(editorState.getCurrentInlineStyle())\n      // console.log(editorState.getSelection().serialize())\n      // console.log(content)\n\n      // if ('split-block' == type ) return;\n      // console.log(content.getFirstBlock().getCharacterList())\n      // console.log(content.getFirstBlock().getCharacterList().toJS())\n      // console.log(content.getFirstBlock().getData().toJS())\n      // console.log(content.getSelectionBefore().toJS())\n      // console.log(content.getSelectionAfter().toJS())\n      // console.log('content')\n      // console.log(convertToRaw(content))\n      // console.log(content.getEntityMap())\n      // console.log(content.getBlockMap())\n      // console.log(editorState.getSelection())\nlet newState\n      if (editorState.getCurrentContent().getBlockMap() !== this.state.editorState.getCurrentContent().getBlockMap()) {\n        console.log('onChange', editorState.getCurrentContent().toJSON())\n        let changeType = editorState.getLastChangeType()\n        console.log('draft onChange ------------------------------', changeType)\n        this.props.pipeHelper.fromDraft(editorState.getCurrentContent(), this.props.model.currentLayer || undefined, this.getSelection(this.state.editorState, changeType))\n        const newContentState = await this.props.pipeHelper.updateDraft(editorState.getCurrentContent())\n        let selection2 = new SelectionState({\n          anchorKey: editorState.getCurrentContent().getFirstBlock().getKey(),\n          anchorOffset: editorState.getSelection().getAnchorOffset()-1,\n          focusKey: editorState.getCurrentContent().getFirstBlock().getKey(),\n          focusOffset: editorState.getSelection().getFocusOffset()-1,\n          isBackward: false,\n          hasFocus: true\n        })\n        newState = EditorState.set(editorState, {currentContent: newContentState}); //, selection: selection2\n\n\n        // console.log('onChange selectionAfter', newState.getSelection().toJSON())\n        // console.log('onChange selectionAfter2', editorState.getSelection().toJSON())\n        this.setState({ editorState: newState}, () => {\n\n          // console.log('onChange selectionAfter hook',  window.getSelection(), window.getSelection().anchorNode.parentNode.constructor, window.oldselection.anchorNode === window.getSelection().anchorNode)\n          // let range = document.createRange();\n          // range.setStart(window.getSelection().anchorNode, 1);\n          // window.getSelection().removeAllRanges();\n          // window.getSelection().addRange(range)\n        })\n      } else {\n        newState = editorState\n        this.setState({ editorState: newState})\n      }\n      this.props.updateTree(this.props.pipeHelper.tree)\n    }\n\n    this.refresh = async () => {\n      const newContentState = await this.props.pipeHelper.updateDraft(this.state.editorState.getCurrentContent())\n      const newState = EditorState.set(this.state.editorState, {currentContent: newContentState}); //, selection: selection2\n      this.setState({ editorState: newState})\n    }\n\n    this.getSelection = (editorState, changeType) => {\n      const contentState = editorState.getCurrentContent()\n\n      let posToRangesMap = []\n      for(let i = 0 ; i < contentState.getFirstBlock().getText().length; i++) {\n        const entityKey = contentState.getFirstBlock().getEntityAt(i)\n        const data = this.state.editorState.getCurrentContent().getEntity(entityKey).getData()\n        const map = []\n        if (data.j !== undefined) {\n          map[0] = this.props.pipeHelper.ranges[data.j].slice(-1)[0].slice(-1)[0]\n          map[1] = this.props.pipeHelper.ranges[data.j+1][0][0]\n        } else {\n          map[0] = this.props.pipeHelper.getRangeByPtr(data.block.from)\n          map[1] = this.props.pipeHelper.getRangeByPtr(data.block.to)\n        }\n        posToRangesMap[i] = map\n      }\n      posToRangesMap[posToRangesMap.length] = [this.props.pipeHelper.ranges.slice(-1)[0].slice(-1)[0].slice(-1)[0]]\n      posToRangesMap[-1] = [null, this.props.pipeHelper.ranges[0][0][0]]\n\n\n      const selection = window.getSelection()\n      let focusTextOffset = window.getSelection().focusOffset\n      let [focusOffset, focusLayer] = dataByNode(selection.focusNode, contentState)\n      if (focusOffset === false) {\n        if (editorState.getSelection().getFocusOffset() === 0) {\n          focusOffset = -1\n          focusTextOffset = 1\n        } else {\n          focusOffset = contentState.getFirstBlock().getText().length\n          focusTextOffset = 0\n        }\n      }\n\n      let anchorTextOffset = window.getSelection().anchorOffset\n      let [anchorOffset, anchorLayer] = dataByNode(selection.anchorNode, contentState)\n      if (anchorOffset === false) {\n        if (editorState.getSelection().getAnchorOffset() === 0) {\n          anchorOffset = -1\n          anchorTextOffset = 1\n        } else {\n          anchorOffset = contentState.getFirstBlock().getText().length\n          anchorTextOffset = 0\n        }\n      }\n\n      console.log('cursor1', selection.focusNode, focusOffset, focusTextOffset, selection.anchorNode, anchorOffset, anchorTextOffset)\n\n      let startOffset, endOffset, startTextOffset, endTextOffset, startOffsetData, endOffsetData, startOffsetActual, endOffsetActual, startLayer, endLayer\n      if (focusOffset > anchorOffset || (focusOffset === anchorOffset && focusTextOffset > anchorTextOffset )) {\n        console.log('cursor swap')\n        startOffset = anchorOffset\n        endOffset = focusOffset\n        startTextOffset = anchorTextOffset\n        endTextOffset = focusTextOffset\n        startLayer = anchorLayer\n        endLayer = focusLayer\n      } else {\n        startOffset = focusOffset\n        endOffset = anchorOffset\n        startTextOffset = focusTextOffset\n        endTextOffset = anchorTextOffset\n        startLayer = focusLayer\n        endLayer = anchorLayer\n      }\n\n      let startRange, endRange\n\n      startRange = posToRangesMap[startOffset][startTextOffset]\n      endRange = posToRangesMap[endOffset][endTextOffset]\n\n      if (startOffset === endOffset && startTextOffset === endTextOffset) {\n        if (changeType === 'backspace-character') {\n          if (startTextOffset === 1) {\n            startRange = posToRangesMap[startOffset][0]\n          } else {\n            startRange = posToRangesMap[startOffset - 1][0]\n            endRange = posToRangesMap[startOffset - 1][1]\n          }\n        }\n        else if (changeType === 'delete-character') {\n          if (startTextOffset === 1) {\n            startRange = posToRangesMap[startOffset + 1][0]\n            endRange = posToRangesMap[startOffset + 1][1]\n          } else {\n            endRange = posToRangesMap[startOffset][1]\n          }\n        }\n      }\n      console.log('cursor2 window', startRange, endRange, startOffset, endOffset, startTextOffset, endTextOffset)\n\n      return {startRange, endRange, startOffset, endOffset,\n        layer: startLayer\n      }\n\n      if (startTextOffset === 1) {\n        startOffset ++\n        startTextOffset = 0\n        if (startOffsetData.j !== undefined) {\n          startOffsetActual = startOffsetData.j + 1\n        }\n      } else {\n        startTextOffset = -1\n        if (startOffsetData.j !== undefined) {\n          startOffsetActual = startOffsetData.j\n        }\n      }\n\n      if (endTextOffset === 1) {\n        endOffset ++\n        endTextOffset = 0\n        if (endOffsetData.j !== undefined) {\n          endOffsetActual = endOffsetData.j + 1\n        }\n      } else {\n        endTextOffset = -1\n        if (endOffsetData.j !== undefined) {\n          endOffsetActual = endOffsetData.j\n        }\n      }\n\n      console.log('cursor2', startOffset, startTextOffset, endOffset, endTextOffset, selection)\n      if (startOffsetData.block.new) { //&& startOffset>0 && contentState.getEntity(contentState.getFirstBlock().getEntityAt(startOffset - 1)).getData().j === undefined\n        startRange = this.props.pipeHelper.getRangeByPtr(startTextOffset === -1 ? startOffsetData.block.from : startOffsetData.block.to)\n        // startOffsetActual = undefined\n      } else {\n        const startRanges = this.props.pipeHelper.ranges[startOffsetActual].slice(startTextOffset)[0]\n        if (startRanges.find(range => range.block.condition !== startRanges[0].block.condition)) { debugger}\n        startRange = startRanges.slice(startTextOffset)[0]\n      }\n\n      if (endOffsetData.block.new) { //&& endOffset<contentState.getFirstBlock().getText().length-1 && contentState.getEntity(contentState.getFirstBlock().getEntityAt(endOffset + 1)).getData().j === undefined\n        endRange = this.props.pipeHelper.getRangeByPtr(endTextOffset === -1 ? endOffsetData.block.from : endOffsetData.block.to)\n        // endOffsetActual = undefined\n      } else {\n        const endRanges = this.props.pipeHelper.ranges[endOffsetActual].slice(endTextOffset)[0]\n        if (endRanges.find(range => range.block.condition !== endRanges[0].block.condition)) { debugger}\n        endRange = endRanges.slice(endTextOffset)[0]\n      }\n\n      if (startOffsetData.block.condition !== endOffsetData.block.condition) { debugger }\n      // console.log('selection window', window.getSelection(), startOffsetActual, endOffsetActual, startRangeI, endRangeI, startRange, endRange, startRange === endRange)\n      console.log('cursor2 window', startOffsetData.block.new, startOffsetActual, startRange, endRange, startOffsetActual, endOffsetActual)\n      return {startRange, endRange,\n        // startOffset: startOffsetActual, endOffset: endOffsetActual,\n        layer: startOffsetData.block.condition\n      }\n    }\n\n    this.onCopy = (a) => {\n      debugger\n    }\n\n    this.onFocus = (e) => {\n      console.log('draft onfocus')\n    }\n\n    this.onBlur = (e) => {\n      console.log('draft onblur')\n    }\n\n    this.logState = () => {\n      const content = this.state.editorState.getCurrentContent();\n      console.log(convertToRaw(content));\n      console.log(JSON.stringify(convertToRaw(content)));\n    };\n\n    this.onKeyDown = async (e) => {\n      console.log(`key: ${e.key}`)\n      if (27 === e.keyCode) { // esc\n        e.preventDefault()\n        e.stopPropagation()\n\n        let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n        let contentState = this.state.editorState.getCurrentContent()\n        let blockKey = contentState.getFirstBlock().getKey()\n        let key = contentState.getFirstBlock().getEntityAt(focusOffset)\n        // let data = this.state.editorState.getCurrentContent().getEntity(key).getData()\n\n        // let newContentState = contentState.mergeEntityData(key, {activeSuggest: true})\n        let targetRange = new SelectionState({\n          anchorKey: blockKey,\n          anchorOffset: focusOffset,\n          focusKey: blockKey,\n          focusOffset: focusOffset,\n        });\n        let newContent = Modifier.applyEntity(contentState, targetRange, key);\n        let newState = EditorState.push(this.state.editorState, newContent, 'apply-entity');\n        this.onChange(EditorState.forceSelection(newState, targetRange))\n\n        this.setActiveSuggest(null)\n      }\n      else if ('s' === e.key && e.metaKey) {\n        ReactGA.event({\n          category: 'User',\n          action: 'save pipe'\n        });\n        e.preventDefault()\n        e.stopPropagation()\n        const content = this.state.editorState.getCurrentContent();\n        if (content.getBlockMap().count() > 1) {\n          alert('Editor error: block count more then 1')\n        } else {\n\n\n          // let newPipe = this.props.pipeHelper.fromDraft(this.state.editorState.getCurrentContent(), this.props.model.currentLayer)\n          const pipesToCommit = this.props.model.pipeSearch.changedPipes()\n          if (pipesToCommit.length > 0) {\n            const commitMsg = prompt(`pipes to commit: ${pipesToCommit.map(pipe => `\\n- ${pipe.desc}`).join('')}`)\n            if (commitMsg) {\n              this.props.vcs.commit(pipesToCommit, commitMsg)\n              this.props.controller.setActiveVM(this.props.pipeHelper.vm)\n            }\n          }\n          // this.setState({pipeHelper: null})\n        //   let context = new Context()\n        //   let pipeHelper = new PipeHelper(newPipe, new VM(context))\n        //   let state = this.pipeHelper.toDraft(decorator)\n        //\n        //   this.setState({\n        //     pipeHelper: pipeHelper,\n        //     editorState: state,\n        //     focusOffset: this.state.editorState.getSelection().getFocusOffset()})\n        }\n      } else if ('/' === e.key && e.ctrlKey){\n        e.preventDefault()\n        e.stopPropagation()\n        let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n        let contentState = this.state.editorState.getCurrentContent()\n        let blockKey = contentState.getFirstBlock().getKey()\n        let key = contentState.getFirstBlock().getEntityAt(focusOffset)\n        // let data = this.state.editorState.getCurrentContent().getEntity(key).getData()\n\n        // let newContentState = contentState.mergeEntityData(key, {activeSuggest: true})\n        let targetRange = new SelectionState({\n          anchorKey: blockKey,\n          anchorOffset: focusOffset,\n          focusKey: blockKey,\n          focusOffset: focusOffset,\n        });\n        let newContent = Modifier.applyEntity(contentState, targetRange, key);\n        let newState = EditorState.push(this.state.editorState, newContent, 'apply-entity');\n\n        this.lastSelection = this.getSelection(this.state.editorState, 'delete-character')\n        this.onChange(newState)\n        // Entity.replaceData(key, {activeSuggest: true})\n       this.setActiveSuggest(key)\n      } else if ('e' === e.key && e.ctrlKey) {\n        ReactGA.event({\n          category: 'User',\n          action: 'insert evaluation'\n        });\n        e.preventDefault()\n        e.stopPropagation()\n        const str = prompt(\"Expresion to insert\")\n        const value = eval(str)\n        // this.setRangeHints(this.state.editorState)\n        let content = this.state.editorState.getCurrentContent()\n        let contentStateWithEntity = content.createEntity('TOKEN', 'IMMUTABLE', {atom: [value], inserted: true, vm: new VM(value, this.props.model.currentVM, List([]))}) //content.createEntity\n        const newEntityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n        let blockKey = content.getFirstBlock().getKey()\n        let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n        let targetRange = new SelectionState({\n          anchorKey: blockKey,\n          anchorOffset: focusOffset,\n          focusKey: blockKey,\n          focusOffset: focusOffset,\n        });\n        let newContent = Modifier.insertText(contentStateWithEntity, targetRange, '-', undefined, newEntityKey);\n        this.props.pipeHelper.fromDraft(newContent, this.props.model.currentLayer || undefined, this.getSelection(this.state.editorState, 'insert-characters'))\n        const newContentState = await this.props.pipeHelper.updateDraft(this.state.editorState.getCurrentContent())\n        const newState = EditorState.set(this.state.editorState, {currentContent: newContentState})\n        this.setState({ editorState: newState})\n      }else if ('i' === e.key && e.ctrlKey) {\n        ReactGA.event({\n          category: 'User',\n          action: 'insert pipe'\n        });\n        e.preventDefault()\n        e.stopPropagation()\n        // this.setRangeHints(this.state.editorState)\n        let content = this.state.editorState.getCurrentContent()\n        let contentStateWithEntity = content.createEntity('TOKEN', 'IMMUTABLE', {atom: bypass, inserted: true, vm: new VM(bypass, this.props.model.currentVM, List([]))}) //content.createEntity\n        const newEntityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n        let blockKey = content.getFirstBlock().getKey()\n        let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n        let targetRange = new SelectionState({\n          anchorKey: blockKey,\n          anchorOffset: focusOffset,\n          focusKey: blockKey,\n          focusOffset: focusOffset,\n        });\n        let newContent = Modifier.insertText(contentStateWithEntity, targetRange, '-', undefined, newEntityKey);\n        this.props.pipeHelper.fromDraft(newContent, this.props.model.currentLayer || undefined, this.getSelection(this.state.editorState, 'insert-characters'))\n        const newContentState = await this.props.pipeHelper.updateDraft(this.state.editorState.getCurrentContent())\n        const newState = EditorState.set(this.state.editorState, {currentContent: newContentState})\n        this.setActiveSuggest(newEntityKey)\n        this.setState({ editorState: newState})\n      }\n      else {\n        // this.rangeControlRef.onKeyDown(e)\n      }\n    }\n    this.storeRangeControlRef = this.storeRangeControlRef.bind(this);\n    this.setDomEditorRef = ref => {\n      this.domEditor = ref;\n    }\n    // this.pushContent = (content) => {\n    //   var newState = EditorState.push(this.state.editorState, content, 'insert-characters');\n    //   this.setState({editorState: newState})\n    // }\n    this.changePipe = async (pipe) => {\n      let content = this.state.editorState.getCurrentContent()\n      let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n      const entityKey = content.getFirstBlock().getEntityAt(focusOffset)\n      const data = this.state.editorState.getCurrentContent().getEntity(entityKey).getData()\n      if (data.block.new) {\n        data.block.content[data.i] = pipe\n      } else {\n        let newEntityKey = Entity.create('TOKEN', 'IMMUTABLE', {\n          atom: pipe,\n          vm: new VM(pipe, this.props.model.currentVM, List([])),\n          zaza: 2\n        })\n        let blockKey = content.getFirstBlock().getKey()\n        let targetRange = new SelectionState({\n          anchorKey: blockKey,\n          anchorOffset: focusOffset,\n          focusKey: blockKey,\n          focusOffset: focusOffset + 1,\n        });\n        content = Modifier.applyEntity(content, targetRange, newEntityKey);\n        this.props.pipeHelper.fromDraft(content, this.props.model.currentLayer || undefined, this.lastSelection)\n      }\n      const newContentState = await this.props.pipeHelper.updateDraft(content)\n      const newState = EditorState.set(this.state.editorState, {currentContent: newContentState}); //, selection: selection2\n      this.setState({ editorState: newState})\n    }\n\n    this.setActiveSuggest = (ptr) =>{\n      this.setState({activeSuggest: ptr})\n    }\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  handleKeyCommand(command) {\n    console.log('command')\n    console.log(command)\n    // this.setRangeHints(this.state.editorState) // for deletion\n    if (command === 'split-block') {\n      // Perform a request to save your contents, set\n      // a new `editorState`, etc.\n      let blockKey = this.state.editorState.getCurrentContent().getFirstBlock().getKey()\n      let focusOffset = this.state.editorState.getSelection().getFocusOffset()\n      let targetRange = new SelectionState({\n        anchorKey: blockKey,\n        anchorOffset: focusOffset,\n        focusKey: blockKey,\n        focusOffset: focusOffset,\n      });\n      let newContent = Modifier.insertText(this.state.editorState.getCurrentContent(), targetRange, \"\\n\");\n      let newState = EditorState.push(this.state.editorState, newContent, 'insert-characters');\n      // this.setState({editorState: newState})\n      this.onChange(EditorState.forceSelection(newState, new SelectionState({\n        anchorKey: blockKey,\n        anchorOffset: focusOffset+1,\n        focusKey: blockKey,\n        focusOffset: focusOffset+1,\n      })))\n\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n  // async componentDidMount() {\n  //   await fetch('/manifest.json')\n  //   console.log('mount')\n  // }\n\n  componentDidMount() {\n    this.updateState()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props !== prevProps) {\n      this.updateState();\n    }\n  }\n\n  async updateState(){\n    let pipeHelper = this.props.pipeHelper\n    // }\n    let decorator = getDecorator({model: this.props.model, controller: this.props.controller, pipeHelper: pipeHelper})\n    let state = await pipeHelper.toDraft(decorator)\n\n    let offset\n    if (this.state.currentVM && this.state.currentVM.treeId() === this.props.model.currentVM.treeId()){\n      offset = this.state.editorState.getSelection().getFocusOffset()\n    } else {\n      offset = 0\n    }\n\n    let blockKey = state.getCurrentContent().getFirstBlock().getKey()\n    let stateWithFocus = EditorState.forceSelection(state, new SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: offset,\n      focusKey: blockKey,\n      focusOffset: offset,\n    }))\n\n    this.setState({ editorState: stateWithFocus })\n  }\n\n  storeRangeControlRef(ref) {\n    this.rangeControlRef = ref\n  }\n\n  outGoingDepsNode(){\n    let treePath = this.props.model.currentVM.parent.treeId().concat('origins').concat(List(this.props.model.currentVM.origin))\n    let depsNode = this.props.pipeHelper.tree.getIn(treePath)\n    return depsNode\n  }\n\n  inComingDepsNodes(skipPipes){\n    let treePath = this.props.model.currentVM.treeId().concat('origins')\n    let node = this.props.pipeHelper.tree.getIn(treePath)\n    if (!node) return\n    return node.filter((v, k)=> k.size === 1)\n  }\n\n  render() {\n    if (!this.state.editorState) return <div>loading</div>\n    // let contextPipeKey = [this.props.model.currentVM.context, this.props.model.currentPipe]\n    let treeId = this.props.model.currentVM.treeId()\n    // let input =  this.props.pipeHelper.pipeInput.getIn(contextPipeKey, {})\n    let pushed = this.props.pipeHelper.tree.getIn(treeId.concat('pushed'))\n    // let deps = this.props.pipeHelper.pullMap.getIn(contextPipeKey)\n    // let pulledBy = this.props.pipeHelper.pulledBy.getIn(contextPipeKey)\n    const currentPipeResult = this.props.pipeHelper.tree.getIn(treeId.concat('result'))\n    const outGoingDepsNode = this.outGoingDepsNode()\n    const inComingDepsNodes = this.inComingDepsNodes(outGoingDepsNode?.keySeq()?.toArray())\n    const sidelinks = (inComingDepsNodes || Map()).map((values, pipeList) => {\n      const pipeLink = pipeList.first()\n      let treePath2 = this.props.model.currentVM.treeId().concat('origins').concat(pipeList)\n      let depsNode = this.props.pipeHelper.tree.getIn(treePath2)\n\n      const args = depsNode.map((resolvedNode, requestedPipe)=>{\n        if (resolvedNode.size > 1) {\n          throw new Error(\"tree structure faulure\")\n        }\n        let resolvedPipe = resolvedNode.keySeq().first()\n        let treeIds = resolvedNode.getIn([resolvedPipe])\n\n        let localResolve = this.props.pipeHelper.pipe.getDep([], requestedPipe) && []\n        if (!localResolve) localResolve = this.props.pipeHelper.pipe.getDep([this.props.pipeHelper.pipe], requestedPipe) && [this.props.pipeHelper.pipe]\n\n        return <DepControl key={Registry.getId(requestedPipe)}\n                           pipeHelper={this.props.pipeHelper}\n                           requestedPipe={requestedPipe}\n                           resolvedPipe={resolvedPipe}\n                           treeIds={treeIds}\n                           model={this.props.model}\n                           controller={this.props.controller}\n                           localResolve={localResolve}\n                           getOrigin={ () => { return [pipeLink] }}\n        />\n      }).toSeq().toArray()\n\n      return <div><u onClick={() => {\n        let tpath = treeId.concat(pipeLink).concat('vm')\n        let vm = this.props.pipeHelper.tree.getIn(tpath)\n        this.props.controller.setActiveVM(vm)\n      }}>{pipeLink.desc}</u>({args})</div>\n    }).toSeq().toArray()\n\n    return (\n        <div onKeyDown={this.onKeyDown}>\n\n          {\n            pushed && <div>\n                PUSHED:\n                <div className=\"pipe-row\">\n                  <Inspector\n                      data={pushed}/>\n                </div>\n              </div>\n\n          }\n\n          {/*{*/}\n            {/*deps && <div>*/}\n            {/*PULLED:*/}\n            {/*{ deps.map((d) => {*/}\n              {/*return <div className=\"pipe-row\">*/}\n                  {/*<u onClick={() => {*/}\n                    {/*this.props.controller.setActivePipe(d)*/}\n                  {/*}}>{d.desc}</u>*/}\n                  {/*<ObjectInspector*/}\n                      {/*data={this.props.model.currentVM._toValue(this.props.pipeHelper.pipeInput.getIn([this.props.model.currentVM.context, d], {}).result)}/>*/}\n                {/*</div>*/}\n            {/*})}*/}\n          {/*</div>*/}\n          {/*}*/}\n          <PipeName desc={this.props.model.currentVM.pipe.desc} controller={this.props.controller} />\n          {\n            this.props.model.currentVM.pipe.requires === pipeRequires.NOTHING && <span className=\"underline\" onClick={e=> {this.props.model.currentVM.pipe.requires=pipeRequires.VALUE;this.props.controller.reload()}}>nothing</span>\n          }\n          {\n            this.props.model.currentVM.pipe.requires === pipeRequires.VALUE && <span className=\"underline\" onClick={e=> {this.props.model.currentVM.pipe.requires=pipeRequires.PIPE;this.props.controller.reload()}}>value</span>\n          }\n          {\n            this.props.model.currentVM.pipe.requires === pipeRequires.PIPE && <span className=\"underline\" onClick={e=> {this.props.model.currentVM.pipe.requires=pipeRequires.NOTHING;this.props.controller.reload()}}>pipe</span>\n          }\n          (\n          {\n            outGoingDepsNode && <div>\n              {(outGoingDepsNode||Map()).map((resolvedNode, requestedPipe)=>{\n                if (resolvedNode.size > 1) {\n                  debugger\n                  throw new Error(\"tree structure faulure\")\n                }\n                let resolvedPipe = resolvedNode.keySeq().first()\n                let treeIds = resolvedNode.getIn([resolvedPipe])\n                let localResolve = this.props.pipeHelper.pipe.getDep([], requestedPipe) && []\n                if (!localResolve) localResolve = this.props.pipeHelper.pipe.getDep([this.props.pipeHelper.pipe], requestedPipe) && [this.props.pipeHelper.pipe]\n\n                return <DepControl pipeHelper={this.props.pipeHelper} requestedPipe={requestedPipe} resolvedPipe={resolvedPipe} treeIds={treeIds} model={this.props.model} controller={this.props.controller} localResolve={localResolve}\n                                   getOrigin={ () => { return [] }}\n                                   key={Registry.getId(requestedPipe)}\n                />\n              }).toSeq().toArray()}\n            </div>\n          }\n          )\n\n          {\n            inComingDepsNodes && inComingDepsNodes.length > 0 && <div>\n              SIDELINKS:\n              {sidelinks}\n            </div>\n          }\n\n\n          <hr/>\n          <Editor editorState={this.state.editorState}\n                  customStyleMap={styleMap}\n                  onChange={this.onChange}\n                  onCopy={this.onCopy}\n                  onFocus={this.onFocus}\n                  onBlur={this.onBlur}\n                  handlePastedText={this.handlePastedText}\n                  handleBeforeInput={this.handleBeforeInput}\n                  handleKeyCommand={this.handleKeyCommand}\n                  ref={this.setDomEditorRef}\n                  // blockRendererFn={myBlockRenderer}\n                  readOnly={this.state.activeSuggest !== null || this.state.readOnly}\n          />\n          <hr/>\n          {this.state.inspector ?\n              <div>\n              <u onClick={()=>this.setState({inspector: false})} style={{float: \"right\"}}>Inspector</u>\n              <Inspector data={currentPipeResult}/>\n              </div>\n              :\n              <div>\n                <u onClick={()=>this.setState({inspector: true})} style={{float: \"right\"}}>HTML</u>\n                <HtmlInspector body={currentPipeResult} refresh={this.props.controller.reload2}/>\n                {/*<div dangerouslySetInnerHTML={{__html: currentPipeResult}}/>*/}\n              </div>\n          }\n          {this.state.ifElse ?\n              <div>\n              <u onClick={()=>this.setState({ifElse: false}, ()=> this.props.controller.reload())}>if else</u>\n              </div>\n              :\n              <div>\n                <u onClick={()=>this.setState({ifElse: true}, ()=> this.props.controller.reload())}>plain</u>\n              </div>\n          }\n          {\n            rootVM.states.size > 0 && <div>\n              <button onClick={() => {\n                rootVM.runAllStates()\n                this.refresh()\n              }}>\n                Resume\n              </button>\n            </div>\n          }\n          {/*{ pulledBy && <div>*/}\n            {/*pulled by:*/}\n            {/*{ pulledBy.map((d) => {*/}\n              {/*return <div className=\"pipe-row\">*/}\n                {/*<u onClick={() => {*/}\n                  {/*this.props.controller.setActivePipe(d)*/}\n                {/*}}>{d.desc}</u>*/}\n                {/*<ObjectInspector*/}\n                    {/*data={this.props.model.currentVM._toValue(this.props.pipeHelper.pipeInput.getIn([this.props.model.currentVM.context, d], {}).result)}/>*/}\n              {/*</div>*/}\n            {/*})}*/}\n          {/*</div>}*/}\n\n          {/*<RangeControl pipeHelper={this.state.pipeHelper} editorState={this.state.editorState} focusOffset={this.state.focusOffset}  selfRef={this.storeRangeControlRef} textide={this} />*/}\n        </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport {CompositeDecorator} from \"draft-js\"\nimport PipeSuggest from \"./pipe-suggest\"\nimport DepControl from \"./depControl\"\nimport Inspector from 'react-inspector';\nimport { tmpPipe} from \"../core/base\"\nimport {VM} from \"../core/vm\"\nimport Registry from '../core/registry'\nimport { List, Map } from \"immutable\"\nimport stc from 'string-to-color'\n\nconst style = {\n  backgroundColor: '#eee'\n}\n\nconst IfElseView = (props) => {\n  return <React.Fragment>\n    {props.ifElse ? <div contentEditable={false}>\n      {props.items.map(item => {\n        if (item.type) {\n          const formattedCondition = item.type === 'if' ? ` (${item.condition.desc})` : ''\n          return <div className={`secondary-flow ident-${item.level}`}><strong>{item.type}</strong>{formattedCondition}</div>\n        } else {\n          const identClass = item.first ? `ident-${item.level}` : ''\n          return <div className={`secondary-flow dib ${identClass}`}>{item.block.content[item.i]}</div>\n        }\n      })}\n    </div> : <span contentEditable={false} className=\"separator\">&#8201;</span>}\n  </React.Fragment>\n}\n\nconst TokenSpan = (props) => {\n\n  // const style = getDecoratedStyle(\n  //     props.contentState.getEntity(props.entityKey).getMutability()\n  // );\n  const data = props.contentState.getEntity(props.entityKey).getData()\n  const style2 = data.block.new ? {} : style\n  const style3 = data.block.condition ? {color: stc(data.block.condition.getId())} : {}\n  return (\n      <React.Fragment>\n        {data.attrs.prefix && IfElseView({items: data.attrs.prefix, ifElse: props.model.textide.state.ifElse})}\n        <span className={`colored atom block-layer-${Registry.getId(data.block.condition)} block-id-${Registry.getId(data.block)} block-index-${data.i} ident-${props.model.textide.state.ifElse && data.attrs.level}`} data-offset-key={props.offsetkey} data-entity-key={props.entityKey}\n              style={{...style2, ...style3}}>\n              {props.children}\n            </span>\n        {data.attrs.suffix && IfElseView({items: data.attrs.suffix, ifElse: props.model.textide.state.ifElse})}\n      </React.Fragment>\n  );\n};\n\nconst NestedPipe = (props) => {\n  const data = props.contentState.getEntity(props.entityKey).getData()\n  console.log(`nested pipe render++=============================== ${props.entityKey}`)\n  console.log('nested pipe origin:', data.block)\n  let treePath = data.vm.treeId().concat('origins').concat(List([data.i, data.block]))\n  let depsNode = props.pipeHelper.tree.getIn(treePath)\n  let input = <div style={{color: '#777'}}>\n    {(depsNode||Map()).map((resolvedNode, requestedPipe)=>{\n      if (resolvedNode.size > 1) {\n        throw new Error(\"tree structure faulure\")\n      }\n      let resolvedPipe = resolvedNode.keySeq().first()\n      let treeIds = resolvedNode.getIn([resolvedPipe])\n\n      let localResolve = props.pipeHelper.pipe.getDep([data.i, data.block], requestedPipe) && [data.i, data.block]\n\n      return <DepControl key={Registry.getId(requestedPipe)}\n                         pipeHelper={props.pipeHelper}\n                         requestedPipe={requestedPipe}\n                         resolvedPipe={resolvedPipe}\n                         treeIds={treeIds}\n                         model={props.model}\n                         controller={props.controller}\n                         localResolve={localResolve}\n                         getOrigin={() => {\n                           let data1 = props.contentState.getEntity(props.entityKey).getData()\n                           return [data1.i, data1.block]\n                          }\n                         }\n      />\n    }).toSeq().toArray()}\n  </div>\n\n  if (props.model.textide.state.activeSuggest === props.entityKey) {\n    return (\n        <div>\n          {input}\n          <span className={`block-layer-${Registry.getId(data.block.condition)} block-id-${Registry.getId(data.block)} block-index-${data.i}`} style={data.pipe.new || data.block.condition === tmpPipe ? {} : style}>\n            {props.children}\n          </span>\n          <PipeSuggest pipeSearch={props.model.pipeSearch}\n                       autoFocus={true}\n                       controller={props.controller}\n                       model={props.model}\n                       onFocusOut={() => {props.controller.setActiveSuggest(null)}}\n                       onChange={async (event, {suggestion, inlineCreated}) => {\n                         event.preventDefault()\n                         event.stopPropagation()\n                          await props.controller.changeActiveSuggest(suggestion)\n                         if (inlineCreated) {\n                           const newVM = props.pipeHelper.tree.getIn(props.model.currentVM.treeId().concat(List([data.i, data.block])).concat(suggestion).concat('vm') )\n                           props.controller.setActiveVM(newVM)\n                         } else {\n                           props.controller.reload()\n                         }\n                       }}\n          />\n        </div>)\n  } else {\n    let tpath = data.vm.treeId().concat([List([data.i, data.block]), data.atom])\n    let result = props.pipeHelper.tree.getIn(tpath.concat('result'))\n    return (\n        <div>\n          <div className=\"pipe-wrapper\">\n            <span\n                className={`block-layer-${Registry.getId(data.block.condition)} block-id-${Registry.getId(data.block)} block-index-${data.i}`}\n                data-entity-key={props.entityKey}\n                style={data.pipe.new || data.block.condition === tmpPipe ? {} : style}>{props.children}</span>\n            <div className=\"pipe-info\" contentEditable={false} style={{color: 'black'}}>\n              <div className=\"pipe-row inline\">\n                <u onClick={() => {\n                  const data1 = props.contentState.getEntity(props.entityKey).getData()\n                  let tpath = data1.vm.treeId().concat([List([data1.i, data1.block]), data1.atom]).concat('vm')\n                  let vm = props.pipeHelper.tree.getIn(tpath)\n                  props.controller.setActiveVM(vm)\n                }}>{data.atom.desc}</u>(\n                {input}\n                 ) = <Inspector data={result} expandLevel={0}/>\n              </div>\n            </div>\n            {/*<div contentEditable={false}>1<span>lala</span></div>*/}\n            {/*<input onKeyDown={(e) => {e.preventDefault(); e.stopPropagation()}}/>*/}\n          </div>\n        </div>\n    );\n  }\n};\n\nconst ConstView = (props) => {\n  const data = props.contentState.getEntity(props.entityKey).getData()\n  const style2 = data.block.new ? {} : style\n  const style3 = data.block.condition ? {color: stc(data.block.condition.getId())} : {}\n  return (\n      <React.Fragment>\n        {data.attrs.prefix && IfElseView({items: data.attrs.prefix, ifElse: props.model.textide.state.ifElse})}\n        <span className={`colored atom block-layer-${Registry.getId(data.block.condition)} block-id-${Registry.getId(data.block)} block-index-${data.i} ident-${props.model.textide.state.ifElse && data.attrs.level}`} data-offset-key={props.offsetkey} data-entity-key={props.entityKey}\n              style={{...style2, ...style3}}>\n              {props.children}\n          <span className=\"dib\" contentEditable={false} style={{color: 'black'}}>\n            <Inspector data={data.atom} expandLevel={0}/>\n          </span>\n            </span>\n      </React.Fragment>\n  );\n};\n\nconst strategyChar = function(contentBlock, callback, contentState) {\n  // console.log('ranges')\n  // console.log(callback)\n  // console.log(contentState.toJS())\n  // console.log(contentBlock.toJS())\n  contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        let data = contentState.getEntity(entityKey).getData()\n        // if (data.block && data.block.new){\n        //   return false;\n        // }\n        return 'string' === typeof data.atom\n      },\n      // callback\n      (start, end) => {\n        // console.log('start')\n        // console.log(start)\n        // console.log(end)\n        callback(start, end)\n      }\n  );\n}\n\nconst strategyNestedPipe = function(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        let data = contentState.getEntity(entityKey).getData()\n        // if (data.block && 'tmp' === data.block.condition){\n        //   return false;\n        // }\n        return ('string' !== typeof data.atom) && !(data.atom instanceof Array)\n      },\n      // callback\n      (start, end) => {\n        callback(start, end)\n      }\n  );\n}\n\nconst strategyConst = function(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        let data = contentState.getEntity(entityKey).getData()\n\n        return data.atom instanceof Array\n      },\n      // callback\n      (start, end) => {\n        // console.log('start')\n        // console.log(start)\n        // console.log(end)\n        callback(start, end)\n      }\n  );\n}\n\nconst getDecorator = (props) => {\n  return new CompositeDecorator([\n    {\n      strategy: strategyChar,\n      component: TokenSpan,\n      props: props\n    },\n    {\n      strategy: strategyNestedPipe,\n      component: NestedPipe,\n      props: props\n    },\n    {\n      strategy: strategyConst,\n      component: ConstView,\n      props: props\n    }\n  ])\n}\n\nexport default getDecorator\n","import React from \"react\"\n\nexport default class PipeName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      desc: props.desc,\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props !== prevProps) {\n      this.setState({desc: this.props.desc})\n    }\n  }\n\n  render() {\n    return <input value={this.state.desc}\n                  onChange={ e=> {this.setState({desc: e.target.value})}}\n                  onBlur={ e=> {this.props.controller.changeCurrentPipeDesc(e.target.value)}}\n    />\n  }\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function HtmlInspector({ body, refresh }) {\n  const ref = React.createRef();\n\n  useEffect(() => {\n    console.log(8888)\n    ref.current.addEventListener('submit', (e)=>{\n      e.preventDefault()\n      e.stopPropagation()\n      const data = Object.fromEntries(new FormData(e.srcElement))\n      window.postData = data\n      if (window.localStorageData) {\n        for (const [key, value] of Object.entries(window.localStorageData)) {\n          window.localStorage.setItem(key, JSON.stringify(value))\n        }\n      }\n      window.localStorageData = null\n      refresh()\n    })\n    // code to run after render goes here\n  }, []);\n\n  return (\n      <div ref={ref} dangerouslySetInnerHTML={{__html: body}}/>\n  );\n}\n","import FlakeId from \"flake-idgen\"\nimport baseX from \"base-x\"\nconst hashCode = function(s) {\n  var hash = 0, i, chr;\n  if (s.length === 0) return hash;\n  for (i = 0; i < s.length; i++) {\n    chr   = s.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\nlet code = ''\nif ('undefined' !== typeof navigator) code = navigator.userAgent + document.cookie;\nconst flakeIdGen = new FlakeId({id: hashCode(code )});\nconst base62 = baseX('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\nvar ids = new WeakMap()\n\nexport default class Registry {\n  static getId(object){\n    if (!object) return null\n\n    if (!ids.has(object)) {\n      ids.set(object, this.newId());\n    }\n\n    return ids.get(object);\n  }\n  static newId(){\n    return base62.encode(flakeIdGen.next())\n  }\n}\n","import {Pipe} from \"../pipe\"\nimport {VM} from \"../vm\"\nimport pipeRequires from \"../pipe-requires\"\nimport {rootVM} from \"../rootVm\"\nimport {Input} from \"./input\"\nimport {ExternalDep} from \"../external-dep\"\n\nconst localStorageKey = new Pipe([Input], {desc: 'localStorageKey', requires: pipeRequires.VALUE})\nconst localStorageGetDependency = new Pipe([], {desc: 'localStorageGetDependency', requires: pipeRequires.PIPE})\n\nconst localStorageGet = new Pipe([{\n  push: async (value, vm, origin) => {\n    vm.notifyPull(localStorageKey, localStorageGet)\n    const key = await new VM(localStorageKey, vm, origin).toValue()\n\n    const externalDep = ExternalDep.getInstance(localStorageGet, {key: key} )\n    let dep = vm.getDep(origin, externalDep, vm.treeId(), null, vm)\n    return await dep.toValue()\n  }\n}], {desc: 'localStorageGet'})\n\nconst localStorageGetInternal = new Pipe([{\n  push: async function(input, vm, origin){\n    const key = input.key\n    let value\n    console.log('getInternal1', window.localStorageData)\n    if (window.localStorageData && window.localStorageData[key]) {\n      value =  window.localStorageData[key]\n    } else {\n      value = JSON.parse(window.localStorage.getItem(key))\n    }\n    console.log('getInternal', value)\n    return value\n  }\n}], {desc: 'localStorageGetInternal'})\n\n\n// const localStorageSet = new Pipe([], {desc: 'localStorageSet', requires: pipeRequires.NOTHING})\nconst localStorageSet = new Pipe([{\n  push: async (input, vm, origin) => {\n    const value = await vm.toString(input)\n    const key = await new VM(localStorageKey, vm, origin).toValue()\n\n    const externalDep = ExternalDep.getInstance(localStorageSet, {key: key, value: value} )\n    let dep = vm.getDep(origin, externalDep, vm.treeId(), null, vm)\n    return await dep.toValue()\n  }\n}], {desc: 'localStorageSet'})\nconst localStorageSetResult = new Pipe([{\n  push: async function(input, vm, origin){\n    const key = input.key\n    const value = input.value\n    if (window.localStorageData && window.localStorageData[key]) return\n\n    window.localStorageData = {}\n    window.localStorageData[key]=value\n    return true\n  }\n}], {desc: 'localStorageSetResult', requires: pipeRequires.PIPE})\n\nexport {localStorageGetInternal, localStorageKey, localStorageGet, localStorageSet, localStorageGetDependency, localStorageSetResult}\n","export class Value {\n  constructor(value) {\n    this.value = value\n  }\n\n  toValue(){\n    return this.value\n  }\n\n  static toValue(input) {\n    return input instanceof Value ? input.toValue() : input\n  }\n}\n","import Override from './override'\nimport {Block} from \"./block\"\nimport {VM} from './vm'\n\nexport class Patch extends Block{\n  constructor(content, from, to, condition){\n    super(content)\n    this.from = from\n    this.to = to\n    this.condition = condition\n  }\n\n  async valid(parent, origin){\n    if (this.condition) {\n      let vm = new VM(this.condition, parent, [this.condition])\n      vm.notifyPull(this.condition, origin)\n      let result = await vm.toValue()\n      return Override.process(this.condition, result)\n    } else {\n      return true\n    }\n  }\n}\n","export class Ptr {\n  constructor(block, i){\n    this.block = block\n    this.i = i\n  }\n\n  static equals(a, b){\n    if (a && b ) {\n      return a.block === b.block && a.i === b.i\n    } else return false\n  }\n}\n","import {Patch} from './patch'\nimport { Pipe } from './pipe'\nimport {libPipes, tmpPipe} from \"./base\"\nimport {List, Set} from \"immutable\"\nimport PouchDB from \"pouchdb\"\nimport { ActivePipe } from '../core/active-pipe'\nimport {Ptr} from \"./ptr\"\nimport Registry from './registry'\nimport * as firebase from \"firebase\"\nimport pipeRequires from \"./pipe-requires\"\n\nconst getBlockByIdFromPipe = (pipe, patches, id) => {\n  if (pipe.id === id) return pipe\n  if (!patches[id]) {\n    patches[id] = new Patch()\n    patches[id].id = id\n  }\n\n  return patches[id]\n}\n\nclass VCS {\n\n  static changePipe(pipe, fromPtr, toPtr, content, condition){\n    if (!fromPtr || !toPtr) {\n      debugger\n      return\n    }\n    if (fromPtr.block === toPtr.block && fromPtr.i > toPtr.i ){\n      debugger\n      return\n    }\n    let patch = new Patch(content, fromPtr, toPtr, condition)\n    patch.new = true\n    pipe.addPatch(patch)\n    return patch\n  }\n\n  static cleanTmpPatches(pipe){\n    pipe.patches = pipe.patches.filter((patch) => {\n      if (!patch.new){\n        return patch\n      }\n      return false\n    })\n  }\n\n  static cleanTmpDeps(pipe){\n    pipe.deps = pipe.deps.filter((value, key) => {\n      return !(key.toArray()[1]||{}).new\n    })\n  }\n\n  static setDeps(pipe, block, inserted){\n    let i = 0\n    inserted.forEach(item => {\n      if (item.block) {\n        if (item.deps) {\n          pipe.deps = pipe.deps.set(List([i, block]), item.deps)\n        }\n      }\n      i++\n    })\n  }\n\n  constructor(revisionId){\n    this.revisionId = revisionId\n    this.pipesCache = {}\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n      });\n    }\n    this.db = firebase.firestore()\n  }\n\n\n  async auth(){\n    await firebase.auth().signInAnonymously()\n  }\n\n  uid() {\n    return firebase.auth().currentUser?.uid || 'test'\n  }\n\n  changesCollection(){\n    return this.db.collection(process.env.REACT_APP_VCS_COLLECTION_NAME)\n  }\n\n  commitsCollection(){\n    return this.db.collection(process.env.REACT_APP_VCS_COMMITS_COLLECTION_NAME)\n  }\n\n  async commit(pipes, commitMessage){\n    const commitId = Registry.newId()\n    await this.commitsCollection().doc(commitId).set({\n      id: commitId,\n      commitMessage,\n      authorId: this.uid()\n    })\n    for (const pipe of pipes) {\n      if (pipe.new) {\n        await this._savePipeContent(pipe, commitId)\n        await this._savePipeDesc(pipe, commitId)\n        await this._savePipeRequires(pipe, commitId)\n        await this._savePipeDeps(pipe, undefined, commitId)\n        pipe.new = false\n      }\n      await this._savePipePatches(pipe, commitId)\n      if (pipe.persistedPipe) {\n        if (pipe.persistedPipe.desc !== pipe.desc) {\n          await this._savePipeDesc(pipe, commitId)\n          pipe.persistedPipe.desc = pipe.desc\n        }\n        if (pipe.persistedPipe.requires !== pipe.requires) {\n          await this._savePipeRequires(pipe, commitId)\n          pipe.persistedPipe.requires = pipe.requires\n        }\n        if (!pipe.deps.equals(pipe.persistedPipe.deps)){\n          await this._updatePipeDeps(pipe, commitId)\n        }\n      }\n    }\n    return commitId\n  }\n\n  getActivePipe(id) {\n    const match = id.match(/^_l(.+)$/)\n    if (match) {\n      return libPipes[match[1]]\n    } else {\n      if (!this.pipesCache[id]) {\n        this.pipesCache[id] = new ActivePipe(this, id) ;\n      }\n      return this.pipesCache[id];\n    }\n  }\n\n  async getPipe(pipeId) {\n    let pipe\n    let patches = {}\n    const changes = await this.changesCollection()\n        .where(\"pipeId\", \"==\", pipeId)\n        .where('authorId', 'in', [this.uid(), ''])\n        .orderBy(\"id\")\n        .get()\n    changes.forEach(change => {\n      const data = change.data()\n      if (data.content) {\n        if (pipe) { debugger }\n        const content = this._deSerializeContent(data.content)\n        pipe = new Pipe(content)\n        pipe.id = pipeId\n      }\n      if (data.patch) {\n        const activePipe = this.getActivePipe(pipe.id)\n        let patch = getBlockByIdFromPipe(activePipe, patches, data.patch.id)\n        patch.content = this._deSerializeContent(data.patch.content)\n        patch.from = new Ptr(getBlockByIdFromPipe(activePipe, patches, data.patch.from.block_id), data.patch.from.i)\n        patch.to = new Ptr(getBlockByIdFromPipe(activePipe, patches, data.patch.to.block_id), data.patch.to.i)\n        patch.condition = data.patch.condition_id ? this.getActivePipe(data.patch.condition_id) : undefined\n        pipe.addPatch(patch)\n      }\n      if (data.desc) {\n        pipe.desc = data.desc\n      }\n      if (data.dep) {\n        const origin = this._deSerializeContent(data.dep.origin)\n        if (data.dep.depPipe) {\n          pipe.setDep(origin, this.getActivePipe(data.dep.requestedPipe), this.getActivePipe(data.dep.depPipe))\n        } else {\n          pipe.removeDep(origin, this.getActivePipe(data.dep.requestedPipe))\n        }\n      }\n      if (data.requires) {\n        pipe.requires = data.requires\n      }\n    })\n\n    return pipe\n  }\n\n  async _savePipeDesc(pipe, commitId) {\n    return await this._saveChange({\n      pipeId: pipe.getId(),\n      desc: pipe.desc,\n      commitId: commitId\n    })\n  }\n\n  async _savePipeRequires(pipe, commitId) {\n    return await this._saveChange({\n      pipeId: pipe.getId(),\n      requires: pipe.requires || pipeRequires.NOTHING,\n      commitId: commitId\n    })\n  }\n\n  async _savePipeContent(pipe, commitId) {\n    const data = {\n      pipeId: pipe.getId(),\n      content: this._serializeContent(pipe.content),\n      commitId: commitId\n    }\n    return await this._saveChange(data)\n  }\n\n  async _savePipePatches(pipe, commitId) {\n    for (const patch of pipe.patches) {\n      if (!patch.new) continue\n\n      const data = {\n        id: patch.getId(),\n        content: this._serializeContent(patch.content),\n        from: {\n          block_id: patch.from.block.getId(),\n          i: patch.from.i\n        },\n        to: {\n          block_id: patch.to.block.getId(),\n          i: patch.to.i\n        },\n        ...patch.condition && { condition_id: patch.condition.getId() }\n      }\n      await this._saveChange({\n        pipeId: pipe.getId(),\n        patch: data,\n        commitId: commitId\n      })\n      patch.new = false\n    }\n  }\n\n  async _savePipeDeps(pipe, persistedPipe, commitId) {\n    return pipe.deps.map(async (reqDep, origin) => {\n      const requestedPipe = reqDep.keySeq().first()\n      const depPipe = reqDep.get(requestedPipe)\n      if (persistedPipe && persistedPipe.getDep(origin, requestedPipe) === depPipe) return;\n\n      const data = {\n        pipeId: pipe.getId(),\n        dep: {\n          origin: this._serializeContent(origin).toJSON(),\n          requestedPipe: requestedPipe.getId(),\n          depPipe: depPipe.getId()\n        },\n        commitId: commitId\n      }\n      return await this._saveChange(data)\n    })\n  }\n\n  async _updatePipeDeps(pipe, commitId) {\n    // delete deps\n    pipe.persistedPipe.deps.map(async (reqDep, origin) => {\n      const requestedPipe = reqDep.keySeq().first()\n      if (!pipe.getDep(origin, requestedPipe)) {\n        const data = {\n          pipeId: pipe.getId(),\n          dep: {\n            origin: this._serializeContent(origin).toJSON(),\n            requestedPipe: requestedPipe.getId()\n          },\n          commitId: commitId\n        }\n        return await this._saveChange(data)\n      }\n    })\n\n    // create deps\n    this._savePipeDeps(pipe, pipe.persistedPipe, commitId)\n  }\n\n  _serializePatches(pipe, revisionId) {\n    return pipe.patches.map(patch => {\n      if (!patch.createdAt) patch.createdAt = Date.now()\n      if (!patch.revisionId) patch.revisionId = revisionId || this.revisionId\n      const data = {\n        id: patch.getId(),\n        content: this.serializeContent(patch.content),\n        from: {\n          block_id: patch.from.block.getId(),\n          i: patch.from.i\n        },\n        to: {\n          block_id: patch.to.block.getId(),\n          i: patch.to.i\n        },\n        revision_id: patch.revisionId,\n        created_at: patch.createdAt\n      }\n      if (patch.condition) {\n        if (!this._isPipePersisted(patch.condition)) {\n          this.commitPipe(patch.condition)\n        }\n        return {...data, condition_id: patch.condition.getId()}\n      }\n      return data\n    })\n  }\n\n  _serializeContent(content) {\n    return content.map(item => {\n      if (item instanceof Pipe) {\n        return item.getId()\n      } else return item;\n    })\n  }\n\n  _deSerializeContent(content) {\n    return content.map(item => {\n      if (typeof item === 'string') {\n        if ( item.length > 1 ) {\n          return this.getActivePipe(item)\n        } else {\n          return item\n        }\n      } else if (typeof item === 'number') {\n        return item\n      } else {\n        throw 'not implemented'\n      }\n    })\n  }\n\n  async _saveChange(data){\n    const id = Registry.newId()\n    await this.changesCollection().doc(id).set({id: id, authorId: this.uid(), ...data})\n  }\n}\n\nexport { VCS }\n","import { Pipe } from './pipe'\nimport { VCS } from './vcs'\nimport {Ptr} from \"./ptr\"\n\nexport class ActivePipe extends Pipe {\n  constructor(vcs, id) {\n    super(null)\n    this.vcs = vcs\n    this.id = id\n    this.loaded = false\n  }\n\n\n  async getPatches() {\n    await this.load()\n    return super.getPatches();\n  }\n\n  async load(){\n    if (this.loaded) return\n\n    const pipe = await this.vcs.getPipe(this.id)\n    this.persistedPipe = pipe\n    this.content = pipe.content\n    this.patches = pipe.patches\n    this.deps = pipe.deps\n    this.desc = pipe.desc\n    this.requires = pipe.requires\n    this.loaded = true\n\n    return this\n  }\n\n  isChanged(){\n    if (!this.loaded) return false\n    if (this.content !== this.persistedPipe.content) return true\n    if (this.desc !== this.persistedPipe.desc) return true\n    if(this.patches.length !== this.persistedPipe.patches.length) return true\n    for (let i = 0; i < this.patches.length; i++) {\n      if (Ptr.equals(this.patches[i], this.persistedPipe.patches[i])) return true\n    }\n    if (!this.deps.equals(this.persistedPipe.deps)) return true\n    if (!this.exports.equals(this.persistedPipe.exports)) return true\n\n    return false\n  }\n}\n/*\n{\n  revision: 'asd'\n  type: pipe\n  content: 'lala'\n}\n\n{\n  revision: 'sdfsd'\n  type: patch\n  from: {\n    blockId: 'asdasd',\n    i: 1.1\n  },\n  content:\n}\n\n{\n  pipe_id:\n  branch_id:\n  commits: [\n    {\n      type: pipe,\n      content:\n      commit_id:\n      branch_id:\n      time:\n    },\n    {\n      type: patch,\n      content:\n      commit_id:\n      branch_id:\n      time:\n    },\n\n  ]\n}\n\nbranch\n  id:\n  parent_id:\n\n*/\n","import React from 'react'\nimport './layers.css'\nimport Override from \"../core/override\"\nimport Registry from '../core/registry'\nimport {VM} from \"../core/vm\"\nimport {ActivePipe} from \"../core/active-pipe\"\nimport {Value} from \"../core/value\"\nimport stc from 'string-to-color'\n\nexport default class Layer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  componentDidMount() {\n    this.setLayers()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props !== prevProps) this.setLayers()\n  }\n\n  async setLayers(){\n    const layers = [...new Set((this.props.model.currentVM.pipe.layers || []).concat(\n        this.props.model.currentVM.pipe.patches.map(p => p.condition).filter(block => block)\n    ))]\n    for(let layer of layers) {\n      if (layer instanceof ActivePipe) await layer.load()\n    }\n    this.setState({layers})\n  }\n\n  render() {\n    if (!this.state.layers) return null\n\n    let treeId = this.props.model.currentVM.treeId()\n    let node = this.props.pipeHelper.tree.getIn(treeId)\n\n    return (\n        <div id=\"layers\" className=\"ma2\">\n          <h4>Layers</h4>\n          <ul className=\"layers\">\n            <li className={(this.props.model.currentLayer === null) ? \"active block-layer-null\" : \"block-layer-null\"}\n                onClick={(e) => {\n                  this.props.controller.setActiveLayer(undefined)\n                }}>\n              Default layer\n            </li>\n            {\n              this.state.layers.map((layer) => {\n                let result = node.getIn([layer, 'result'])\n                let layerValue = result instanceof Value ? result.value : result\n                let overrideValue = Override.process(layer, layerValue)\n                let isOverriden = !layerValue !== !overrideValue\n                let className = (this.props.model.currentLayer === layer) ? \"active\" : \"\"\n                className += ` block-layer-${Registry.getId(layer)}`\n                if (isOverriden) className += ' override'\n                return (<li key={layer.desc}\n                            className={className}\n                    >\n                      <input id={`layer-checkbox-${layer.desc}`} type=\"checkbox\" onChange={(e) => {\n                        this.props.controller.toggleLayer(layer, e.target.checked, layerValue)\n                      }} checked={!!overrideValue}/>\n                      <u onClick={(e) => {\n                        this.props.controller.setActiveLayer(layer, layerValue)\n                      }} style={{color: stc(layer.getId()) }}>\n                        {layer.desc}\n                      </u>\n                      &nbsp;\n                      <u onClick={() => {\n                        let tpath = this.props.model.currentVM.treeId().concat([layer])\n                        let vm = this.props.pipeHelper.tree.getIn(tpath.concat('vm'))\n                        if (!vm) {\n                          vm = new VM(layer)\n                        }\n                        this.props.controller.setActiveVM(vm)\n                      }\n                      }>\n                        link\n                      </u>\n                    </li>\n                )\n              })\n            }\n          </ul>\n          <style>\n            {'.block-layer-null { color: black }'}\n            {\n              this.state.layers.map((layer) => {\n                if (layer.color) {\n                  return `.block-layer-${Registry.getId(layer)} { color: ${layer.color} }`\n                }\n                return null\n              })\n            }\n            {\n              this.props.model.currentLayer && `.DraftEditor-root { color: ${this.props.model.currentLayer.color} }`\n            }\n          </style>\n        </div>\n    )\n  }\n}\n","import React from \"react\"\nimport {VM} from \"../core/vm\"\nimport {Set, List} from \"immutable\"\nimport {Pipe} from \"../core/pipe\"\nimport TreeView from 'react-treeview'\nimport './react-treeview.css'\n\nexport default class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topVMs: [],\n      tree: props.tree\n    }\n  }\n\n  setTopVMs(){\n    let topVM = this.props.model.currentVM\n    while (topVM.parent instanceof VM) { topVM = topVM.parent }\n    const topVMs = [...new Set(this.state.topVMs.concat(topVM))]\n    this.setState({topVMs})\n  }\n\n  componentDidMount() {\n    this.setTopVMs()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props !== prevProps) this.setTopVMs()\n  }\n\n  onClick = (node) => {\n    let vm = node.get('vm')\n    if(!vm){\n      debugger\n    }\n    this.props.controller.setActiveVM(vm)\n  }\n\n  buildView(pipe, node, sidelink=false) {\n    if (!node) { debugger }\n    const childrenPipes = node.filter((v,k) => {\n      return k instanceof Pipe\n    })\n    const childrenView = childrenPipes.map((childNode, childPipe) => {\n          return  this.buildView(childPipe, childNode, true)\n        }\n    ).toArray()\n\n    const childrenPipes2 = node.filter((v,k) => {\n      return k instanceof List\n    })\n    const childrenView2 = childrenPipes2.map((childNode, _list) => {\n          const childPipe = childNode.keySeq().first()\n          const childNode2 = childNode.valueSeq().first()\n          return this.buildView(childPipe, childNode2)\n        }\n    ).toArray()\n    const currentPath = this.props.model.currentVM.treeId()\n    const childrenView3 = childrenPipes2.map((childNode, _list) => {\n          const childPipe = childNode.keySeq().first()\n          const childNode2 = childNode.valueSeq().first()\n          const treeId = childNode2.get('vm').treeId()\n      const higlight = treeId.length <= currentPath.length && List(treeId).equals(List(currentPath.slice(0, treeId.length)))\n      if (higlight){\n        return this.buildView(childPipe, childNode2)\n      }\n        }\n    ).toArray()\n    const treeId = node.get('vm').treeId()\n    const higlight = treeId.length <= currentPath.length && List(treeId).equals(List(currentPath.slice(0, treeId.length)))\n    const linkClass = sidelink ? 'i' : ''\n    const label = <span className={higlight ? `b ${linkClass}` : linkClass} key={1} onClick={() => {\n      this.onClick(node)\n    }}>{pipe.desc}</span>\n    if (childrenView.length === 0 && childrenView2.length === 0) {\n      return label\n    }\n    console.log('nav', higlight, pipe.desc)\n    return <TreeView itemClassName={higlight ? `b ${linkClass}` : linkClass} key={1} nodeLabel={label} defaultCollapsed={false}>\n      {childrenView}\n      {childrenView2}\n    </TreeView>\n    return <ul className=\"list pl2\" key={1}>\n      <li>\n        <u className={higlight ? `b ${linkClass}` : linkClass} onClick={() => {\n          this.onClick(node)\n        }}>{pipe.desc}</u>\n      </li>\n      <span className=\"bg-light-silver\">{childrenView}</span>\n      {childrenView2}\n    </ul>\n  }\n\n  render() {\n    return (\n        <div>\n          <h4>Navigator</h4>\n          { this.state.topVMs.map(vm => {\n            const pipe = vm.pipe\n            const node = this.state.tree.getIn(vm.treeId())\n            return this.buildView(pipe, node)\n          }) }\n        </div>\n    )\n  }\n}\n","import {Patch} from \"../patch\"\nimport {Ptr} from \"../ptr\"\n\nexport default class PipeToSeq {\n  constructor(pipe){\n    this.pipe = pipe\n  }\n\n\n  getAttributes(block, i){\n    const index = this.seq.findIndex(item => {\n      return item.block === block && i === item.i\n    })\n    if (index < 0 ) {\n      debugger\n    }\n    let data = {}\n    if (index > 0) {\n      data.prefix = this.seq.slice(0, index)\n      this.prevIsChar = false\n    }\n    const isChar = 'string' === typeof block.content[i]\n    if (!(isChar && this.prevIsChar)) {\n      data.level = this.seq[index].level\n    }\n    this.prevIsChar = isChar\n\n    this.seq = this.seq.slice(index + 1)\n\n    return data\n  }\n\n  setFirstFlags(){\n    let first = false\n    for(const item of this.seq) {\n      if (first) {\n        item.first = true\n        first = false\n      }\n      if (item.type) first = true\n    }\n  }\n\n  get(){\n    this.seq = this.toSeq(new Ptr(this.pipe, 0), new Ptr(this.pipe, this.pipe.content.length+1)).result\n    this.setFirstFlags()\n    return this.seq\n  }\n\n  toSeq(from, to, to_condition, input=[], level = 0){\n    const block = from.block\n    const i = from.i\n    let patch = this.pipe.patches.find( p => {\n      return p.from.block === from.block && (0 === from.i ? from.i <= p.from.i : from.i < p.from.i) && !(to && to.i !== 0 && block === to.block && p.from.i >= to.i)\n    })\n\n    let result\n    if (patch) {\n      let head = this.mapBlock(block, i, patch.from.i, level)\n      if (patch.condition === block.condition) { // same layer\n        result = this.toSeq(new Ptr(patch, 0), to, to_condition, input.concat(head), level)\n      } else {\n        const ifSeq = this.toSeq(new Ptr(patch, 0), undefined, block.condition, [], level+1)\n        const endPtr = new Ptr(ifSeq.block, ifSeq.i)\n        const elseSeq = this.toSeq(new Ptr(block, patch.from.i), endPtr, to_condition, [], level+1)\n        let ifElse\n        if (elseSeq.result.length > 0) {\n          ifElse = [{type: 'if', condition: patch.condition, level: level}].concat(ifSeq.result).concat([{type: 'else', level: level}]).concat(elseSeq.result).concat([{type: 'end', level: level}])\n        } else {\n          ifElse = [{type: 'if', condition: patch.condition, level: level}].concat(ifSeq.result).concat([{type: 'end', level: level}])\n        }\n\n        result = this.toSeq(endPtr, to, to_condition, input.concat(head).concat(ifElse), level )\n      }\n    } else {\n      if (to){\n        if (to.block === block) {\n          let chunkResult = this.mapBlock(block, from.i, to.i, level)\n          result = {\n            result: input.concat(chunkResult),\n            block: to.block,\n            i: to.i\n          }\n        } else {\n          let chunkResult = this.mapBlock(block, from.i, block.content.length, level)\n          let newLevel = level\n          if (block.to.block.condition !== block.condition) newLevel--\n          result = this.toSeq(block.to, to, to_condition, input.concat(chunkResult), level)\n        }\n      } else { // to_condition makes sense\n        let chunkResult = this.mapBlock(block, from.i, block.content.length, level)\n        if (block.to.block.condition === to_condition) {\n          result = {\n            result: input.concat(chunkResult),\n            block: block.to.block,\n            i: block.to.i\n          }\n        } else {\n          let newLevel = level\n          if (block.to.block.condition !== block.condition) newLevel--\n          result = this.toSeq(block.to, to, to_condition, input.concat(chunkResult), level)\n        }\n      }\n    }\n\n    return result\n  }\n\n  mapBlock(block, float_i, float_j, level) {\n    const i = Math.floor(float_i)\n    const j = Math.floor(float_j)\n    let data = []\n\n    for(let k = i; k < j && k < block.content.length; k++ ){\n      data=data.concat({\n        block: block,\n        i: k,\n        level: level\n      })\n    }\n\n    return data\n  }\n}\n","import {Observer} from \"../observer\"\nimport {VCS} from \"../vcs\"\nimport {List} from \"immutable\"\nimport PipeToSeq from \"./pipe-to-seq\"\nimport {Patch} from \"../patch\"\nimport {ActivePipe} from \"../active-pipe\"\n\nconst findRangesByLayer = (i, layer, pipeHelper) => {\n  return pipeHelper.ranges[i].find(ranges => {\n    return ranges.find(range => range.block.condition === layer)\n  })\n}\n\nconst setStartingPtr = (block, i, ranges, pipeHelper, lastPtr) => {\n  // const {layer, ranges} = selection\n  // const layer1 = block.from ? block.from.block.condition : layer\n  // const ranges = findRangesByLayer(i, layer1, pipeHelper)\n\n  if (!block.from || !belongsToRanges(block.from, ranges)) {\n    const range = ranges.slice(-1)[0]\n    block.from = pipeHelper.rangeHelper.middle(range, (lastPtr && lastPtr.block === range.block) ? lastPtr.i : undefined)\n  }\n}\n\nconst setEndingPtr = (block, i, ranges, pipeHelper) => {\n  // const layer1 = block.to ? block.to.block.condition : layer\n  // const ranges = findRangesByLayer(i, layer1, pipeHelper)\n\n  if (!block.to || !belongsToRanges(block.from, ranges)) {\n    if (belongsToRanges(block.from, ranges)){\n      block.to = block.from\n    } else {\n      block.to = pipeHelper.rangeHelper.middle(ranges[0])\n    }\n  }\n}\n\nconst findRangeI = (ptr, fromI, toI, pipeHelper) => {\n  if (!ptr) return -1\n  let found = []\n  for(let i=fromI; i <= toI; i++){\n    pipeHelper.ranges[i].forEach(r2 => {\n      if (belongsToRanges(ptr, r2)) found.push(i)\n    })\n  }\n  if (found.length > 1) { debugger }\n  return found[0]\n}\n\nconst belongsToRanges = (ptr, ranges) => {\n  if (!ranges) debugger\n    return ranges.find(range => range.block === ptr.block && range.fromI <= ptr.i && ptr.i <= range.toI)\n}\n\nconst ptrBelongToSpace = (ptr, i, pipeHelper) => {\n  return pipeHelper.ranges[i].find(ranges => belongsToRanges(ptr, ranges))\n}\n\nconst getRemovePatchByI = (fromI, toI, pipeHelper) => {\n  const patches = pipeHelper.pipe.patches\n      .filter(patch => patch.new && patch.content.length === 0)\n      .filter(patch => {\n        return ptrBelongToSpace(patch.from, fromI, pipeHelper) && ptrBelongToSpace(patch.to, toI, pipeHelper)\n      })\n  if (patches.length > 1) { debugger }\n  return patches[0]\n}\n\nexport default class Convertor {\n  static getEntity(raw, block, i){\n    let kv = Object.entries(raw.entityMap).find((kv) => {\n      return kv[1].data.block === block && kv[1].data.i === i\n    })\n    return kv ? kv[1] : false\n  }\n\n  static async toDraft(pipe, vm, pull, initialRaw, currentLayer){\n    var text = '';\n    var ranges = [];\n    var map = {}\n    var i = 0;\n    let j = 0\n    if (pipe instanceof ActivePipe ) await pipe.load() // PipeToSeq requires loaded pipe\n    const p2s = new PipeToSeq(pipe)\n    p2s.get()\n    var callback = (data) => {\n      let atom = data.block.content[data.i]\n      if (data.pipe === pipe) {\n        if ('string' === typeof atom) {\n          text+= atom\n        } else text += '-';\n        // text += data.block.content[data.i];\n        ranges.push({offset: i, length: 1, key: i})\n        map[i] = {\n          type: 'TOKEN',\n          mutability: 'IMMUTABLE',\n          data: {\n            atom: atom,\n            vm: data.vm,\n            block: data.block,\n            pipe: data.pipe,\n            i: data.i,\n            result: data.result,\n            attrs: p2s.getAttributes(data.block, data.i),\n            ii: i\n          }\n        }\n        map[i].data.j = j\n        j++\n        i++\n      }\n    }\n\n    Observer.subscribe('vm', callback)\n    let finalCallback = Observer.subscribe('vm_result', (data) => {\n      if (data.pipe === pipe) {\n        Observer.unsubscribe(callback)\n      }\n    })\n    await pull()\n\n    if (p2s.seq.length > 0) { map[i-1].data.attrs.suffix = p2s.seq }\n\n    Observer.unsubscribe(finalCallback)\n\n    return {\n      blocks: [\n        {\n          text: (\n              text\n          ),\n          type: 'unstyled',\n          entityRanges: ranges,\n        },\n      ],\n\n      entityMap: map,\n    };\n  }\n\n  static commit(pipe, fromIndex, toIndex, content){\n    debugger\n  }\n}\n","import { Map } from 'immutable'\nimport {Ptr} from '../ptr'\n\nconst mkFromI = (i) => {\n  return Math.max(i, Math.floor(i)+0.33)\n}\n\nconst mkToI = (i) => {\n  return Math.min(i, Math.floor(i)+0.66)\n}\n\nconst mkRandom = (fromIwide, toIwide) => {\n  let fromI = mkFromI(fromIwide)\n  let toI = mkToI(toIwide)\n\n  let delta = toI - fromI\n  return fromI + delta/2 - (Math.random()-0.5)*delta/10\n}\n\nconst MAXI = 0.999999\nexport default class RangeHelper {\n  constructor(path, pipe){\n    this.path = path\n    this.pipe = pipe\n    this.map = Map()\n  }\n\n  _rangeFor(left, right){\n    if (Ptr.equals(this.section.startPtr, left)) {\n\n    }\n  }\n\n  getFromTo(fromLeft, fromRight, toLeft, toRight){\n    let fromPrt, toPtr\n    // const keyFrom = this._toKey(fromLeft, fromRight)\n    // const keyTo = this._toKey(toLeft, toRight)\n    if (Ptr.equals(fromLeft, toLeft) && Ptr.equals(fromRight, toRight)){\n\n      fromPrt = toPtr = this._default(fromLeft, fromRight)\n    } else {\n\n\n    }\n  }\n\n  get(left, right){\n    const ranges = this.ranges(left, right)\n    if (!left && !right) return;\n    let result = this.map.getIn(this._toKey(left, right))\n    if (!result){\n      result = this._default(left, right)\n      this.set(left, right, result)\n    }\n    return result\n  }\n\n  set(left, right, value){\n    this.map = this.map.setIn(this._toKey(left, right), value)\n  }\n\n  inserts(range){\n    return this.pipe.patches.filter(patch => {\n      return patch.condition\n          && patch.from.block === patch.to.block\n          && patch.from.i === patch.to.i\n          && range.fromI < patch.from.i && patch.from.i < range.toI\n    })\n  }\n\n  toRight(left, right){\n    let ranges = this.ranges(left, right)\n    let ptr = this.get(left, right)\n    let range = ranges.find((range) => { return range.block === ptr.block })\n    let inserts = this.inserts(range)\n    let index = inserts.findIndex(patch => patch.from.i >= ptr.i)\n\n    if (-1 === index || 0 === inserts.length){\n      ptr = this.nextRange(left, right, ranges, ptr)\n    } else\n    if (inserts.length - 1 === index) {\n      ptr = new Ptr(ptr.block, mkRandom(inserts[inserts.length-1].from.i, range.toI))\n    } else {\n      ptr = new Ptr(ptr.block, mkRandom(inserts[index].from.i, inserts[index+1].from.i))\n    }\n    this.set(left, right, ptr)\n  }\n\n  toLeft(left, right){\n    let ranges = this.ranges(left, right)\n\n    let ptr = this.get(left, right)\n    let range = ranges.find((range) => { return range.block === ptr.block })\n    let inserts = this.inserts(range)\n    let index = inserts.findIndex(patch => patch.from.i >= ptr.i)\n    if (-1 === index && inserts.length > 0) index = inserts.length\n\n    if (0 === index || 0 === inserts.length){\n      ptr = this.prevRange(left, right, ranges, ptr)\n    } else\n    if (index === 1) {\n      ptr = new Ptr(ptr.block, mkRandom(range.fromI, inserts[0].from.i))\n    } else {\n      ptr = new Ptr(ptr.block, mkRandom(inserts[index-1].from.i, inserts[index].from.i))\n    }\n    this.set(left, right, ptr)\n  }\n\n  nextRange(left, right, ranges, ptr){\n    let i = ranges.findIndex((range) => { return range.block === ptr.block }) + 1\n    let range = ranges[i]\n    if (range) {\n      let inserts = this.inserts(range)\n      if (inserts.length > 0){\n        return new Ptr(range.block, mkRandom(range.fromI, inserts[0].from.i))\n      } else {\n        return new Ptr(range.block, mkRandom(range.fromI, range.toI))\n      }\n    }\n    else return ptr\n  }\n\n  prevRange(left, right, ranges, ptr){\n    let i = ranges.findIndex((range) => { return range.block === ptr.block }) - 1\n    let range = ranges[i]\n    if (range) {\n      let inserts = this.inserts(range)\n      if (inserts.length > 0){\n        return new Ptr(range.block, mkRandom(inserts[inserts.length-1].from.i, range.toI))\n      } else {\n        return new Ptr(range.block, mkRandom(range.fromI, range.toI))\n      }\n    }\n    else return ptr\n  }\n\n  _toKey(left, right){\n    return [left && left.block, left && left.i, right && right.block, right && right.i]\n  }\n\n  _isInChunk(ptr, chunk){\n    return ptr.block === chunk.block && chunk.fromI <= (ptr.i + 1) && (ptr.i + 1) <= chunk.toI\n  }\n\n  _default(left, right){\n    let ranges = this.ranges(left, right)\n    let range = ranges[Math.floor(ranges.length / 2)]\n    if (!range){\n      debugger\n      this.ranges(left, right)\n    }\n    let i = this._middle(range)\n    return new Ptr(range.block, i)\n  }\n\n  _middle(range){\n    return mkRandom(range.fromI, range.toI)\n    // let delta = range.toI - range.fromI\n    // return range.fromI + delta/2 - (Math.random()-0.5)*delta/10\n  }\n\n\n  middle(range, minI, maxI){\n    const fromI = minI ? minI : range.fromI\n    const toI = maxI ? maxI : range.toI\n    if (fromI > toI) { debugger }\n\n    let delta = toI - fromI\n    const i = fromI + delta/2 - (Math.random()-0.5)*delta/10\n    return new Ptr(range.block, i)\n  }\n\n\n  random(fromI, toI){\n    let delta = toI - fromI\n    return fromI + delta/2 - (Math.random()-0.5)*delta/10\n  }\n\n  getFrom(left, right, layerIndex){\n    if (!left && !right) return;\n    let ranges = this.ranges(left, right)\n    let range = ranges.pop()\n    return this.rangeHead(range, layerIndex)\n  }\n\n  rangeHead(range, layerIndex){\n    let fromI = Math.max(range.fromI, Math.floor(range.fromI)+0.66)\n    let toI = range.toI\n    if (layerIndex >= 0) {\n      let size = (toI - fromI)/10\n      fromI = fromI + layerIndex*size\n      toI = fromI + size\n    }\n    return new Ptr(range.block,\n        this.random(\n            fromI,\n            toI\n        )\n    )\n  }\n\n  getTo(left, right, layerIndex){\n    if (!left && !right) return;\n    let ranges = this.ranges(left, right)\n    let range = ranges.shift()\n    return this.rangeTail(range, layerIndex)\n  }\n\n  rangeTail(range, layerIndex) {\n    let fromI = range.fromI\n    let toI = Math.min(range.toI, Math.floor(range.toI)+0.33)\n    if (layerIndex >= 0) {\n      const size = (toI - fromI)/10\n      toI = toI - layerIndex*size\n      fromI = fromI - size\n    }\n    return new Ptr(\n        range.block,\n        this.random(\n            fromI,\n            toI\n        )\n    )\n  }\n\n  ranges(left, right){\n    if (!left && !right) return;\n    let leftFound\n    let result = []\n\n    function handleSection(chunk) {\n      result.push({\n        block: chunk.block,\n        fromI: left && left.block === chunk.block ? Math.max(left.i + 1, chunk.fromI) : chunk.fromI,\n        toI: right && right.block === chunk.block ? Math.min(Math.floor(right.i) + MAXI, chunk.toI+ MAXI) : (chunk.block.content.length === chunk.toI ? chunk.toI + MAXI : chunk.toI)\n      })\n    }\n\n    for(let k = 0; k < this.path.length; k++ ){\n      let current = this.path[k]\n      if (left && !leftFound) {\n        if (this._isInChunk(left, current)) {\n          leftFound = true\n          handleSection(current)\n          if (!right || this._isInChunk(right, current)) break\n        }\n      } else {\n        handleSection(current)\n        if (this._isInChunk(right, current)) {\n          break\n        }\n      }\n    }\n\n    return result\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n * @emails oncall+draft_js\n */\n'use strict';\n\n// declare var __DEV__: boolean;\nimport  { BlockMap } from \"draft-js/lib/BlockMap\";\nimport  { BlockNodeConfig } from \"draft-js/lib/BlockNode\";\nimport  CharacterMetadata from \"draft-js/lib/CharacterMetadata\";\nimport  { RawDraftContentBlock } from \"draft-js/lib/RawDraftContentBlock\";\nimport  { RawDraftContentState } from \"draft-js/lib/RawDraftContentState\";\n\nconst ContentBlock = require(\"draft-js/lib/ContentBlock\");\n\nconst ContentBlockNode = require(\"draft-js/lib/ContentBlockNode\");\n\nconst ContentState = require(\"draft-js/lib/ContentState\");\n\nconst DraftEntity = require(\"draft-js/lib/DraftEntity\");\n\nconst DraftTreeAdapter = require(\"draft-js/lib/DraftTreeAdapter\");\n\nconst DraftTreeInvariants = require(\"draft-js/lib/DraftTreeInvariants\");\n\nconst SelectionState = require(\"draft-js/lib/SelectionState\");\n\nconst createCharacterList = require(\"draft-js/lib/createCharacterList\");\n\nconst decodeEntityRanges = require(\"draft-js/lib/decodeEntityRanges\");\n\nconst decodeInlineStyleRanges = require(\"draft-js/lib/decodeInlineStyleRanges\");\n\nconst generateRandomKey = require(\"draft-js/lib/generateRandomKey\");\n\nconst gkx = require(\"draft-js/lib/gkx\");\n\nconst Immutable = require(\"immutable\");\n\nconst invariant = require(\"fbjs/lib/invariant\");\n\nconst experimentalTreeDataSupport = gkx('draft_tree_data_support');\nconst {\n  List,\n  Map,\n  OrderedMap\n} = Immutable;\n\nconst decodeBlockNodeConfig = (block, entityMap) => {\n  const {\n    key,\n    type,\n    data,\n    text,\n    depth\n  } = block;\n  const blockNodeConfig = {\n    text,\n    depth: depth || 0,\n    type: type || 'unstyled',\n    key: key || generateRandomKey(),\n    data: Map(data),\n    characterList: decodeCharacterList(block, entityMap)\n  };\n  return blockNodeConfig;\n};\n\nconst decodeCharacterList = (block, entityMap) => {\n  const {\n    text,\n    entityRanges: rawEntityRanges,\n    inlineStyleRanges: rawInlineStyleRanges\n  } = block;\n  const entityRanges = rawEntityRanges || [];\n  const inlineStyleRanges = rawInlineStyleRanges || []; // Translate entity range keys to the DraftEntity map.\n\n  return createCharacterList(decodeInlineStyleRanges(text, inlineStyleRanges), decodeEntityRanges(text, entityRanges.filter(range => entityMap.hasOwnProperty(range.key)).map(range => ({ ...range,\n    key: entityMap[range.key]\n  }))));\n};\n\nconst addKeyIfMissing = (block) => {\n  return { ...block,\n    key: block.key || generateRandomKey()\n  };\n};\n/**\n * Node stack is responsible to ensure we traverse the tree only once\n * in depth order, while also providing parent refs to inner nodes to\n * construct their links.\n */\n\n\nconst updateNodeStack = (stack, nodes, parentRef) => {\n  const nodesWithParentRef = nodes.map(block => {\n    return { ...block,\n      parentRef\n    };\n  }); // since we pop nodes from the stack we need to insert them in reverse\n\n  return stack.concat(nodesWithParentRef.reverse());\n};\n/**\n * This will build a tree draft content state by creating the node\n * reference links into a single tree walk. Each node has a link\n * reference to \"parent\", \"children\", \"nextSibling\" and \"prevSibling\"\n * blockMap will be created using depth ordering.\n */\n\n\nconst decodeContentBlockNodes = (blocks, entityMap) => {\n  return blocks // ensure children have valid keys to enable sibling links\n  .map(addKeyIfMissing).reduce((blockMap, block, index) => {\n    invariant(Array.isArray(block.children), 'invalid RawDraftContentBlock can not be converted to ContentBlockNode'); // ensure children have valid keys to enable sibling links\n\n    const children = block.children.map(addKeyIfMissing); // root level nodes\n\n    const contentBlockNode = new ContentBlockNode({ ...decodeBlockNodeConfig(block, entityMap),\n      prevSibling: index === 0 ? null : blocks[index - 1].key,\n      nextSibling: index === blocks.length - 1 ? null : blocks[index + 1].key,\n      children: List(children.map((child) => child.key))\n    }); // push root node to blockMap\n\n    blockMap = blockMap.set(contentBlockNode.getKey(), contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n\n    let stack = updateNodeStack([], children, contentBlockNode); // start computing children nodes\n\n    while (stack.length > 0) {\n      // we pop from the stack and start processing this node\n      const node = stack.pop(); // parentRef already points to a converted ContentBlockNode\n\n      const parentRef = node.parentRef;\n      const siblings = parentRef.getChildKeys();\n      const index = siblings.indexOf(node.key);\n      const isValidBlock = Array.isArray(node.children);\n\n      if (!isValidBlock) {\n        invariant(isValidBlock, 'invalid RawDraftContentBlock can not be converted to ContentBlockNode');\n        break;\n      } // ensure children have valid keys to enable sibling links\n\n\n      const children = node.children.map(addKeyIfMissing);\n      const contentBlockNode = new ContentBlockNode({ ...decodeBlockNodeConfig(node, entityMap),\n        parent: parentRef.getKey(),\n        children: List(children.map((child) => child.key)),\n        prevSibling: index === 0 ? null : siblings.get(index - 1),\n        nextSibling: index === siblings.size - 1 ? null : siblings.get(index + 1)\n      }); // push node to blockMap\n\n      blockMap = blockMap.set(contentBlockNode.getKey(), contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n\n      stack = updateNodeStack(stack, children, contentBlockNode);\n    }\n\n    return blockMap;\n  }, OrderedMap());\n};\n\nconst decodeContentBlocks = (blocks, entityMap) => {\n  return OrderedMap(blocks.map((block) => {\n\n    const contentBlock = new ContentBlock(decodeBlockNodeConfig(block, entityMap));\n    return [contentBlock.getKey(), contentBlock];\n  }));\n};\n\nconst decodeRawBlocks = (rawState, entityMap) => {\n  const isTreeRawBlock = rawState.blocks.find(block => Array.isArray(block.children) && block.children.length > 0);\n  const rawBlocks = experimentalTreeDataSupport && !isTreeRawBlock ? DraftTreeAdapter.fromRawStateToRawTreeState(rawState).blocks : rawState.blocks;\n\n  if (!experimentalTreeDataSupport) {\n    return decodeContentBlocks(isTreeRawBlock ? DraftTreeAdapter.fromRawTreeStateToRawState(rawState).blocks : rawBlocks, entityMap);\n  }\n\n  const blockMap = decodeContentBlockNodes(rawBlocks, entityMap); // in dev mode, check that the tree invariants are met\n\n  return blockMap;\n};\n\nconst decodeRawEntityMap = (rawState) => {\n  const {\n    entityMap: rawEntityMap\n  } = rawState;\n  const entityMap = {}; // TODO: Update this once we completely remove DraftEntity\n\n  Object.keys(rawEntityMap).forEach(rawEntityKey => {\n    const {\n      type,\n      mutability,\n      data\n    } = rawEntityMap[rawEntityKey]; // get the key reference to created entity\n\n    if (data.entityKey) {\n      entityMap[rawEntityKey] = data.entityKey\n      DraftEntity.__replaceData(data.entityKey, data)\n    } else {\n      const entityKey = DraftEntity.__create(type, mutability, data || {});\n      data.entityKey = entityKey\n      entityMap[rawEntityKey] = entityKey\n    }\n  });\n  return entityMap;\n};\n\nconst convertFromRawToDraftState = (rawState) => {\n  invariant(Array.isArray(rawState.blocks), 'invalid RawDraftContentState'); // decode entities\n\n  const entityMap = decodeRawEntityMap(rawState); // decode blockMap\n\n  const blockMap = decodeRawBlocks(rawState, entityMap); // create initial selection\n\n  const selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n  return new ContentState({\n    blockMap,\n    entityMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n};\n\nexport default convertFromRawToDraftState;\n","import {VCS} from \"../vcs\"\nimport {Patch} from \"../patch\"\nimport {Ptr} from \"../ptr\"\nimport {Pipe} from \"../pipe\"\nimport {List, Map} from \"immutable\"\n\nclass Breakpoint{}\n\nclass Item {\n  constructor(atom, j, block, deps) {\n    this.atom = atom\n    this.content = [atom]\n    this.j = j\n    this.block = block\n    this.deps = deps\n  }\n\n  new() {\n    return this.block.new\n  }\n  newest(){\n    return this.i === undefined\n  }\n}\n\nclass Change extends Item {\n  constructor(selection, pipeHelper) {\n    super()\n    this.selection = selection\n    this.pipeHelper = pipeHelper\n    this.from = this.pipeHelper.rangeHelper.middle(selection.startRange)\n    if (this.pipeHelper.isPtrInRange(this.from, selection.endRange)) {\n      this.to = this.from\n    } else {\n      this.to = this.pipeHelper.rangeHelper.middle(selection.endRange)\n    }\n    const isNew = this.from.block.new && pipeHelper.currentLayer === this.from.block.condition\n    this.block = isNew ? this.from.block : new Patch([], this.from, this.to, this.pipeHelper.currentLayer)\n    this.block.new = true\n  }\n}\n\nclass Range {\n  constructor(block, fromI, toI){\n    this.block = block\n    this.fromI = fromI\n    this.toI = toI\n  }\n\n  includes(ptr){\n    return this.block === ptr.block && this.fromI < ptr.i && ptr.i < this.toI\n  }\n\n  eq(range2) {\n    if (!range2) return false\n    if (!(range2 instanceof Range)) return false\n\n    return this.block === range2.block && this.fromI === range2.fromI && this.toI === range2.toI\n  }\n}\n\nexport default class fromDraft {\n  constructor(pipeHelper){\n    this.pipeHelper = pipeHelper\n  }\n\n  perform(content, initialLength, layer, selection){\n    const items1 = this.rawToItems(this.pipeHelper.initialRaw)\n    const change = new Change(selection, this.pipeHelper)\n    change.content = this.changeContent(content)\n    const items2 = this.addChange(items1, change)\n    const [sharedStartBlock, sharedEndBlock] = this.sharedEdges(items2)\n    const patches = this.toPatches(items2, sharedStartBlock, sharedEndBlock, change)\n    console.log('fromDraft change, patches', change, patches)\n    this.cleanTmpPatches()\n    this.pipeHelper.pipe.addPatch(...patches)\n  }\n\n  rawToItems(raw){\n    const items = raw.blocks[0].text.split('').map((_char, i) => {\n      const data = raw.entityMap[i].data\n      const deps = this.pipeHelper.pipe.deps.getIn([List([data.j, data.block])])\n      const item = new Item(data.atom, data.j, data.block, deps)\n      return(item)\n    })\n\n    const items1 = this.addBreakpoints(items)\n\n    let prevRange\n    let items2 = items1.flatMap(item => {\n      if (item instanceof Breakpoint) return item\n\n      const beforeRange = this.pipeHelper.ranges[item.j].slice(-1)[0].slice(-1)[0]\n      const afterRange = this.pipeHelper.ranges[item.j+1][0][0]\n\n      if (prevRange === beforeRange) {\n        prevRange = afterRange\n        return [item, new Range(afterRange.block, afterRange.fromI, afterRange.toI)]\n      }\n\n      prevRange = afterRange\n      return [new Range(beforeRange.block, beforeRange.fromI, beforeRange.toI), item, new Range(afterRange.block, afterRange.fromI, afterRange.toI)]\n    })\n\n    const firstRangeP = this.pipeHelper.ranges[0][0][0]\n    const prefixRange = new Range(firstRangeP.block, firstRangeP.fromI, firstRangeP.toI)\n    if (!prefixRange.eq(items2[0])) { items2 = [prefixRange].concat(items2) }\n\n    const lastRangeP = this.pipeHelper.ranges.slice(-1)[0].slice(-1)[0].slice(-1)[0]\n    const sufixRange = new Range(lastRangeP.block, lastRangeP.fromI, lastRangeP.toI)\n    if (!sufixRange.eq(items2[items2.length-1])) { items2 = items2.concat(sufixRange) }\n\n    return items2\n  }\n\n  changeContent(content){\n    let draftBlock = content.getFirstBlock()\n    let text = draftBlock.getText()\n\n    const changeContent = text.split('').flatMap((atom, i) => {\n      let entityKey = draftBlock.getEntityAt(i)\n      if (entityKey) {\n        if (content.getEntity(entityKey).getData().inserted){\n          return content.getEntity(entityKey).getData().atom\n        } else return []\n      } else {\n        return atom\n      }\n    })\n\n    return changeContent\n  }\n\n  addChange(items, change) {\n    const fromRangeIndex = items.findIndex(item => item instanceof(Range) && item.includes(change.from))\n    const toRangeIndex = items.findIndex(item => item instanceof(Range) && item.includes(change.to))\n    const beforeRange = items[fromRangeIndex]\n    const newBeforeRange = new Range(beforeRange.block, beforeRange.fromI, change.from.i)\n    const afterRange = items[toRangeIndex]\n    const newAfterRange = new Range(afterRange.block, change.to.i, afterRange.toI)\n\n    const result = items.slice(0, fromRangeIndex).concat([newBeforeRange, change, newAfterRange]).concat(items.slice(toRangeIndex+1, items.length))\n    return result\n  }\n\n  addBreakpoints(items) {\n    const items2 = items.flatMap((item, index) => {\n      if (this.pipeHelper.persistedBreakpoints.includes(index)) {\n        return [new Breakpoint(), item]\n      }\n\n      return item\n    })\n    if (this.pipeHelper.persistedBreakpoints.includes(items.length)) {\n      return items2.concat(new Breakpoint())\n    }\n\n    return items2\n  }\n\n  sharedEdges(items) {\n    const changeIndex = items.findIndex(item => item instanceof Change)\n    let beforeItemIndex = items.map(item => item.constructor.name === 'Item' && item.block.new && item.block.condition === this.pipeHelper.currentLayer).lastIndexOf(true, changeIndex)\n    if (beforeItemIndex > -1 && items.slice(beforeItemIndex + 1, changeIndex).findIndex(item => item instanceof Item || item instanceof Breakpoint) > -1) {\n      beforeItemIndex = -1\n    }\n\n    let afterItemIndex = items.map(item => item.constructor.name === 'Item' && item.block.new && item.block.condition === this.pipeHelper.currentLayer).indexOf(true, changeIndex)\n    if (afterItemIndex > -1 && items.slice(changeIndex + 1, afterItemIndex).findIndex(item => item instanceof Item || item instanceof Breakpoint) > -1) {\n      afterItemIndex = -1\n    }\n\n    return [beforeItemIndex > -1 && items[beforeItemIndex].block, afterItemIndex > -1 && items[afterItemIndex].block]\n  }\n\n  linkBlocks(items) {\n    const patches = this.pipeHelper.pipe.patches.filter(patch => (patch.new && patch.condition !== this.pipeHelper.currentLayer))\n    items.forEach((range) => {\n      if (!(range instanceof Range)) return\n\n      range.patchesFrom = patches.filter(patch => patch.from.block === range.block && range.fromI < patch.from.i && patch.from.i < range.toI)\n      range.patchesTo = patches.filter(patch => patch.to.block === range.block && range.fromI < patch.to.i && patch.to.i < range.toI)\n    })\n  }\n\n  joinRanges(items){\n    let prevRange = []\n    const items2 = items.flatMap(item => {\n      if (!(item instanceof Range)) {\n        const r = prevRange.concat(item)\n        prevRange = []\n        return r\n      }\n\n      if (prevRange.length > 0 && prevRange[0].block === item.block && prevRange[0].toI === item.fromI) {\n        const newRange = new Range(item.block, prevRange[0].fromI, item.toI)\n        prevRange = []\n        return newRange\n      }\n\n      prevRange = [item]\n      return []\n    }).concat(prevRange)\n\n    return items2\n  }\n\n  toPatches(items, sharedStartBlock, sharedEndBlock, change) {\n    let newDeps = Map()\n    let content = []\n    const sharedBlocks = [sharedStartBlock, sharedEndBlock]\n\n    const items2 = this.joinRanges(items)\n    this.linkBlocks(items2)\n\n    items2.forEach(item => {\n      if (item instanceof Item && (item instanceof Change || sharedBlocks.includes(item.block))) {\n        if (item instanceof Item && item.deps) {\n          newDeps = newDeps.setIn([List([content.length, change.block])], item.deps)\n        }\n        content = content.concat(item.content)\n      }\n      if (item instanceof Range && sharedBlocks.includes(item.block)) {\n        item.patchesFrom.forEach(patch => {\n          patch.from = new Ptr(change.block, content.length + patch.from.i - Math.floor(patch.from.i))\n        })\n        item.patchesTo.forEach(patch => {\n          patch.to = new Ptr(change.block, content.length + patch.to.i - Math.floor(patch.to.i))\n        })\n      }\n    })\n\n    change.block.content = content\n    if (sharedStartBlock)  change.block.from = sharedStartBlock.from\n    if (sharedEndBlock)  change.block.to = sharedEndBlock.to\n    const patches = this.pipeHelper.pipe.patches\n        .filter((patch) => (patch.new && patch.condition === this.pipeHelper.currentLayer))\n        .filter(patch => !sharedBlocks.includes(patch))\n\n    this.pipeHelper.pipe.deps = this.pipeHelper.pipe.deps.filter((value, key) => {\n      if (key instanceof List) { // && key.size === 2 && key.get(1) instanceof Block\n        const block = key.get(1)\n        return !sharedBlocks.includes(block)\n      }\n      return true\n    }).merge(newDeps)\n\n    return change.block instanceof Pipe ? patches : patches.concat(change.block)\n  }\n\n  cleanTmpPatches(){\n    this.pipeHelper.pipe.patches = this.pipeHelper.pipe.patches.filter((patch) => !(patch.new && patch.condition === this.pipeHelper.currentLayer))\n  }\n}\n","import Convertor from \"./convertor\"\nimport {Ptr} from \"../ptr\"\nimport {Observer} from \"../observer\"\nimport RangeHelper from \"./rangeHelper\"\nimport {EditorState, convertFromRaw, convertToRaw, SelectionState} from 'draft-js';\nimport { tmpPipe } from '../base'\nimport {Map, Set, List, OrderedMap} from \"immutable\"\nimport convertFromRawToDraftState  from '../../vendor/convertFromRawToDraftState.js'\nimport {localStorageGet} from \"../lib/localStorage\"\nimport {ActivePipe} from \"../active-pipe\"\nimport fromDraft from \"./from-draft\"\nconst applyEntityToContentBlock = require('draft-js/lib/applyEntityToContentBlock')\n\nconst MAXI = 0.999999\nconst MINI = 0.000001\nconst isPtrInRange = (ptr, range) => {\n  return range.block === ptr.block && range.fromI < ptr.i && ptr.i < range.toI\n}\n\nconst isPtrTouchRange = (ptr, range) => {\n  return range.block === ptr.block && range.fromI <= ptr.i && ptr.i <= range.toI\n}\n\nexport default class PipeHelper {\n  constructor(pipe, vm, pull, pull2){\n    this.pipe = pipe\n    this.vm = vm\n    this.pull = pull\n    this.pull2 = pull2\n  }\n\n  async init(currentLayer) {\n    this.currentLayer = currentLayer\n    if (this.pipe instanceof ActivePipe ) await this.pipe.load()\n\n    this.initialRaw = await this.initRanges(() => this.performPull())\n  }\n\n  async initRanges(pull) {\n    let path = []\n    let spaces = []\n    let range\n    const self = this\n    let j = 0\n\n    tmpPipe.content[0] = ''\n    const callback = Observer.subscribe('vm_push_chunk', (data) => {\n      if (data.pipe === self.pipe) {\n        if (!spaces[j]) spaces[j]=[]\n        if (range) spaces[j].push(range)\n        path.push(data)\n        range = {\n          block: data.block,\n          fromI: data.fromI,\n          toI: data.block.content.length === data.toI ? data.toI + MAXI : data.toI\n        }\n      }\n    })\n    const vmCallback = Observer.subscribe('vm', (data) => {\n      if (data.pipe === self.pipe) {\n        const fromI = Math.max(data.fromI, data.i)\n        const toI = Math.min(data.i+MAXI, range.toI)\n\n        if (!spaces[j]) spaces[j]=[]\n        spaces[j].push({\n          block: data.block,\n          fromI: fromI,\n          toI: toI\n        })\n\n        range.fromI = data.i + 1\n\n        j++\n      }\n    })\n\n    const patchesBackup = this.pipe.patches\n    // this.pipe.patches = this.pipe.patches.filter(patch => !(patch.new && patch.condition === currentLayer))\n\n    const initialRaw = await pull()\n\n    this.pipe.patches = patchesBackup\n\n    if (!spaces[j]) spaces[j]=[]\n    if (range) spaces[j].push(range)\n    Observer.unsubscribe(callback)\n    Observer.unsubscribe(vmCallback)\n\n    let breakpoints = []\n    const allPatches = await this.pipe.getPatches()\n    const patches =  allPatches.filter(patch => patch.condition !== this.currentLayer)\n    for (let patch of patches) {\n      if (patch.condition !== patch.from.block.condition) breakpoints.push(patch.from)\n      if (!(patch.from.block === patch.to.block && patch.from.i === patch.to.i)) {\n        if (patch.condition !== patch.to.block.condition) breakpoints.push(patch.to)\n      }\n    }\n    breakpoints.sort((a,b) => {\n      if (a.i < b.i){\n        return -1\n      }\n      if (a.i > b.i){\n        return 1\n      }\n      return 0\n    })\n\n    this.persistedBreakpoints = []\n    const spaces2 = spaces.map((spaces1, index) => {\n      return breakpoints.reduce((result, breakpoint) => {\n        const spaceToBreakIndex = result.findIndex(range => isPtrInRange(breakpoint, range))\n        if (spaceToBreakIndex > -1){\n          const range = result[spaceToBreakIndex]\n          const r1 = {\n            block: range.block,\n            fromI: range.fromI,\n            toI: breakpoint.i\n          }\n          const r2 = {\n            block: range.block,\n            fromI: breakpoint.i,\n            toI: range.toI\n          }\n\n          if (!breakpoint.block.new) { this.persistedBreakpoints.push(index) }\n          return result.slice(0, spaceToBreakIndex).concat(r1).concat(r2).concat(result.slice(spaceToBreakIndex+1))\n        } else {\n          return result\n        }\n      }, spaces1)\n    })\n\n    this.persistedBreakpoints = [...new Set(this.persistedBreakpoints)]\n\n    const spaces3 = spaces2.map(spaces1 => {\n      let prevRange\n      return spaces1.reduce((result, range) => {\n        if (result.length === 0) {\n          prevRange = range\n          return [[range]]\n        }\n        const doBreak = breakpoints.find(breakpoint => {\n          return isPtrTouchRange(breakpoint, prevRange) || isPtrTouchRange(breakpoint, range)\n        })\n        if (doBreak) result.push([])\n        result[result.length-1].push(range)\n        prevRange = range\n        return result\n      }, [])\n    })\n\n\n    console.log('data spaces ranges', spaces, spaces2, spaces3)\n    this.ranges = spaces3\n    this.rangeHelper = new RangeHelper(path, this.pipe)\n\n    return initialRaw\n  }\n\n  arePtrsInTheSameRange(ptr1, ptr2) {\n    const range1 = this.getRangeByPtr(ptr1)\n    return this.isPtrInRange(ptr2, range1)\n  }\n\n\n  isPtrInRange(ptr, range){\n    return isPtrInRange(ptr, range)\n  }\n\n  getRangeByPtr(ptr){\n    const ranges = this.ranges.flatMap(ranges1 => ranges1.flatMap(ranges2 => ranges2.flatMap(range => {\n      if (isPtrInRange(ptr, range)) return range\n    }))).filter(x=>x)\n    // if (ranges.length !== 1) { debugger }\n    const range = ranges[0]\n    return range\n  }\n\n  getIByPtr(ptr){\n    const i = this.ranges.findIndex(ranges1 => {\n      return ranges1.find(ranges2 => ranges2.find(range => {\n        if (isPtrInRange(ptr, range)) return true\n      }))\n    })\n    return i\n  }\n\n  getIByRange(range){\n    const i = this.ranges.findIndex(ranges1 => {\n      return ranges1.find(ranges2 => ranges2.find(range3 => range3 === range))\n    })\n    return i\n  }\n\n  isPtrsInSameRange(ptr1, ptr2) {\n    const range = this.getRangeByPtr(ptr1)\n    return isPtrInRange(ptr2, range)\n  }\n\n  isPtrLTrange(ptr, range){\n\n  }\n\n  pipeResult(vm){\n    return this.tree.getIn(vm.treeId().concat('result'))\n  }\n\n  async performPull(){\n    let self = {}\n    self.tree = Map()\n    self.pipeInput = Map()\n    self.pipeTree = Map()\n    self.pullMap = Map()\n    self.parentDep = Map()\n    self.parentDepResult = Map()\n    self.pulledDeps = Set()\n    self.pushed = Map()\n    self.pulledBy = Map()\n\n    let treeCallback = Observer.subscribe('vm_getdep', (data) => {\n      if (!data.origin[0]?.new && !data.requestedPipe?.new) {\n        let treePath = data.vm.treeId()\n            .concat(['origins'])\n            .concat(List(data.origin))\n            .concat(data.requestedPipe)\n            .concat(data.dep?.depPipe)\n        let ids = self.tree.getIn(treePath, Set())\n        self.tree = self.tree.setIn(treePath, ids.add(List(data?.dep?.vm?.treeId() || data.requesterId)))\n      }\n    })\n\n    let resultCallback = Observer.subscribe('vm_result', (data) => {\n      let treePath = data.vm.treeId()\n      // console.log('vm_result tpath', treePath)\n\n      self.tree = self.tree.setIn(treePath.concat(['result']), data.result)\n      self.tree = self.tree.setIn(treePath.concat(['vm']), data.vm)\n    })\n\n    let callback = Observer.subscribe('vm_push', (data) => {\n      if (0 === data.i && data.pipe === data.block) {\n        let key = [data.vm.context]\n        if (!self.pipeTree.hasIn(key)){\n          self.pipeTree = self.pipeTree.setIn(key, {vm: data.vm, pipe: data.pipe})\n        }\n      }\n    })\n\n    let pullCallback = Observer.subscribe('vm_pull', (data) => {\n      if (data.depPipe !== tmpPipe) {\n        let key = [data.vm.context, data.originPipe]\n        let value = self.pullMap.getIn(key, Set())\n        self.pullMap = self.pullMap.setIn(key, value.add(data.depPipe))\n\n        let key2 = [data.vm.context, data.depPipe]\n        let value2 = self.pullMap.getIn(key2, Set())\n        self.pulledBy = self.pulledBy.setIn(key2, value2.add(data.originPipe))\n      }\n    })\n\n    let pushResultCallback = Observer.subscribe('vm_push_result', (data) => {\n      if (0 === data.i && data.pipe === data.block) {\n        self.pipeInput = self.pipeInput.setIn([data.vm.context, data.pipe], data)\n      }\n    })\n\n    let parentGetDepCallback = Observer.subscribe('vm_parent_getdep', (data) => {\n      let key = data.treeId\n      let value = self.parentDep.getIn(key, Set())\n      self.parentDep = self.parentDep.setIn(key, value.add(data.pipe))\n\n      self.parentDepResult = self.parentDepResult.setIn([data.vm.context, data.pipe], data.result)\n    })\n\n    let pullDepCallback = Observer.subscribe('vm_pull_dep', (data) => {\n      self.pulledDeps = self.pulledDeps.add(data.dep)\n    })\n\n    let pushIndexCallback = Observer.subscribe('vm_push_child', (data) => {\n      self.tree = self.tree.setIn(data.vm.treeId().concat('pushed'), data.input)\n    })\n\n    let result = await this._assuredPull()\n\n    Observer.unsubscribe(pullCallback)\n    Observer.unsubscribe(callback)\n    Observer.unsubscribe(pushResultCallback)\n    Observer.unsubscribe(parentGetDepCallback)\n    Observer.unsubscribe(pullDepCallback)\n    Observer.unsubscribe(pushIndexCallback)\n    Observer.unsubscribe(treeCallback)\n    Observer.unsubscribe(resultCallback)\n\n\n    this.tree = self.tree\n    this.pipeInput = self.pipeInput\n    this.pipeTree = self.pipeTree\n    this.pullMap = self.pullMap\n    this.parentDep = self.parentDep\n    this.parentDepResult = self.parentDepResult\n    this.pulledDeps = self.pulledDeps\n    this.pushed = self.pushed\n    this.pulledBy = self.pulledBy\n\n    return result\n  }\n\n  async _assuredPull() {\n    let self = this\n    let pipePulled = false\n    let result\n\n    let callback = Observer.subscribe('vm_push', (data) => {\n      if (self.pipe === data.pipe && self.vm.context === data.vm.context) {\n        pipePulled = true\n      }\n    })\n\n    result = await Convertor.toDraft(this.pipe, this.vm, this.pull, this.initialRaw, this.currentLayer)\n\n    if (!pipePulled){\n      result = await Convertor.toDraft(this.pipe, this.vm, this.pull2, this.initialRaw, this.currentLayer)\n    }\n\n    Observer.unsubscribe(callback)\n\n    return result\n  }\n\n  getCurrentBlock(focusOffset, contentState){\n    let offset = this.getInitialOffset(focusOffset, contentState)\n    if(!(offset >= 0)) return null;\n    let left = this.getPtr(offset - 1)\n    let right = this.getPtr(offset)\n    return (this.rangeHelper.get(left, right)||{}).block\n  }\n\n  getInitialOffset(i, content){\n    let leftOffset = this._getOffset(i - 1, content)\n    let rightOffset = this._getOffset(i , content)\n    if (!Number.isInteger(leftOffset) && !Number.isInteger(rightOffset)) return;\n    if (Number.isInteger(leftOffset) && Number.isInteger(rightOffset) && leftOffset !== rightOffset -1) return\n\n    return Number.isInteger(leftOffset) ? leftOffset +1 : rightOffset\n  }\n\n  _getOffset(index, content){\n    if (index < 0 ) return null;\n    let key = content.getFirstBlock().getEntityAt(index)\n    if (!key) return null\n    let data = content.getEntity(key).getData()\n    if (data.block && tmpPipe === data.block.condition) return null;\n    return data.j\n  }\n\n  getPtr(i){\n    if (this.initialRaw.entityMap[i]){\n      let data = this.initialRaw.entityMap[i].data\n      return new Ptr(data.block, data.i)\n    }\n  }\n\n  getPtrByInitialOffset(i){\n    let left = this.getPtr(i - 1)\n    let right = this.getPtr(i)\n    return this.rangeHelper.get(left, right)\n  }\n\n  getFromPtr(i) {\n    const range = this.ranges[i].slice(-1)[0].slice(-1)[0]\n    const ii = this.rangeHelper._middle(range)\n    return new Ptr(range.block, ii)\n  }\n\n  getToPtr(i) {\n    const range = this.ranges[i][0][0]\n    const ii = this.rangeHelper._middle(range)\n    return new Ptr(range.block, ii)\n  }\n\n  getPtrBySelection(i, selection){\n    if (0 === selection.startOffset) {\n      return this.getFromPtr(i)\n    } else {\n      return  this.getToPtr(i)\n    }\n  }\n  getFromPtrByInitialOffset(i, layerIndex){\n    let left = this.getPtr(i - 1)\n    let right = this.getPtr(i)\n    return this.rangeHelper.getFrom(left, right, layerIndex)\n  }\n\n  getToPtrByInitialOffset(i, layerIndex){\n    let left = this.getPtr(i - 1)\n    let right = this.getPtr(i)\n    return this.rangeHelper.getTo(left, right, layerIndex)\n  }\n\n  async toDraft(decorator){\n    const raw = await this.performPull()\n    const content = convertFromRawToDraftState(raw)\n    const result = EditorState.createWithContent(content, decorator)\n    return result\n  }\n\n  fromDraft(content, layer, selection){\n    const draftBlock = content.getFirstBlock()\n    const text = draftBlock.getText()\n    let entityMap = []\n    for (let i = 0; i < text.length; i++){\n      let entityKey = draftBlock.getEntityAt(i)\n      entityMap[i] = entityKey\n    }\n    this.vm.entityMap = entityMap\n\n    const conv = new fromDraft(this)\n    return conv.perform(content, this.initialRaw.blocks[0].text.length, layer, selection)\n  }\n\n  async updateDraft(content, selection){\n    let newContentState = content\n    let i = 0\n\n\n    // Observer.subscribe('vm', callback)\n    const selectionBefore = content.getSelectionBefore()\n    const selectionAfter = content.getSelectionAfter()\n    const blockKey = content.getFirstBlock().getKey()\n\n    this.initialRaw = await this.initRanges(async () => this.performPull())\n    let toDraftRaw = this.initialRaw\n    console.log('cursor draft', toDraftRaw)\n    toDraftRaw.blocks[0].key = blockKey\n    if (this.vm.entityMap) {\n      this.vm.entityMap.forEach((entityKey, i) => {\n        toDraftRaw.entityMap[i].data.entityKey = entityKey\n      })\n    }\n    newContentState = convertFromRawToDraftState(toDraftRaw)\n    let selection2 = new SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: selectionAfter.getAnchorOffset(),\n      focusKey: blockKey,\n      focusOffset: selectionAfter.getFocusOffset(),\n      isBackward: true,\n      hasFocus: true\n    })\n\n    newContentState = newContentState.merge({\n      selectionBefore: selectionBefore,\n      selectionAfter: selectionAfter\n    })\n// console.log('editors', selectionAfter.toJSON(), selection.startOffset)\n    // Observer.unsubscribe(callback)\n    console.log('update:', this.pipe)\n    return newContentState\n  }\n}\n","import React from \"react\"\n\nexport default class VersionControl extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  async XcomponentDidMount() {\n    const indexes = await this.props.model.localDb.getIndexes()\n    console.log('indexes', indexes)\n    const commits = await this.props.model.vcs.getLocalCommits()\n    console.log('commits', commits)\n    this.setState({commits})\n\n    const pipes = await this.props.model.vcs.getLocalPipes()\n    console.log('pipes', pipes)\n  }\n\n  render() {\n    return \"\"\n    if (this.state.commits) {\n      return <div>\n        {\n          this.state.commits.docs.map(doc => {\n            var content = 'error'\n            switch (doc.type) {\n              case 'pipe':\n                content = <div>Create pipe <strong>{doc.desc}</strong> content: {doc.content}</div>\n                break;\n            }\n\n\n            return <li key={doc._id}>\n              {content}\n            </li>\n          })\n        }\n      </div>\n    }\n    return 'loading'\n  }\n}\n","import React from 'react';\nimport SplitPane from 'react-split-pane';\nimport './pane.css'\nimport TextIDE from './textIde'\nimport Layers from \"./layers\"\nimport Navigation from './navigation'\nimport PipeHelper from \"../core/helpers/pipeHelper\"\nimport { VM } from '../core/vm'\nimport { rootVM } from \"../core/rootVm\"\nimport VersionControl from \"./versionControl\"\n\nconst Pane = (props) =>{\n  // constructor(props) {\n  //   super(props);\n  //\n  //   // this.state = { loaded: false }\n  //   // this.update()\n  // }\n\n  // async componentDidUpdate(prevProps){\n  //   if (prevProps !== props) await this.update()\n  // }\n  //\n  // async update(){\n  //\n  // }\n  const navigationRef = React.createRef();\n  const updateTree = (tree) => {\n    navigationRef.current.setState({tree})\n  }\n\n    return (\n      <SplitPane split=\"vertical\" minSize={50} maxSize={600} defaultSize={300} className=\"primary\">\n        <SplitPane split=\"horizontal\" defaultSize={300}>\n          <div>\n            <h3><a href=\"https://lerd.dev\">LERD</a></h3>\n            <Navigation model={props.model} controller={props.controller} ref={navigationRef} tree={props.model.pipeHelper.tree} />\n          </div>\n          <SplitPane split=\"horizontal\" defaultSize={300}>\n            <div>\n              <button onClick={props.controller.createLayer}>Create Layer</button>\n              <Layers model={props.model} controller={props.controller} pipeHelper={props.model.pipeHelper} />\n            </div>\n            <div>\n              <VersionControl model={props.model}/>\n            </div>\n          </SplitPane>\n        </SplitPane>\n        <div>\n          <TextIDE model={props.model} controller={props.controller} pipeHelper={props.model.pipeHelper} updateTree={updateTree} vcs={props.vcs} format={props.format}/>\n          <div className=\"hints\">\n            <h5>Keyboard shortcuts:</h5>\n            <ul>\n              <li>Cmd + s : Commit changes</li>\n              <li>Ctrl + i : Insert pipe</li>\n              <li>Ctrl + / : Change pipe</li>\n              <li>Ctrl + c : Create pipe in pipe selector</li>\n              <li>Ctrl + Shift + c : Create pipe with value</li>\n              <li>Ctrl + e : Evaluate expression and insert</li>\n            </ul>\n          </div>\n\n        </div>\n      </SplitPane>\n   )\n// }\n};\nexport default Pane\n","import {libPipes} from \"../base\"\nimport {ActivePipe} from \"../active-pipe\"\n\nexport class PipeSearch {\n  constructor(vcs) {\n    this.vcs = vcs\n    this.pipes = {}\n    const a = libPipes\n    Object.values(libPipes).forEach(pipe => {\n      console.log('aaaa', pipe)\n      this.pipes[pipe.id] = pipe.desc\n    })\n    this.addedPipes = []\n  }\n\n\n  async load(){\n    if (!this.vcs) return this\n\n    const changes = await this.vcs.db.collection(process.env.REACT_APP_VCS_COLLECTION_NAME)\n        .where('authorId', 'in', [this.vcs.uid(), ''])\n        .orderBy(\"commitId\")\n        .orderBy(\"desc\")\n        .get()\n    changes.forEach(change => {\n      const data = change.data()\n      if (data.desc) {\n        this.pipes[data.pipeId] = data.desc\n        console.log('load', data.desc, data.pipeId)\n      } else {\n        debugger\n      }\n    })\n    return this\n  }\n\n  search(name, extraPipes=[]){\n    const entries = Object.entries(this.pipes).filter( row => {\n          const [pipeId, pipeName] = row\n          return pipeName.toLowerCase().match(name)\n        }\n    )\n    let vcsPipes\n    if (this.vcs) {\n      vcsPipes = entries.map((row) => {\n        const [pipeId, pipeName] = row\n        const pipe = this.vcs.getActivePipe(pipeId)\n        if (!pipe.desc) pipe.desc = pipeName\n        return pipe\n      })\n    } else {\n      vcsPipes = entries.flatMap((row) => {\n        const [pipeId, pipeName] = row\n        const match = pipeId.match(/^_l(.+)$/)\n        if (match) {\n          return libPipes[match[1]]\n        } else return []\n      })\n    }\n    const addedPipes = this.searchAdded(name)\n    return [].concat(addedPipes).concat(vcsPipes)\n  }\n\n  searchAdded(name) {\n    return this.addedPipes.filter(pipe => pipe.desc.toLowerCase().match(name))\n  }\n\n  add(pipe){\n    this.addedPipes.push(pipe)\n  }\n\n  changedPipes(){\n    return Object.values(this.vcs.pipesCache)\n        .concat(this.addedPipes)\n        .filter(pipe => pipe.new || (pipe instanceof ActivePipe && pipe.isChanged()))\n  }\n}\n","import React from 'react'\nimport { Pipe } from '../core/pipe'\nimport { VM } from '../core/vm'\nimport Pane from './pane'\nimport {Ptr} from \"../core/ptr\"\nimport {Patch} from \"../core/patch\"\nimport {\n  concatA,\n  concatB,\n  incA,\n  dec,\n  bypass,\n  equialsA,\n  equialsB,\n  hiPipe,\n  locationHash,\n  fetchA,\n  fetchB,\n  isEmpty,\n  emptyString,\n  mulB,\n  mulA, upcase, downcase,\n  httpGet, httpFetch, httpFetchStatus, logicalNot, byePipe\n} from '../core/base'\nimport Override from \"../core/override\"\nimport ReactGA from 'react-ga';\nimport FlakeId from 'flake-idgen';\nimport baseX from 'base-x';\nimport Registry from \"../core/registry\"\nimport {rootVM} from \"../core/rootVm\"\nimport PipeHelper from \"../core/helpers/pipeHelper\"\nimport {PipeSearch} from \"../core/vcs/pipe-search\"\nimport {localStorageGet, localStorageKey} from \"../core/lib/localStorage\"\nimport {locationQuery} from \"../core/lib/location-query\"\nimport pipeRequires from \"../core/pipe-requires\"\n\nwindow.base62 = baseX('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\nwindow.hashCode = function(s) {\n  var hash = 0, i, chr, overflow;\n  if (s.length === 0) return hash;\n  for (i = 0; i < s.length; i++) {\n    chr   = s.charCodeAt(i);\n    hash  = ((hash << 5) - hash) ^ chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\nwindow.flakeIdGen = new FlakeId({id: window.hashCode(navigator.userAgent + document.cookie)});\n\nexport default class RootContainer extends React.Component {\n  constructor (props) {\n    super(props)\n\nconsole.log('props', props.pipeId)\n    // let pipe = new Pipe([])\n    //\n    // let testlayer = new Pipe([])\n    // testlayer.desc = 'test Layer'\n    // testlayer.new = true\n    let aboutKey = new Pipe('about')\n    aboutKey.desc = 'about page key'\n\n    let rootKey = new Pipe([''])\n    rootKey.desc = 'root page key'\n\n    let pathKey = new Pipe('path')\n    pathKey.desc = 'about page key'\n\n    let langKey = new Pipe('lang')\n    langKey.desc = 'lang page key'\n\n    let inpipe = new Pipe('abc')\n    inpipe.desc = 'ABC'\n    let isAbout = new Pipe([locationHash, fetchA, equialsA])\n    isAbout.desc = 'is about page'\n    isAbout.color = 'red'\n    isAbout.setDep([], fetchB, pathKey)\n    isAbout.setDep([], equialsB, aboutKey)\n\n    let currentPath = new Pipe([locationHash, fetchA])\n    currentPath.desc=\"current path\"\n    currentPath.setDep([], fetchB, pathKey)\n\n    let path = new Pipe([])\n    path.desc = \"path value\"\n\n    let lang = new Pipe([])\n    lang.desc = \"lang value\"\n\n    let currentLang= new Pipe([locationHash, fetchA])\n    currentLang.desc = 'Current lang'\n    currentLang.setDep([], fetchB, langKey)\n\n    let urlHelper = new Pipe('#path='.split('').concat(concatA).concat('&lang='.split('')).concat(concatA))\n    urlHelper.desc = \"url helper\"\n    urlHelper.setDep([6, urlHelper], concatB, path)\n    urlHelper.setDep([13, urlHelper], concatB, lang)\n\n    let condition = new Pipe([])\n    condition.desc = 'layer1'\n    condition.setDep([], condition, isAbout)\n\n    let argInt = new Pipe([10])\n    let perc20 = new Pipe([1.2])\n    let perc5 = new Pipe([0.95])\n    let pdv = new Pipe([mulA])\n    pdv.setDep([], mulB, perc20)\n    pdv.desc = \"add 20% VAT\"\n    let discount = new Pipe([mulA])\n    discount.desc = \"discount 5%\"\n    discount.setDep([], mulB, perc5)\n\n\n\n\n\n    let pipe = new Pipe('123'.split('').concat(urlHelper).concat(urlHelper))\n    pipe.desc = 'Main Pipe'\n    pipe.setDep([3, pipe], path, aboutKey)\n    pipe.setDep([4, pipe], path, rootKey)\n    // pipe.setDep([0, pipe], fetchB, emptyPipe)\n    // pipe.setDep([], pipe, locationHash)\n    pipe.setDep([], path, currentPath)\n    pipe.setDep([], lang, currentLang)\n\n    let patch = new Patch('a', new Ptr(pipe, 0.9), new Ptr(pipe, 1.2), condition)\n    pipe.addPatch(patch)\n    let patch1 = new Patch('b', new Ptr(pipe, 1.9), new Ptr(pipe, 2.2), condition)\n    pipe.addPatch(patch1)\n    let patch2 = new Patch('a', new Ptr(pipe, 2.9), new Ptr(pipe, 3.2), condition)\n    pipe.addPatch(patch2)\n\n    pipe.layers = [condition]\n\n    // pipe.addPatch(new Patch('patch', new Ptr(pipe, 1.4), new Ptr(pipe, 1.4), isAbout))\n    // pipe.addPatch(new Patch('prefix', new Ptr(pipe, 0.9), new Ptr(pipe, 1.2)))\n    // pipe.addPatch(new Patch('sufix', new Ptr(pipe, 1.9), new Ptr(pipe, 2.2)))\n\n    // let pipe3 = new Pipe([concatA])\n    // let pipe2 = new Pipe([concatA])\n    // let pipe1 = new Pipe([pipe2])\n    // pipe1.desc = 'pipe1'\n    // pipe2.desc = 'pipe2'\n\n    let revisionId = localStorage.getItem('revisionId');\n    if (!revisionId) {\n      revisionId = Registry.newId()\n      localStorage.setItem('revisionId', revisionId)\n    }\n\n    let colors = [\n        '#b00',\n        '#0b0',\n        '#00b',\n        '#bb0',\n        '#0bb',\n        '#b0b',\n    ]\n    // let vm = new VM(emptyPipe)\n    this.state = {\n      // pipes: [incA, dec, bypass, pipe, equialsA, hiPipe, locationHash, fetchA, isAbout, concatA, terminator, isEmpty, emptyString, mulB, mulA, discount, upcase, downcase, httpGet],\n      // rootVM: vm,\n      // currentVM: vm,\n      currentLayer: undefined,\n      activeSuggest: null,\n      // activeSuggest: new Ptr(pipe, 1),\n      textide: null,\n    }\n    let self = this\n\n    this.controller = {\n      changeCurrentPipeDesc: function(value){\n        self.state.currentVM.pipe.desc = value\n        self.setState({currentVM: self.state.currentVM})\n      },\n      setDep: function (context, pipe, pipeDep) {\n        context.setDep(pipe, pipeDep)\n        self.setState({currentVM: self.state.currentVM})\n      },\n      removeDepPipe: function (context, pipe) {\n        context.removeDepPipe(pipe)\n        self.setState({currentVM: self.state.currentVM})\n      },\n      createPipe: () => {\n        ReactGA.event({\n          category: 'User',\n          action: 'create pipe'\n        });\n        let pipe = new Pipe([])\n        pipe.desc = prompt(\"Please enter pipe name\", 'New Pipe')  || \"New pipe\";\n        pipe.new = true\n        // this.state.pipes.push(pipe)\n        this.state.pipeSearch.add(pipe)\n        // self.state.currentVM.context.setDep(pipe, new Pipe(\"\"))\n        // self.setState({currentVM: self.state.currentVM})\n        // self.controller.setActivePipe(pipe)\n        return pipe\n      },\n      createStringPipe: () => {\n        const value = prompt(\"Please enter pipe value\", 'Value for pipe')  || \"Hello\";\n        let pipe = new Pipe(value)\n        pipe.desc = `\"${value}\"`\n        pipe.new = true\n        // this.state.pipes.push(pipe)\n        this.state.pipeSearch.add(pipe)\n        return pipe\n      },\n      setActiveVM: async (vm) => {\n        if (!vm){\n          debugger\n        }\n        const pipeHelper = await this.getPipehelper(vm, undefined)\n        self.setState({\n          currentVM: vm,\n          currentLayer: undefined,\n          pipeHelper\n        })\n      },\n      setActiveLayer: async (layer, layerValue) => {\n        if (layer){\n          Override.set(layer, true, !!layerValue)\n        }\n        const pipeHelper = await this.getPipehelper(this.state.currentVM, layer)\n        self.setState({currentLayer: layer, pipeHelper})\n      },\n      createLayer: async () => {\n        ReactGA.event({\n          category: 'User',\n          action: 'create layer'\n        });\n        self.state.currentVM.pipe.layerColors = self.state.currentVM.pipe.layerColors || colors\n\n        let layer = new Pipe([])\n        layer.new = true\n        layer.index = (self.state.currentVM.pipe.layers||[]).length\n        layer.color = self.state.currentVM.pipe.layerColors.shift() || 'black'\n        layer.desc = prompt(\"Please enter layer name\", 'New Layer')  || 'New Layer'\n        Override.set(layer, true, false)\n\n        self.state.currentVM.pipe.layers = (self.state.currentVM.pipe.layers||[]).concat(layer)\n        this.state.pipeSearch.add(layer)\n        const pipeHelper = await this.getPipehelper(this.state.currentVM, layer)\n        self.setState({pipeHelper})\n      },\n      toggleLayer: async (layer, value, actualValue) => {\n        Override.set(layer, !!value, !!actualValue)\n        // this.state.currentVM.context.setDep(layer, new Pipe( value ? '1' : ''), Context.refCurrentResult)\n        const pipeHelper = await this.getPipehelper(this.state.currentVM, layer)\n        self.setState({pipeHelper})\n      },\n      setActiveSuggest(ptr){\n        self.state.textide.setActiveSuggest(ptr)\n      },\n      async changeActiveSuggest(pipe) {\n        await self.state.textide.changePipe(pipe)\n        this.setActiveSuggest(null)\n      },\n      reload(callback){\n        self.setState({pipeHelper: self.state.pipeHelper}, () => {\n          if (callback) {\n            callback(self.state.textide.props.pipeHelper)\n          }\n        })\n      },\n      reload2: async () => {\n        const pipeHelper = await this.getPipehelper(this.state.currentVM, this.state.currentVM.pipe)\n        self.setState({pipeHelper})\n      }\n    }\n\n    window.addEventListener(\"hashchange\", ()=>{self.setState({currentVM: self.state.currentVM})}, false);\n  }\n\n  componentDidUpdate () {\n    console.log('rootcomponentDidUpdate')\n    // if (this.props.pipeId) {\n    //   console.log(this.state.localDB.get(this.props.pipeId))\n    // }\n  }\n\n  componentWillUnmount() {\n    console.log('root componentWillUnmount')\n  }\n\n  async componentDidMount() {\n    console.log('rootcomponentDidMount')\n    // const pipes = await this.state.vcs.getLocalPipes()\n    // const vcs = new VCS()\n    // await vcs.db.enablePersistence({synchronizeTabs:true})\n    // await vcs.auth()\n    const vcs = this.props.vcs\n    const pipeSearch = new PipeSearch(vcs)\n    await pipeSearch.load()\n\n    if (this.props.pipeId) {\n      // const pipe = await this.state.vcs.getPipe(pipes[0])\n      const pipe = vcs.getActivePipe(this.props.pipeId)\n      const vm = new VM(pipe)\n      const pipeHelper = await this.getPipehelper(vm)\n      this.setState({currentVM: vm, rootVM: vm,  vcs, pipeSearch, pipeHelper})\n    } else {\n      pipeSearch.add(this.props.defaultPipe)\n      const vm = new VM(this.props.defaultPipe)\n      const pipeHelper = await this.getPipehelper(vm)\n      this.setState({currentVM: vm, rootVM: vm, pipeSearch, pipeHelper})\n    }\n  }\n\n  async getPipehelper(currentVM, currentLayer){\n    const self = this\n    rootVM.resetCache()\n    console.log('new pipehelper', currentVM.pipe.desc)\n    const pipeHelper = new PipeHelper(currentVM.pipe, currentVM, async ()=>{\n      // await stateRootVM.toValue()\n      let topVM = currentVM\n      while (topVM.parent instanceof VM) { topVM = topVM.parent }\n      await topVM.toValue()\n    }, async ()=>{\n      debugger\n    })\n\n    await pipeHelper.init(currentLayer)\n\n    let promises = rootVM.cache.valueSeq().toArray().filter((value) => {\n      return value instanceof Promise\n    })\n    console.log('promises count', promises.length)\n    await Promise.all(promises)\n    await pipeHelper.performPull()\n    return pipeHelper\n  }\n\n  render() {\n    if (!this.state.pipeHelper) return null\n\n    return <div>\n      <Pane model={this.state} controller={this.controller} vcs={this.props.vcs} format={this.props.format}/>\n    </div>\n  }\n}\n","import {Pipe} from \"../core/pipe\"\nimport {\n  byePipe,\n  concatA,\n  concatB,\n  fetchA,\n  fetchB,\n  hiPipe,\n  httpFetch,\n  httpGet, isPresent,\n  locationHash,\n  logicalNot\n} from \"../core/base\"\nimport {\n  localStorageGet, localStorageGetDependency,\n  localStorageKey,\n  localStorageSet,\n  localStorageSetDependency,\n  localStorageSetResult\n} from \"../core/lib/localStorage\"\nimport {Patch} from \"../core/patch\"\nimport {Ptr} from \"../core/ptr\"\nimport {locationQuery} from \"../core/lib/location-query\"\nimport pipeRequires from \"../core/pipe-requires\"\nimport {lerdMap, mapName} from \"../core/lib/lerd-map\"\nimport {Input} from \"../core/lib/input\"\nimport {PipeInput} from \"../core/pipe-input\"\nimport {postData} from \"../core/lib/post-data\"\n\nlet httpPipe = new Pipe([httpGet, concatA], {desc: \"Empty pipe\"}) //,'d'\nconst highPipe = new Pipe([httpPipe], {desc: 'highpipe'})\n//emptyPipe.new = true\n// emptyPipe.setDep([], emptyPipe, terminator)\n// emptyPipe.setDep([], emptyPipe, httpGet)\n// emptyPipe.setDep([1 ], httpFetch, hiPipe)\nhttpPipe.setDep([1, httpPipe], concatB, hiPipe)\n// emptyPipe.new = true\n// const cond1 = new Pipe(['1'], {desc: 'patch1'})\n//       let patch1 = new Patch(\"x\", new Ptr(emptyPipe, 5.5), new Ptr(emptyPipe, 5.5), cond1)\n//       let patch2 = new Patch(\"y\", new Ptr(emptyPipe, 6.5), new Ptr(emptyPipe, 6.5), new Pipe([''], {desc: 'patch2'}))\n//       let patch3 = new Patch(\"z\", new Ptr(emptyPipe, 6.6), new Ptr(emptyPipe, 6.6), new Pipe([''], {desc: 'patch3'}))\n// pipeSearch.add(cond1)\n// let patch2 = new Patch(\"2\", new Ptr(emptyPipe, 2.8), new Ptr(emptyPipe, 2.9), new Pipe(['']))\n// emptyPipe.addPatch(patcht)\n// emptyPipe.addPatch(new Patch(\"f\", new Ptr(patcht, 0.4), new Ptr(patcht, 0.5), new Pipe(['1'], {desc: 'patchF'})))\n// emptyPipe.addPatch(new Patch(\"o\", new Ptr(emptyPipe, 1.2), new Ptr(emptyPipe, 1.3)))\n\n// emptyPipe.addPatch(patch1, patch2, patch3)\nconst urlPipe = new Pipe('/manifest.json', {desc: 'url'})\n// emptyPipe.setDep([], emptyPipe, httpGet)\nhttpPipe.setDep([], httpFetch, urlPipe)\n\nconst stringPipe = new Pipe('test', {desc: 'stringPipe'})\n\nconst localStoragePipe = new Pipe([localStorageGet], {desc: 'localStoragePipe'})\nconst rawLocalStorage = new Pipe([], {desc: 'raw localstorage'})\nlocalStoragePipe.setDep([0, localStoragePipe], localStorageKey, stringPipe)\n\nconst layerEmptyLocalStorage = new Pipe([logicalNot], {desc: \"layerEmptyLocalStorage\"})\nconst defaultStoragePatch = new Patch([[]], new Ptr(localStoragePipe, 2.5), new Ptr(localStoragePipe, 2.5), layerEmptyLocalStorage)\nlocalStoragePipe.addPatch(defaultStoragePatch)\nlocalStoragePipe.setDep([], layerEmptyLocalStorage, rawLocalStorage)\n\nconst templatePipe = new Pipe('<h1>TODO</h1><form><input name=\"name\"/></form>'.split(''), {desc: \"templatePipe\"})\nconst routerPipe = new Pipe([locationQuery, fetchA], {desc: 'routerPipe'})\nrouterPipe.setDep([1, routerPipe], fetchB, new Pipe('name'))\n\nconst dtestPipe = new Pipe(['1',concatA, concatA], {desc: 'dtestPipe', requires: pipeRequires.NONE})\ndtestPipe.setDep([1, dtestPipe], concatB, hiPipe)\ndtestPipe.setDep([], concatB, byePipe)\n\nconst aPipe = new Pipe([], {desc: 'aPipe'})\n\nconst emptyPipe = new Pipe([], {desc: 'Empty Pipe', requires: pipeRequires.VALUE})\nemptyPipe.new = true\n// pipeSearch.add(emptyPipe)\n\nconst simplePipe = new Pipe([hiPipe], {desc: 'aPipe'})\nsimplePipe.new = true\n\nconst firstName = new Pipe([], {desc: 'firstName', requires: pipeRequires.VALUE})\nconst lastName = new Pipe([], {desc: 'lastName', requires: pipeRequires.VALUE})\nconst fullName = new Pipe([concatA, ' ', concatA], {desc: 'fullName'})\nfullName.setDep([0, fullName], concatB, firstName)\nfullName.setDep([2, fullName], concatB, lastName)\nconst fullNameDemo = new Pipe([fullName], {desc: 'fullNameDemo'})\nfullNameDemo.setDep([], firstName, hiPipe)\nfullNameDemo.setDep([], lastName, byePipe)\n\n\nconst layersPipe= new Pipe('123', {desc: 'pipeWithCondition'})\nconst layer1 = new Pipe([], {desc: 'layer1'})\nconst pipeWithConditionPatch = new Patch('a', new Ptr(layersPipe, 1.5), new Ptr(layersPipe, 2.5), layer1)\nlayersPipe.addPatch(pipeWithConditionPatch)\n\nconst layersPipeNew = new Pipe('123', {desc: 'pipeWithConditionNew'})\nlayersPipeNew.new = true\nconst pipeWithConditionPatchNew = new Patch('a', new Ptr(layersPipeNew, 1.5), new Ptr(layersPipeNew, 2.5), layer1)\npipeWithConditionPatchNew.new = true\nlayersPipeNew.addPatch(pipeWithConditionPatchNew)\n\nconst localStorageTest = new Pipe(['a',localStorageSet], {desc: 'localStorageTest'})\nlocalStorageTest.setDep([1, localStorageTest], localStorageKey, hiPipe)\n\nconst mapTest = new Pipe([[\"1\", \"2\"], lerdMap], {desc: 'mapTest'})\nconst mapper = new Pipe(['a', Input, 'b'], {desc: \"mapper\"})\nmapTest.setDep([1, mapTest], mapName, mapper)\n\nconst localStorageKeyValue = new Pipe('todo', {desc: \"localStorageKeyValue\"})\nconst storageTodoItems = new Pipe([localStorageGet], {desc: \"storageTodoItems\"})\nstorageTodoItems.setDep([0, storageTodoItems], localStorageKey, localStorageKeyValue)\nconst todoItems = new Pipe([storageTodoItems], {desc: 'todoItems'})\nconst isTodoItemsBlank = new Pipe([Input, isPresent, logicalNot], {desc: 'isTodoItemsBlank', requires: pipeRequires.VALUE})\nisTodoItemsBlank.setDep([], isTodoItemsBlank, storageTodoItems)\nconst emptyStorage = new Patch([[]], new Ptr(todoItems, 1.5), new Ptr(todoItems, 1.5), isTodoItemsBlank)\ntodoItems.addPatch(emptyStorage)\n\nconst todoItemViewContent = '<ul>#</ul>'.split('').map(i=> (i === '#' ? Input : i))\n\nconst todoItemView=new Pipe(todoItemViewContent, {desc: 'todoItemView'})\nconst todoListView = new Pipe([todoItems, lerdMap], {desc: \"todoListView\"})\ntodoListView.setDep([1, todoListView], mapName, todoItemView)\nconst t1 = \"<form method=\\\"POST\\\" action='/todo_add'>\\n\" +\n    \"<input name=\\\"todo\\\"/>\\n\" +\n    \"<input type=\\\"hidden\\\" name=\\\"format\\\" value=\\\"html\\\"'/>\\n\" +\n    \"<input type=\\\"hidden\\\" name=\\\"run\\\" value=\\\"nohold\\\"'/>\\n\" +\n    \"<button type=\\\"submit\\\" name=\\\"add\\\">Add</button>\\n\" +\n    \"  <ul>\\n\"\nconst t2 = \"  </ul>\\n\" +\n    \"</form>\\n\"\nconst todoView = new Pipe(t1.split('').concat(concatA).concat(t2.split('')), {desc: \"todoView\"})\ntodoView.setDep([t1.length, todoView], concatB, todoListView)\n\nconst addedItem = new Pipe([postData, fetchA], {desc: \"addedItem\"})\naddedItem.setDep([1, addedItem], fetchB, new Pipe('todo'))\n\nconst todoAdd = new Patch([[], concatA, concatA, localStorageSet], new Ptr(todoView, 0.5), new Ptr(todoView, 0.5), postData)\ntodoView.addPatch(todoAdd)\ntodoView.setDep([1, todoAdd], concatB, addedItem)\ntodoView.setDep([2, todoAdd], concatB, todoItems)\ntodoView.setDep([3, todoAdd], localStorageKey, localStorageKeyValue)\n\nexport {emptyPipe, layersPipe, layersPipeNew, localStorageTest, mapTest, todoView, todoAdd, todoItems}\n","import React from 'react';\n// import { render } from 'react-dom'\nimport './App.css';\nimport RootContainer from \"./components/root-container\"\nimport ReactGA from 'react-ga';\nimport {BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport {VCS} from \"./core/vcs\"\nimport {emptyPipe, layersPipe, layersPipeNew, localStorageTest, mapTest, todoAdd, todoView} from \"./aux/pipes\"\nimport {Pipe} from \"./core/pipe\"\nimport {concatA, concatB, hiPipe, httpFetch, httpGet, upcase} from \"./core/base\"\nimport {lerdMap, mapName} from \"./core/lib/lerd-map\"\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    let vcs\n    if (process.env.REACT_APP_ENV === 'test'){\n      vcs = null\n    } else {\n      vcs = new VCS()\n      await vcs.db.enablePersistence({synchronizeTabs: true})\n      await vcs.auth()\n    }\n\n    this.setState({vcs})\n  }\n\n    render() {\n    if(!this.state) return null\n      const depPipe = new Pipe([concatA], {desc: 'depPipe'})\n      depPipe.setDep([0, depPipe], concatB, hiPipe)\n      depPipe.new = true\n\n      const lerdMapTest = new Pipe([['hi','bye'], lerdMap], {desc: 'lerdMapTest'})\n      // lerdMapTest.setDep([1, lerdMapTest], mapName, upcase)\n\n      const nestedSimplePipe = new Pipe(['a', concatA], {desc: 'nestedSimplePipe'})\n      const simplePipe = new Pipe(['a', nestedSimplePipe], {desc: 'simplePipe'})\n      simplePipe.setDep([1, simplePipe], concatB, httpGet)\n\n      return <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/layers\" render={({ match }) => (<RootContainer defaultPipe={layersPipe} />)} />\n            <Route path=\"/layers_new\" render={({ match }) => (<RootContainer defaultPipe={layersPipeNew} />)} />\n            <Route path=\"/maptest\" render={({ match }) => (<RootContainer defaultPipe={mapTest} />)} />\n            <Route path=\"/empty\" render={({ match }) => (<RootContainer defaultPipe={lerdMapTest} />)} />\n            <Route path=\"/simple\" render={({ match }) => (<RootContainer defaultPipe={simplePipe} />)} />\n            <Route path=\"/todo\" render={({ match }) => (<RootContainer defaultPipe={todoView}/>)} />\n            <Route path=\"/todo_add\" render={({ match }) => (<RootContainer defaultPipe={todoAdd} />)} />\n            <Route path=\"/:pipeId?\"\n                   render={({ match }) => (<RootContainer pipeId={match.params.pipeId} vcs={this.state.vcs} defaultPipe={emptyPipe} />) }\n            />\n          </Switch>\n        </Router>\n      </div>\n    }\n}\n\n// const initialState = {\n//   count: 0\n// }\n\n// render(<App {...initialState} />)\n\nReactGA.initialize('UA-128069673-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n","import {Value} from \"./value\"\n\nconst nullValue = new Value(null)\n\nexport default nullValue\n","import {VM} from \"./vm\"\nimport {Value} from \"./value\"\n\nexport class PipePushValue extends Value {\n  constructor(vm, depPipe, input) {\n    super()\n    this.vm = vm\n    this.depPipe = depPipe\n    this.input = input\n  }\n\n  async toValue(){\n    if (this.resolved) return this.value\n\n    const vm = new VM(this.depPipe, this.vm, [this.depPipe])\n    this.value = await vm.push(this.input)\n    this.resolved = true\n    return this.value\n  }\n}\n","import {Observer} from \"./observer\"\nimport {httpFetch, httpGet, locationHash, locationHashResult} from \"./base\"\nimport {Map} from \"immutable\"\nimport {\n  localStorageGet,\n  localStorageGetDependency,\n  localStorageGetInternal,\n  localStorageSet, localStorageSetDependency, localStorageSetResult\n} from \"./lib/localStorage\"\nimport {locationQuery, locationQueryDep, locationQueryResult} from \"./lib/location-query\"\nimport nullValue from \"./null-pipe-value\"\nimport {ExternalDep} from \"./external-dep\"\nimport {PipePushValue} from \"./pipe-push-value\"\nimport {VM} from \"./vm\"\nimport {postData, postDataResult} from \"./lib/post-data\"\n\nclass RootVM {\n  constructor(){\n    this.resetCache()\n    this.states = Map()\n    this.runStates = Map()\n  }\n\n  resetCache(){\n    this.cache = Map()\n  }\n\n  getDep(origin, requestedPipe, requesterId, vmForDep, callerVM){\n    let depPipe = null\n    if (requestedPipe === locationHash) depPipe = locationHashResult\n    if (requestedPipe === locationQueryDep) depPipe = locationQueryResult\n    if (requestedPipe === localStorageGetDependency) depPipe = localStorageGetInternal\n    else if (requestedPipe === httpGet) depPipe = httpFetch\n\n    if (requestedPipe instanceof ExternalDep) {\n      if (requestedPipe.pipe === localStorageGet) depPipe = localStorageGetInternal\n      if (requestedPipe.pipe === localStorageSet) depPipe = localStorageSetResult\n      if (requestedPipe.pipe === postData) depPipe = postDataResult\n    }\n\n    const dep = depPipe ? new PipePushValue(new VM(requestedPipe), depPipe, requestedPipe.payload) : nullValue\n\n    Observer.fire('vm_getdep', {requesterId: requesterId, vm: this, origin: origin, requestedPipe: requestedPipe, dep: dep})\n\n    return dep\n  }\n\n  treeId(){\n    return []\n  }\n}\n\nconst rootVM = new RootVM()\nexport { rootVM }\n","import {Pipe} from \"../pipe\"\n\nexport const Input = new Pipe([{\n  push: async function(value, vm, origin){\n    const input = vm.parent.input\n    if (typeof input === 'string' && typeof value === 'string'){\n      return value.concat(input)\n    } else {\n      return input\n    }\n  }\n}], {desc: 'Input'})\n","import {Block} from \"./block\"\nimport {Map, List, Set} from \"immutable\"\nimport pipeRequires from \"./pipe-requires\"\n\nexport class Pipe extends Block{\n  constructor(content, {desc, requires} = {desc: ''} ){\n    super(content)\n    this.patches = []\n    this.deps = Map()\n    this.desc = desc\n    this.requires = requires || pipeRequires.NOTHING\n  }\n\n  addPatch(...patches){\n    Array.prototype.push.apply(this.patches, patches)\n    this.patches.sort((a,b) => {\n      if (a.from.i < b.from.i){\n        return -1\n      }\n      if (a.from.i > b.from.i){\n        return 1\n      }\n      return 0\n    })\n  }\n\n  getPatches () {\n    return this.patches\n  }\n\n  // setArgs(i, requestedPipe, depPipe){\n  //   this.args = this.args.setIn([i, requestedPipe], depPipe)\n  // }\n  //\n  // getArgs(i){\n  //   return this.args.get(i)\n  // }\n\n  // [i, block]\n  // [originPipe]\n  setDep(origin, requestedPipe, depPipe){\n    this.deps = this.deps.setIn([List(origin)].concat(requestedPipe), depPipe)\n  }\n\n  getDep(origin, pipe) {\n    return this.deps.getIn([List(origin)].concat(pipe))\n  }\n\n  removeDep(origin, pipe){\n    this.deps = this.deps.deleteIn([List(origin)].concat(pipe))\n  }\n}\n","import {VM} from \"./vm\"\nimport {Value} from \"./value\"\n\nexport class PipeValue extends Value {\n  constructor(vm, depPipe) {\n    super()\n    this.vm = vm\n    this.depPipe = depPipe\n  }\n\n  async toValue(){\n    this.value = await new VM(this.depPipe, this.vm, [this.depPipe]).toValue()\n    this.resolved = true\n    return this.value\n    // return await this.getDepPipeVM().toValue()\n  }\n\n  // getDepPipeVM(){\n  //   if (this.depPipeVM) return this.depPipeVM\n  //\n  //   this.depPipeVM = new VM(this.depPipe, this.vm, [this.depPipe])\n  //   return this.depPipeVM\n  // }\n  //\n  // getExportedValueFor(pipe) {\n  //   if (this.depPipe.isExported(pipe)) {\n  //     const value = this.getDepPipeVM().getInternalPipeValue(pipe)\n  //     return new Value(value)\n  //   }\n  // }\n}\n","import {Pipe} from \"../pipe\"\nimport {VM} from \"../vm\"\nimport {PipeValue} from \"../pipe-value\"\nimport {Observer} from \"../observer\"\n\nconst mapName = new Pipe([], {desc: 'mapName'})\nconst lerdMap = new Pipe([{\n  push: async function(input, vm, origin){\n    const dep = vm.getDep([], mapName, vm.treeId(), vm, vm)\n    const resolvedInput = await vm._toValue(input)\n    let currentVm = vm\n    let result = []\n    try {\n      for(const item of resolvedInput) {\n        try {\n          const itemVM = new VM(dep.depPipe, currentVm, [])\n\n          let data = {vm: itemVM, input: item}\n          Observer.fire('vm_push_child', data)\n          const pushResult = await itemVM.push(item)\n\n          result = result.concat(pushResult)\n          currentVm = itemVM\n        } catch { result = result.concat(NaN) }\n      }\n    } catch(e) { return NaN }\n    return result\n    // try {\n    //   const result = await Promise.all(resolvedInput.map(async item => {\n    //     if (!(dep instanceof PipeValue)) return NaN\n    //\n    //     const itemVM = new VM(dep.depPipe, vm, [])\n    //     return await itemVM.push(item)\n    //   }))\n    //   return result\n    // } catch { return NaN }\n  }\n}], {desc: 'lerdMap'})\n\nexport {lerdMap, mapName}\n","import {Pipe} from \"../pipe\"\nimport {VM} from \"../vm\"\n\nconst locationQueryDep = new Pipe([], {desc: 'locationQueryDep'})\nconst locationQueryResult = new Pipe([{\n  push: (value, vm, origin) => {\n\n    const params = (new URL(window.location)).searchParams.entries()\n    let query = {}\n    for (const [key, value] of params) { query[key] = value }\n    return query\n    return window.location.hash.substr(1).split('&')\n        .filter(str => str.length > 0)\n        .map(str => {\n          let [key, value] = str.split('=');\n          return {[key]: decodeURI(value)};\n        })\n        .reduce((prev, curr) => Object.assign(prev, curr), {});\n  }\n}], {desc: 'locationQueryResult'})\n\nconst locationQuery = new Pipe([{\n  push: (value, vm, origin) => {\n    console.log('push id:', vm.treeId())\n    let depPipe = vm.getDep(origin, locationQueryDep, vm.treeId(), null, vm)\n    return new VM(depPipe, vm, []).toValue()\n  }\n}], {desc: 'locationHash'})\n\nexport { locationQuery, locationQueryResult, locationQueryDep }\n","import { Map } from 'immutable'\nlet overrides = Map()\n\nexport default class Override {\n  static process(action, value){\n    if (overrides.has(action)){\n      return overrides.get(action)\n    } else {\n      return value\n    }\n  }\n\n  static set(action, overrideValue, actualValue){\n    if (overrideValue === actualValue){\n      if (overrides.has(action)) {\n        overrides = overrides.delete(action)\n      }\n    } else {\n      overrides = overrides.set(action, overrideValue)\n    }\n  }\n\n  static isOverridden(action){\n    return overrides.has(action)\n  }\n\n  static getOverride(action){\n    return overrides.get(action)\n  }\n}\n","import Registry from \"./registry\"\n\nvar ids = new Map()\n\nexport class ExternalDep{\n  static getInstance(pipe, payload, klass = ExternalDep) {\n    const key = JSON.stringify({\n      id: Registry.getId(pipe),\n      payload: payload\n    })\n\n    if (!ids.has(key)) {\n      const object = new klass(pipe, payload)\n      ids.set(key, object);\n    }\n\n    return ids.get(key);\n  }\n\n  constructor(pipe, payload){\n    this.pipe = pipe\n    this.payload = payload\n\n    const args = Object.entries(payload).map((e) => `${e[0]}: ${e[1]}`).join(', ')\n    this.desc = `${pipe.desc}(${args})`\n  }\n\n  getDep(origin, pipe) {\n  }\n}\n","import Registry from \"./registry\"\n\nexport class Block {\n  constructor(content){\n    this.content = content\n  }\n\n  getId() {\n    if (!this.id) this.id = Registry.newId()\n    return this.id\n  }\n}\n","import {Pipe} from \"../pipe\"\nimport {ExternalDep} from \"../external-dep\"\n\nconst postData = new Pipe([{\n  push: async (value, vm, origin) => {\n    const externalDep = ExternalDep.getInstance(postData, {} )\n    let dep = vm.getDep(origin, externalDep, vm.treeId(), null, vm)\n    return await dep.toValue()\n  }\n}], {desc: 'postData'})\n\nconst postDataResult = new Pipe([{\n  push: async function(input, vm, origin){\n    return window.postData\n  }\n}], {desc: 'postDataResult'})\n\nexport { postData, postDataResult }\n","import {Pipe} from \"./pipe\"\nimport {VM} from \"./vm\"\nimport {Value} from \"./value\"\nimport {PipeValue} from \"./pipe-value\"\nimport pipeRequires from \"./pipe-requires\"\n\nconst reduceBody = new Pipe([], {desc: 'reduceBody', requires: pipeRequires.PIPE})\nconst reduceCondition = new Pipe([], {desc: 'reduceCondition', requires: pipeRequires.PIPE})\nconst reduce = new Pipe([{\n  push: async function(input, vm, origin){\n    vm.notifyPull(reduceBody, reduce)\n    vm.notifyPull(reduceCondition, reduce)\n\n    const bodyPipe = vm.getDep([origin], reduceBody, vm.treeId(), null, vm)?.depPipe\n    let currentVM = new VM(reduceBody, vm, [reduceBody])\n\n    let i = 10\n    while (i-- > 0) {\n      const conditionValue = await new VM(reduceCondition, currentVM, [reduceCondition]).toValue()\n      console.log('condition', conditionValue)\n      if (!conditionValue) break;\n      currentVM = new VM(bodyPipe, currentVM, [bodyPipe])\n    }\n\n    const result = await currentVM.toValue()\n\n\n    // const bodyPipe = vm.getDep([origin], reduceBody, vm.treeId())\n    // if (!(bodyPipe instanceof Pipe)) {\n    //   debugger\n    //   return input\n    // }\n    // let prevVM, nextResut\n    // let bodyVM = new VM(reduceBody, vm, origin)\n    // let result = input\n    // let i = 10\n    // while (i-- > 0) {\n    //   const value = await bodyVM.toValue()\n    //   nextResut = await bodyVM.push(result, prevVM)\n    //   const conditionVM = new VM(reduceCondition, bodyVM, [reduceCondition])\n    //   const conditionValue = await conditionVM.toValue()\n    //   if (!conditionValue) break;\n    //   result = nextResut\n    //   prevVM = bodyVM\n    //   bodyVM = new VM(bodyPipe, vm, origin)\n    // }\n\n\n    return result\n  }\n}], {desc: 'reduce'})\n\n\nclass ReduceInput extends Value{\n  constructor(vm) {\n    super()\n    this.vm = vm\n  }\n\n  getExportedValueFor(pipe){\n    if (this.vm.pipe.isExported(pipe)){\n      return new PipeValue(this.vm, pipe)\n    }\n  }\n}\nexport {reduceBody, reduceCondition, reduce}\n/*\n\"const 0\" -> sum\n\n\n */\n","import {Pipe} from './pipe'\nimport {VM} from './vm'\nimport {Dep} from './dep'\nimport { rootVM } from \"./rootVm\"\nimport { List } from \"immutable\"\nimport {PipeValue} from \"./pipe-value\"\nimport {Value} from \"./value\"\nimport {reduceBody, reduceCondition, reduce} from \"./reduce\"\nimport {localStorageGet, localStorageKey, localStorageSet} from './lib/localStorage'\nimport {lerdMap, mapName} from \"./lib/lerd-map\"\nimport {locationQuery} from \"./lib/location-query\"\nimport pipeRequires from \"./pipe-requires\"\nimport {Input} from \"./lib/input\"\n\nconst concatB = new Pipe([Input], {requires: pipeRequires.VALUE})\nconst concatA = new Pipe([{\n  push: async function(value, vm, origin){\n    vm.notifyPull(concatB, concatA)\n    const a = await vm.toString(value)\n    const b = await new VM(concatB, vm, origin).toValue()\n    if (typeof a.concat !== 'function') return NaN;\n\n    return a.concat(b)\n  }\n}])\nconcatA.desc = 'Concatenation'\nconcatB.desc = 'Concatenation B'\n\nconst incB = new Pipe([1])\nconst incA = new Pipe([{\n  push: async (value, vm, origin) => {\n    vm.notifyPull(incB, incA)\n    return await vm._toValue(value) + await new VM(incB, vm, origin).toValue()\n  }\n}])\nincA.desc = 'Increment'\n\nconst dec = new Pipe([{\n  push: async (value, vm, origin) => {\n    const a = await vm._toValue(value)\n    return a - 1\n  }\n}])\ndec.desc = 'Decrement'\n\nconst sumArgument = new Pipe([Input], {desc: \"sumArgument\", requires: pipeRequires.VALUE})\nconst sum = new Pipe([{\n  push: async (input, vm, origin) => {\n    vm.notifyPull(sumArgument, sum)\n    const a = await Value.toValue(input)\n    const b = await new VM(sumArgument, vm, origin).toValue()\n    return a + b\n  }\n}], { desc: 'Sum' })\n\nconst conditionLteArgument = new Pipe([Input], {requires: pipeRequires.VALUE})\nconst conditionLte = new Pipe([{\n  push: async (input, vm, origin) => {\n    vm.notifyPull(conditionLteArgument, conditionLte)\n    const localVM = new VM(conditionLteArgument, vm, origin)\n    const b = await localVM.toValue()\n    const a = await Value.toValue(input)\n    return a <= b\n  }\n}], { desc: 'Condition LTE' })\n\nconst mulB = new Pipe([])\nconst mulA = new Pipe([{\n  push: function(value, vm, origin){\n    return vm._toValue(value) * new VM(mulB, vm, origin).toValue()\n  }\n}])\nmulA.desc = 'Multiply A'\nmulB.desc = 'Multiply B'\n\nconst repipeB = new Pipe([Input], {requires: pipeRequires.VALUE})\nconst repipeA = new Pipe([{\n  push: function(value, vm, origin){\n    return new PipeValue(new VM(repipeB, vm, origin), repipeB)\n  }\n}])\nrepipeA.desc = 'repipe to repipeB pipe'\nrepipeB.desc = 'repipeB'\n\nconst whileCond = new Pipe([])\n\nconst bypass = new Pipe([{\n  push: (value, vm) => {\n    return value\n  }\n}])\nbypass.desc = 'Bypass'\n\nconst tmpPipe = new Pipe([\"1\"])\ntmpPipe.desc = 'tmp pipe'\n\nconst equialsB = new Pipe([])\nequialsB.desc = \"Equials To\"\nconst equialsA = new Pipe([{\n  push(value, vm, origin) {\n    return vm._toValue(value) === new VM(equialsB, vm, origin).toValue()\n  }\n}])\nequialsA.desc = \"Equials\"\n\nconst isEmpty = new Pipe([{\n  push(value, vm, origin) {\n    return !vm._toValue(value)\n  }\n}])\nisEmpty.desc = \"Is Empty\"\n\nconst hiPipe = new Pipe('hi')\nhiPipe.desc = \"Hi pipe\"\nconst byePipe = new Pipe('bye', {desc: 'Bye Pipe'})\n\nconst fetchB = new Pipe([Input], {requires: pipeRequires.VALUE})\nconst fetchA = new Pipe([{\n  push: async (value, vm, origin) => {\n    vm.notifyPull(fetchB, fetchA)\n    const object = value\n    const methodName = await new VM(fetchB, vm, origin).toValue()\n    if (typeof object !== 'object' || object === null) return NaN\n    if (object[methodName] instanceof Function) {\n      return object[methodName]()\n    } else return object[methodName]\n  }\n}])\nfetchA.desc = \"Object fetch\"\nfetchB.desc = \"Object fetch key\"\n\nconst locationHashResult = new Pipe([{\n  push: (value, vm, origin) => {\n    return window.location.hash.substr(1).split('&')\n        .filter(str => str.length > 0)\n        .map(str => {\n          let [key, value] = str.split('=');\n          return {[key]: decodeURI(value)};\n        })\n        .reduce((prev, curr) => Object.assign(prev, curr), {});\n  }\n}])\nlocationHashResult.desc = \"window location result\"\n\nconst locationHash = new Pipe([{\n  push: (value, vm, origin) => {\n    console.log('push id:', vm.treeId())\n    let depPipe = vm.getDep(origin, locationHash, vm.treeId(), null, vm)\n    return new VM(depPipe, vm, []).toValue()\n  }\n}])\nlocationHash.desc = \"window location\"\n\nconst httpFetch = new Pipe([\n  {\n    push: async (value, vm, origin) => {\n      let url = await vm._toValue(value)\n      let key = List(vm.treeId().concat(url))\n      let result = rootVM.cache.get(key, null)\n      if (result === null) {\n        let xhttp = new XMLHttpRequest();\n        result = new Promise((resolve, reject) => {\n          xhttp.onreadystatechange = function() {\n            if (this.readyState === 4){\n              resolve(xhttp)\n            }\n          }\n          xhttp.open(\"GET\", url, true);\n          xhttp.send();\n        });\n        rootVM.cache = rootVM.cache.set(key, result)\n      }\n      const response = await result\n      return response\n    }\n  },\n], {desc: \"http get url\"})\nconst httpFetchResult = new Pipe([], {desc: 'httpFetchResult'})\n// httpFetch.setDep([1, httpFetch], forkName, httpFetchResult)\n\nconst stringStatus = new Pipe('status', {desc: 'stringStatus'})\n\nconst httpFetchStatus = new Pipe([fetchA], {desc: 'httpFetchStatus'})\nhttpFetchStatus.setDep([0, httpFetchStatus], fetchB, stringStatus)\n\nhttpFetch.setDep([], httpFetchStatus, httpFetchResult)\n\nconst stringResponse = new Pipe('response', {desc: 'stringResponse'})\nhttpFetch.setDep([2, httpFetch], fetchB, stringResponse)\n\nconst httpGet = new Pipe([\n  {\n    push: (value, vm, origin) => {\n      let depPipe = vm.getDep(origin, httpGet, vm.treeId(), null, vm)\n      return new VM(depPipe, vm, []).toValue()\n    }\n  }\n], {desc: \"http get\"})\n\nconst upcase = new Pipe([{\n  push: async (value, vm, origin) => {\n    let v = await vm._toValue(value)\n    return v === undefined  ? v : v.toUpperCase()\n  }\n}])\nupcase.desc = \"UpCase\"\n\nconst downcase = new Pipe([{\n  push: async (value, vm, origin) => {\n    return (await vm._toValue(value)).toLowerCase()\n  }\n}])\ndowncase.desc = \"DownCase\"\n\n\nconst isPresent = new Pipe([{\n  push: (value, vm, origin) => {\n    if (value && typeof value.length === 'number'){\n      return value.length > 0\n    } else {\n      return value instanceof Object\n    }\n  }\n}],{desc: 'Present?'})\n\nconst logicalNot = new Pipe([{\n  push: async (value, vm, origin) => {\n    return !(await vm._toValue(value))\n  }\n}], {desc: 'logical not'})\n\nconst emptyString = new Pipe([{\n  push: (value, vm, origin) => {\n    return ''\n  }\n}])\nemptyString.desc = 'Empty String'\n\nconst libPipes = {\n  Input,\n  concatA,\n  concatB,\n  incA,\n  incB,\n  dec,\n  whileCond,\n  repipeA,\n  repipeB,\n  bypass,\n  tmpPipe,\n  equialsB,\n  equialsA,\n  hiPipe,\n  byePipe,\n  locationHash,\n  fetchA,\n  fetchB,\n  upcase,\n  downcase,\n  locationHashResult,\n  isEmpty,\n  emptyString,\n  mulB,\n  mulA,\n  httpGet,\n  httpFetchStatus,\n  reduce,\n  reduceBody,\n  reduceCondition,\n  localStorageGet,\n  localStorageKey,\n  localStorageSet,\n  logicalNot,\n  lerdMap,\n  mapName,\n  locationQuery\n}\n\nfor (const i in libPipes) {\n  libPipes[i].id = `_l${i}`\n}\n\nexport {\n  libPipes,\n  concatA,\n  concatB,\n  incA,\n  incB,\n  dec,\n  whileCond,\n  repipeA,\n  repipeB,\n  bypass,\n  tmpPipe,\n  equialsB,\n  equialsA,\n  hiPipe,\n  byePipe,\n  locationHash,\n  fetchA,\n  fetchB,\n  upcase,\n  downcase,\n  locationHashResult,\n  isEmpty,\n  emptyString,\n  mulB,\n  mulA,\n  httpGet,\n  httpFetch,\n  httpFetchStatus,\n  sum,\n  sumArgument,\n  conditionLte,\n  conditionLteArgument,\n  logicalNot,\n  isPresent\n}\n","import React from \"react\"\nimport Inspector from \"react-inspector\"\nimport PipeSuggest from \"./pipe-suggest\"\nimport {VM} from \"../core/vm\"\nimport { Set, List} from \"immutable\"\n\nexport default class DepControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeInput: false\n    }\n  }\n\n  editForm(){\n    return <PipeSuggest pipeSearch={this.props.model.pipeSearch}\n                        autoFocus={true}\n                        controller={this.props.controller}\n                        model={this.props.model}\n                        onFocusOut={() => {\n                          this.setState({activeInput: false})\n                          this.props.model.textide.setState({readOnly: false})\n                        }}\n                        onChange={async (event, {suggestion, inlineCreated}) => {\n                          event.preventDefault()\n                          event.stopPropagation()\n                          let origin = this.props.getOrigin()\n                          this.props.pipeHelper.pipe.setDep(origin, this.props.requestedPipe, suggestion)\n                          this.setState({activeInput: false})\n                          this.props.model.textide.setState({readOnly: false})\n\n                          if (inlineCreated) {\n                            const helper = this.props.pipeHelper\n                            await helper.performPull()\n                            let id = this.props.model.currentVM.treeId()\n                            origin = this.props.getOrigin()\n                            let node1 = helper.tree.getIn(id.concat('origins').concat(List(origin)))\n                            let node = node1.getIn([this.props.requestedPipe].concat(suggestion))\n                            let nodePath = node.first().concat(suggestion)\n                            let vm = helper.tree.getIn(nodePath.concat('vm'))\n                            if (vm) {\n                              this.props.controller.setActiveVM(vm)\n                            } else {\n                              debugger\n                            }\n                          } else {\n                            this.props.controller.reload()\n                          }\n                        }}\n\n    />\n  }\n\n  render() {\n    if (!Set.isSet(this.props.treeIds)) {\n      debugger\n    }\n    let nodePath = this.props.treeIds.first().concat(this.props.resolvedPipe)\n    let resolvedPipeVM = this.props.pipeHelper.tree.getIn(nodePath.concat('vm'))\n    return <div contentEditable={false} className=\"pipe-row dep-control\">\n      <span>\n        <strong style={{whiteSpace: 'nowrap'}}>\n          {this.props.requestedPipe.desc}\n        </strong>\n        &nbsp;:&nbsp;\n        {\n          !this.state.activeInput &&\n          <span className=\"hide-child\">\n                <u onClick={e => {\n                  this.props.controller.setActiveVM(resolvedPipeVM)\n                }} className={this.props.localResolve ? 'b' : ''}>\n                  {this.props.resolvedPipe?.desc}\n                </u>\n            &nbsp;\n            {this.props.localResolve ?\n                <span className=\"child\">\n                  <u onClick={e => {\n                    this.setState({activeInput: true});\n                    this.props.model.textide.setState({readOnly: true})\n                  }}>\n                    edit\n                  </u>\n                  &nbsp;\n                  <u onClick={e => {\n                    this.props.pipeHelper.pipe.removeDep(this.props.localResolve, this.props.requestedPipe);\n                    this.props.controller.reload()\n                  }}>\n                    x\n                  </u>\n                </span>\n                :\n                (<u onClick={e => {\n                  this.props.model.textide.setState({readOnly: true});\n                  this.setState({activeInput: true})\n                }} className=\"child\">\n                  create\n                </u>)\n            }\n              </span>\n        }\n        {\n          this.state.activeInput && (\n            <span>\n              { this.editForm() }\n            </span>\n          )\n        }\n      </span>\n      <div className=\"inspectors\">\n        {this.props.resolvedPipe && this.props.treeIds.map(treeId => {\n          let nodePath = treeId.concat(this.props.resolvedPipe)\n          let result = this.props.pipeHelper.tree.getIn(nodePath.concat('result'))\n          let vm = this.props.pipeHelper.tree.getIn(nodePath.concat('vm'))\n\n          return <div className=\"inspector\" key={nodePath}>\n            <span className=\"mw6 dib\"><Inspector data={result} style={{display: 'inline-block'}}/></span>\n            <u onClick={event => {this.props.controller.setActiveVM(vm)}}/>\n          </div>\n        })}\n      </div>\n    </div>\n  }\n}\n","import React from 'react'\nimport Autosuggest from 'react-autosuggest'\nimport './autosuggest.css'\nimport {Block} from \"../core/block\"\n\nexport default class PipeSuggest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let value = props.dep\n    if (!value || !(value instanceof Block)) {\n      value = \"\"\n    }\n\n    this.state = {\n      value: value,\n      suggestions: []\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onFocusOut = this.onFocusOut.bind(this);\n    this.storeInputReference = this.storeInputReference.bind(this);\n    this.getSuggestions = this.getSuggestions.bind(this);\n  }\n\n  getSuggestions(value){\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return inputLength === 0 ? [] : this.props.pipeSearch.search(inputValue);\n  };\n\n\n  onSubmit() {\n    console.log('submit')\n    // this.props.parent.submitCell(this.props.index)\n    // this.props.block.content.push('')\n    // this.props.parent.update()\n  }\n\n  storeInputReference(autosuggest) {\n    if (autosuggest !== null) {\n      console.log('ref')\n      // this.props.inputRef(autosuggest.input)\n      this.input = autosuggest.input\n      this.input.addEventListener(\"focus\", this.onFocus)\n      this.input.addEventListener(\"focusout\", this.onFocusOut)\n    }\n  }\n\n  onFocus(){\n    // this.props.parent.active = this.props.index\n    console.log('onfocus')\n  }\n\n  onFocusOut(){\n    console.log('onfocusout')\n    if (this.props.onFocusOut) {\n      this.props.onFocusOut()\n    }\n  }\n\n  render() {\n    const { suggestions } = this.state;\n\n    // let value = this.props.block.content[this.props.index].toString();\n    let value = this.state.value\n    if ('string' !== typeof value){\n      value = value.content\n    }\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      autoFocus: this.props.autoFocus,\n      placeholder: 'name',\n      value: value,\n      onChange: (event, { newValue, method }) => {\n// event.preventDefault();\n// event.stopPropagation()\n        console.log('input props onchange')\n        // this.props.parent.changeCell(this.props.index, newValue)\n        // this.props.block.content[this.props.index]=newValue\n        // console.log(this.props.index)\n        // console.log(this.props.block.content)\n        // this.forceUpdate()\n        console.log('onchange')\n        console.log(newValue)\n        console.log(event)\n        // this.state.value = newValue\n        this.setState({\n          value: newValue\n        });\n      },\n      onKeyDown: (e) => {\n        // e.preventDefault()\n        // e.stopPropagation()\n        console.log('input props onkeydown')\n        if ('c' === e.key && e.ctrlKey) {\n          let pipe = this.props.controller.createPipe()\n          this.props.onChange(e, {suggestion: pipe, inlineCreated: true})\n        }\n        if ('C' === e.key && e.ctrlKey) {\n          let pipe = this.props.controller.createStringPipe()\n          this.props.onChange(e, {suggestion: pipe, inlineCreated: false})\n        }\n      }\n    };\n\n    // Finally, render it!\n    return (\n        <form onSubmit={e => {e.preventDefault(); this.onSubmit()}} style={{display: \"inline\", color: 'black'}}>\n          <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={({ value }) => {\n                this.setState({\n                  suggestions: this.getSuggestions(value)\n                });\n              }}\n              onSuggestionSelected={this.props.onChange}\n              onSuggestionsClearRequested={() => {\n                this.setState({\n                  suggestions: []\n                })}\n              }\n              getSuggestionValue={pipe => {\n                return pipe.desc;\n              }}\n              renderSuggestion={suggestion => (\n                  <div>\n                    {suggestion.desc}\n                  </div>\n              )}\n              inputProps={inputProps}\n              ref={this.storeInputReference}\n          />\n        </form>\n    );\n  }\n}\n"],"sourceRoot":""}